/** \file algo/swstate/auto_generated/access/dnx_algo_flexe_core_access.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef __DNX_ALGO_FLEXE_CORE_ACCESS_H__
#define __DNX_ALGO_FLEXE_CORE_ACCESS_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <bcm_int/dnx/algo/swstate/auto_generated/types/dnx_algo_flexe_core_types.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr_internal.h>
#include <bcm_int/dnx/port/flexe/flexe_core.h>
#include <soc/dnx/dnx_data/auto_generated/dnx_data_nif.h>
#include <soc/dnxc/swstate/callbacks/sw_state_ll_callbacks.h>
#include <soc/dnxc/swstate/types/sw_state_bitmap.h>
#include <soc/dnxc/swstate/types/sw_state_linked_list.h>
/*
 * TYPEDEFs
 */

/**
 * implemented by: dnx_algo_flexe_core_db_is_init
 */
typedef int (*dnx_algo_flexe_core_db_is_init_cb)(
    int unit, uint8 *is_init);

/**
 * implemented by: dnx_algo_flexe_core_db_init
 */
typedef int (*dnx_algo_flexe_core_db_init_cb)(
    int unit);

/**
 * implemented by: dnx_algo_flexe_core_db_drv_type_set
 */
typedef int (*dnx_algo_flexe_core_db_drv_type_set_cb)(
    int unit, flexe_core_dispatch_type_t drv_type);

/**
 * implemented by: dnx_algo_flexe_core_db_drv_type_get
 */
typedef int (*dnx_algo_flexe_core_db_drv_type_get_cb)(
    int unit, flexe_core_dispatch_type_t *drv_type);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_instance_set
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_instance_set_cb)(
    int unit, dnx_algo_res_t instance);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_instance_get
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_instance_get_cb)(
    int unit, dnx_algo_res_t *instance);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_instance_create
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_instance_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_instance_allocate_single
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_instance_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_instance_free_single
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_instance_free_single_cb)(
    int unit, int element);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_instance_is_allocated
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_instance_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_instance_nof_free_elements_get
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_instance_nof_free_elements_get_cb)(
    int unit, int *nof_free_elements);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_lphy_set
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_lphy_set_cb)(
    int unit, dnx_algo_res_t lphy);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_lphy_get
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_lphy_get_cb)(
    int unit, dnx_algo_res_t *lphy);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_lphy_create
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_lphy_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_lphy_allocate_single
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_lphy_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_lphy_free_single
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_lphy_free_single_cb)(
    int unit, int element);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_lphy_is_allocated
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_lphy_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_lphy_nof_free_elements_get
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_lphy_nof_free_elements_get_cb)(
    int unit, int *nof_free_elements);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_mac_timeslot_set
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_mac_timeslot_set_cb)(
    int unit, dnx_algo_res_t mac_timeslot);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_mac_timeslot_get
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_mac_timeslot_get_cb)(
    int unit, dnx_algo_res_t *mac_timeslot);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_mac_timeslot_create
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_mac_timeslot_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_mac_timeslot_allocate_single
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_mac_timeslot_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_mac_timeslot_free_single
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_mac_timeslot_free_single_cb)(
    int unit, int element);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_mac_timeslot_is_allocated
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_mac_timeslot_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_mac_timeslot_nof_free_elements_get
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_mac_timeslot_nof_free_elements_get_cb)(
    int unit, int *nof_free_elements);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_sar_rx_timeslot_set
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_sar_rx_timeslot_set_cb)(
    int unit, dnx_algo_res_t sar_rx_timeslot);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_sar_rx_timeslot_get
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_sar_rx_timeslot_get_cb)(
    int unit, dnx_algo_res_t *sar_rx_timeslot);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_sar_rx_timeslot_create
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_sar_rx_timeslot_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_sar_rx_timeslot_allocate_single
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_sar_rx_timeslot_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_sar_rx_timeslot_free_single
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_sar_rx_timeslot_free_single_cb)(
    int unit, int element);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_sar_rx_timeslot_is_allocated
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_sar_rx_timeslot_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_sar_rx_timeslot_nof_free_elements_get
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_sar_rx_timeslot_nof_free_elements_get_cb)(
    int unit, int *nof_free_elements);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_sar_tx_timeslot_set
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_sar_tx_timeslot_set_cb)(
    int unit, dnx_algo_res_t sar_tx_timeslot);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_sar_tx_timeslot_get
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_sar_tx_timeslot_get_cb)(
    int unit, dnx_algo_res_t *sar_tx_timeslot);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_sar_tx_timeslot_create
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_sar_tx_timeslot_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_sar_tx_timeslot_allocate_single
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_sar_tx_timeslot_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_sar_tx_timeslot_free_single
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_sar_tx_timeslot_free_single_cb)(
    int unit, int element);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_sar_tx_timeslot_is_allocated
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_sar_tx_timeslot_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_sar_tx_timeslot_nof_free_elements_get
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_sar_tx_timeslot_nof_free_elements_get_cb)(
    int unit, int *nof_free_elements);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_rateadpt_timeslot_set
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_rateadpt_timeslot_set_cb)(
    int unit, dnx_algo_res_t rateadpt_timeslot);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_rateadpt_timeslot_get
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_rateadpt_timeslot_get_cb)(
    int unit, dnx_algo_res_t *rateadpt_timeslot);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_rateadpt_timeslot_create
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_rateadpt_timeslot_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_rateadpt_timeslot_allocate_single
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_rateadpt_timeslot_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_rateadpt_timeslot_free_single
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_rateadpt_timeslot_free_single_cb)(
    int unit, int element);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_rateadpt_timeslot_is_allocated
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_rateadpt_timeslot_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: dnx_algo_flexe_core_db_resource_alloc_rateadpt_timeslot_nof_free_elements_get
 */
typedef int (*dnx_algo_flexe_core_db_resource_alloc_rateadpt_timeslot_nof_free_elements_get_cb)(
    int unit, int *nof_free_elements);

/**
 * implemented by: dnx_algo_flexe_core_db_group_alloc
 */
typedef int (*dnx_algo_flexe_core_db_group_alloc_cb)(
    int unit);

/**
 * implemented by: dnx_algo_flexe_core_db_group_flexe_ports_create_empty
 */
typedef int (*dnx_algo_flexe_core_db_group_flexe_ports_create_empty_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_init_info_t *init_info);

/**
 * implemented by: dnx_algo_flexe_core_db_group_flexe_ports_nof_elements
 */
typedef int (*dnx_algo_flexe_core_db_group_flexe_ports_nof_elements_cb)(
    int unit, uint32 group_idx_0, uint32 *nof_elements);

/**
 * implemented by: dnx_algo_flexe_core_db_group_flexe_ports_node_value
 */
typedef int (*dnx_algo_flexe_core_db_group_flexe_ports_node_value_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_node_t node, uint32 *value);

/**
 * implemented by: dnx_algo_flexe_core_db_group_flexe_ports_node_update
 */
typedef int (*dnx_algo_flexe_core_db_group_flexe_ports_node_update_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_node_t node, const uint32 *value);

/**
 * implemented by: dnx_algo_flexe_core_db_group_flexe_ports_next_node
 */
typedef int (*dnx_algo_flexe_core_db_group_flexe_ports_next_node_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_node_t node, sw_state_ll_node_t *next_node);

/**
 * implemented by: dnx_algo_flexe_core_db_group_flexe_ports_previous_node
 */
typedef int (*dnx_algo_flexe_core_db_group_flexe_ports_previous_node_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_node_t node, sw_state_ll_node_t *prev_node);

/**
 * implemented by: dnx_algo_flexe_core_db_group_flexe_ports_add_first
 */
typedef int (*dnx_algo_flexe_core_db_group_flexe_ports_add_first_cb)(
    int unit, uint32 group_idx_0, const uint32 *key, const uint32 *value);

/**
 * implemented by: dnx_algo_flexe_core_db_group_flexe_ports_add_last
 */
typedef int (*dnx_algo_flexe_core_db_group_flexe_ports_add_last_cb)(
    int unit, uint32 group_idx_0, const uint32 *key, const uint32 *value);

/**
 * implemented by: dnx_algo_flexe_core_db_group_flexe_ports_add_before
 */
typedef int (*dnx_algo_flexe_core_db_group_flexe_ports_add_before_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_node_t node, const uint32 *key, const uint32 *value);

/**
 * implemented by: dnx_algo_flexe_core_db_group_flexe_ports_add_after
 */
typedef int (*dnx_algo_flexe_core_db_group_flexe_ports_add_after_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_node_t node, const uint32 *key, const uint32 *value);

/**
 * implemented by: dnx_algo_flexe_core_db_group_flexe_ports_remove_node
 */
typedef int (*dnx_algo_flexe_core_db_group_flexe_ports_remove_node_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_node_t node);

/**
 * implemented by: dnx_algo_flexe_core_db_group_flexe_ports_get_last
 */
typedef int (*dnx_algo_flexe_core_db_group_flexe_ports_get_last_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_node_t *node);

/**
 * implemented by: dnx_algo_flexe_core_db_group_flexe_ports_get_first
 */
typedef int (*dnx_algo_flexe_core_db_group_flexe_ports_get_first_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_node_t *node);

/**
 * implemented by: dnx_algo_flexe_core_db_group_flexe_ports_print
 */
typedef int (*dnx_algo_flexe_core_db_group_flexe_ports_print_cb)(
    int unit, uint32 group_idx_0);

/**
 * implemented by: dnx_algo_flexe_core_db_group_flexe_ports_add
 */
typedef int (*dnx_algo_flexe_core_db_group_flexe_ports_add_cb)(
    int unit, uint32 group_idx_0, const uint32 *key, const uint32 *value);

/**
 * implemented by: dnx_algo_flexe_core_db_group_flexe_ports_node_key
 */
typedef int (*dnx_algo_flexe_core_db_group_flexe_ports_node_key_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_node_t node, uint32 *key);

/**
 * implemented by: dnx_algo_flexe_core_db_group_flexe_ports_find
 */
typedef int (*dnx_algo_flexe_core_db_group_flexe_ports_find_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_node_t *node, const uint32 *key, uint8 *found);

/**
 * implemented by: dnx_algo_flexe_core_db_group_clients_rx_create_empty
 */
typedef int (*dnx_algo_flexe_core_db_group_clients_rx_create_empty_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_init_info_t *init_info);

/**
 * implemented by: dnx_algo_flexe_core_db_group_clients_rx_nof_elements
 */
typedef int (*dnx_algo_flexe_core_db_group_clients_rx_nof_elements_cb)(
    int unit, uint32 group_idx_0, uint32 *nof_elements);

/**
 * implemented by: dnx_algo_flexe_core_db_group_clients_rx_node_value
 */
typedef int (*dnx_algo_flexe_core_db_group_clients_rx_node_value_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_node_t node, int *value);

/**
 * implemented by: dnx_algo_flexe_core_db_group_clients_rx_node_update
 */
typedef int (*dnx_algo_flexe_core_db_group_clients_rx_node_update_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_node_t node, const int *value);

/**
 * implemented by: dnx_algo_flexe_core_db_group_clients_rx_next_node
 */
typedef int (*dnx_algo_flexe_core_db_group_clients_rx_next_node_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_node_t node, sw_state_ll_node_t *next_node);

/**
 * implemented by: dnx_algo_flexe_core_db_group_clients_rx_previous_node
 */
typedef int (*dnx_algo_flexe_core_db_group_clients_rx_previous_node_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_node_t node, sw_state_ll_node_t *prev_node);

/**
 * implemented by: dnx_algo_flexe_core_db_group_clients_rx_add_first
 */
typedef int (*dnx_algo_flexe_core_db_group_clients_rx_add_first_cb)(
    int unit, uint32 group_idx_0, const int *value);

/**
 * implemented by: dnx_algo_flexe_core_db_group_clients_rx_add_last
 */
typedef int (*dnx_algo_flexe_core_db_group_clients_rx_add_last_cb)(
    int unit, uint32 group_idx_0, const int *value);

/**
 * implemented by: dnx_algo_flexe_core_db_group_clients_rx_add_before
 */
typedef int (*dnx_algo_flexe_core_db_group_clients_rx_add_before_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_node_t node, const int *value);

/**
 * implemented by: dnx_algo_flexe_core_db_group_clients_rx_add_after
 */
typedef int (*dnx_algo_flexe_core_db_group_clients_rx_add_after_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_node_t node, const int *value);

/**
 * implemented by: dnx_algo_flexe_core_db_group_clients_rx_remove_node
 */
typedef int (*dnx_algo_flexe_core_db_group_clients_rx_remove_node_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_node_t node);

/**
 * implemented by: dnx_algo_flexe_core_db_group_clients_rx_get_last
 */
typedef int (*dnx_algo_flexe_core_db_group_clients_rx_get_last_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_node_t *node);

/**
 * implemented by: dnx_algo_flexe_core_db_group_clients_rx_get_first
 */
typedef int (*dnx_algo_flexe_core_db_group_clients_rx_get_first_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_node_t *node);

/**
 * implemented by: dnx_algo_flexe_core_db_group_clients_rx_print
 */
typedef int (*dnx_algo_flexe_core_db_group_clients_rx_print_cb)(
    int unit, uint32 group_idx_0);

/**
 * implemented by: dnx_algo_flexe_core_db_group_clients_tx_create_empty
 */
typedef int (*dnx_algo_flexe_core_db_group_clients_tx_create_empty_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_init_info_t *init_info);

/**
 * implemented by: dnx_algo_flexe_core_db_group_clients_tx_nof_elements
 */
typedef int (*dnx_algo_flexe_core_db_group_clients_tx_nof_elements_cb)(
    int unit, uint32 group_idx_0, uint32 *nof_elements);

/**
 * implemented by: dnx_algo_flexe_core_db_group_clients_tx_node_value
 */
typedef int (*dnx_algo_flexe_core_db_group_clients_tx_node_value_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_node_t node, int *value);

/**
 * implemented by: dnx_algo_flexe_core_db_group_clients_tx_node_update
 */
typedef int (*dnx_algo_flexe_core_db_group_clients_tx_node_update_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_node_t node, const int *value);

/**
 * implemented by: dnx_algo_flexe_core_db_group_clients_tx_next_node
 */
typedef int (*dnx_algo_flexe_core_db_group_clients_tx_next_node_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_node_t node, sw_state_ll_node_t *next_node);

/**
 * implemented by: dnx_algo_flexe_core_db_group_clients_tx_previous_node
 */
typedef int (*dnx_algo_flexe_core_db_group_clients_tx_previous_node_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_node_t node, sw_state_ll_node_t *prev_node);

/**
 * implemented by: dnx_algo_flexe_core_db_group_clients_tx_add_first
 */
typedef int (*dnx_algo_flexe_core_db_group_clients_tx_add_first_cb)(
    int unit, uint32 group_idx_0, const int *value);

/**
 * implemented by: dnx_algo_flexe_core_db_group_clients_tx_add_last
 */
typedef int (*dnx_algo_flexe_core_db_group_clients_tx_add_last_cb)(
    int unit, uint32 group_idx_0, const int *value);

/**
 * implemented by: dnx_algo_flexe_core_db_group_clients_tx_add_before
 */
typedef int (*dnx_algo_flexe_core_db_group_clients_tx_add_before_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_node_t node, const int *value);

/**
 * implemented by: dnx_algo_flexe_core_db_group_clients_tx_add_after
 */
typedef int (*dnx_algo_flexe_core_db_group_clients_tx_add_after_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_node_t node, const int *value);

/**
 * implemented by: dnx_algo_flexe_core_db_group_clients_tx_remove_node
 */
typedef int (*dnx_algo_flexe_core_db_group_clients_tx_remove_node_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_node_t node);

/**
 * implemented by: dnx_algo_flexe_core_db_group_clients_tx_get_last
 */
typedef int (*dnx_algo_flexe_core_db_group_clients_tx_get_last_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_node_t *node);

/**
 * implemented by: dnx_algo_flexe_core_db_group_clients_tx_get_first
 */
typedef int (*dnx_algo_flexe_core_db_group_clients_tx_get_first_cb)(
    int unit, uint32 group_idx_0, sw_state_ll_node_t *node);

/**
 * implemented by: dnx_algo_flexe_core_db_group_clients_tx_print
 */
typedef int (*dnx_algo_flexe_core_db_group_clients_tx_print_cb)(
    int unit, uint32 group_idx_0);

/**
 * implemented by: dnx_algo_flexe_core_db_port_alloc
 */
typedef int (*dnx_algo_flexe_core_db_port_alloc_cb)(
    int unit);

/**
 * implemented by: dnx_algo_flexe_core_db_port_group_set
 */
typedef int (*dnx_algo_flexe_core_db_port_group_set_cb)(
    int unit, uint32 port_idx_0, int group);

/**
 * implemented by: dnx_algo_flexe_core_db_port_group_get
 */
typedef int (*dnx_algo_flexe_core_db_port_group_get_cb)(
    int unit, uint32 port_idx_0, int *group);

/**
 * implemented by: dnx_algo_flexe_core_db_port_logical_phy_id_set
 */
typedef int (*dnx_algo_flexe_core_db_port_logical_phy_id_set_cb)(
    int unit, uint32 port_idx_0, int logical_phy_id);

/**
 * implemented by: dnx_algo_flexe_core_db_port_logical_phy_id_get
 */
typedef int (*dnx_algo_flexe_core_db_port_logical_phy_id_get_cb)(
    int unit, uint32 port_idx_0, int *logical_phy_id);

/**
 * implemented by: dnx_algo_flexe_core_db_port_phy_speed_set
 */
typedef int (*dnx_algo_flexe_core_db_port_phy_speed_set_cb)(
    int unit, uint32 port_idx_0, int phy_speed);

/**
 * implemented by: dnx_algo_flexe_core_db_port_phy_speed_get
 */
typedef int (*dnx_algo_flexe_core_db_port_phy_speed_get_cb)(
    int unit, uint32 port_idx_0, int *phy_speed);

/**
 * implemented by: dnx_algo_flexe_core_db_port_serdes_rate_set
 */
typedef int (*dnx_algo_flexe_core_db_port_serdes_rate_set_cb)(
    int unit, uint32 port_idx_0, int serdes_rate);

/**
 * implemented by: dnx_algo_flexe_core_db_port_serdes_rate_get
 */
typedef int (*dnx_algo_flexe_core_db_port_serdes_rate_get_cb)(
    int unit, uint32 port_idx_0, int *serdes_rate);

/**
 * implemented by: dnx_algo_flexe_core_db_port_instance_set
 */
typedef int (*dnx_algo_flexe_core_db_port_instance_set_cb)(
    int unit, uint32 port_idx_0, int instance);

/**
 * implemented by: dnx_algo_flexe_core_db_port_instance_get
 */
typedef int (*dnx_algo_flexe_core_db_port_instance_get_cb)(
    int unit, uint32 port_idx_0, int *instance);

/**
 * implemented by: dnx_algo_flexe_core_db_port_nof_instances_set
 */
typedef int (*dnx_algo_flexe_core_db_port_nof_instances_set_cb)(
    int unit, uint32 port_idx_0, int nof_instances);

/**
 * implemented by: dnx_algo_flexe_core_db_port_nof_instances_get
 */
typedef int (*dnx_algo_flexe_core_db_port_nof_instances_get_cb)(
    int unit, uint32 port_idx_0, int *nof_instances);

/**
 * implemented by: dnx_algo_flexe_core_db_port_lphy_bitmap_bit_set
 */
typedef int (*dnx_algo_flexe_core_db_port_lphy_bitmap_bit_set_cb)(
    int unit, uint32 port_idx_0, uint32 _bit_num);

/**
 * implemented by: dnx_algo_flexe_core_db_port_lphy_bitmap_bit_clear
 */
typedef int (*dnx_algo_flexe_core_db_port_lphy_bitmap_bit_clear_cb)(
    int unit, uint32 port_idx_0, uint32 _bit_num);

/**
 * implemented by: dnx_algo_flexe_core_db_port_lphy_bitmap_bit_get
 */
typedef int (*dnx_algo_flexe_core_db_port_lphy_bitmap_bit_get_cb)(
    int unit, uint32 port_idx_0, uint32 _bit_num, uint8* result);

/**
 * implemented by: dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_read
 */
typedef int (*dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_read_cb)(
    int unit, uint32 port_idx_0, uint32 sw_state_bmp_first, uint32 result_first, uint32 _range, SHR_BITDCL *result);

/**
 * implemented by: dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_write
 */
typedef int (*dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_write_cb)(
    int unit, uint32 port_idx_0, uint32 sw_state_bmp_first, uint32 input_bmp_first, uint32 _range, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_and
 */
typedef int (*dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_and_cb)(
    int unit, uint32 port_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_or
 */
typedef int (*dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_or_cb)(
    int unit, uint32 port_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_xor
 */
typedef int (*dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_xor_cb)(
    int unit, uint32 port_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_remove
 */
typedef int (*dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_remove_cb)(
    int unit, uint32 port_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_negate
 */
typedef int (*dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_negate_cb)(
    int unit, uint32 port_idx_0, uint32 _first, uint32 _count);

/**
 * implemented by: dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_clear
 */
typedef int (*dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_clear_cb)(
    int unit, uint32 port_idx_0, uint32 _first, uint32 _count);

/**
 * implemented by: dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_set
 */
typedef int (*dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_set_cb)(
    int unit, uint32 port_idx_0, uint32 _first, uint32 _count);

/**
 * implemented by: dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_null
 */
typedef int (*dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_null_cb)(
    int unit, uint32 port_idx_0, uint32 _first, uint32 _count, uint8 *result);

/**
 * implemented by: dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_test
 */
typedef int (*dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_test_cb)(
    int unit, uint32 port_idx_0, uint32 _first, uint32 _count, uint8 *result);

/**
 * implemented by: dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_eq
 */
typedef int (*dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_eq_cb)(
    int unit, uint32 port_idx_0, SHR_BITDCL *input_bmp, uint32 _first, uint32 _count, uint8 *result);

/**
 * implemented by: dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_count
 */
typedef int (*dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_count_cb)(
    int unit, uint32 port_idx_0, uint32 _first, uint32 _range, int *result);

/**
 * implemented by: dnx_algo_flexe_core_db_port_is_100g_set
 */
typedef int (*dnx_algo_flexe_core_db_port_is_100g_set_cb)(
    int unit, uint32 port_idx_0, int is_100g);

/**
 * implemented by: dnx_algo_flexe_core_db_port_is_100g_get
 */
typedef int (*dnx_algo_flexe_core_db_port_is_100g_get_cb)(
    int unit, uint32 port_idx_0, int *is_100g);

/**
 * implemented by: dnx_algo_flexe_core_db_port_is_bypass_set
 */
typedef int (*dnx_algo_flexe_core_db_port_is_bypass_set_cb)(
    int unit, uint32 port_idx_0, int is_bypass);

/**
 * implemented by: dnx_algo_flexe_core_db_port_is_bypass_get
 */
typedef int (*dnx_algo_flexe_core_db_port_is_bypass_get_cb)(
    int unit, uint32 port_idx_0, int *is_bypass);

/**
 * implemented by: dnx_algo_flexe_core_db_mac_client_alloc
 */
typedef int (*dnx_algo_flexe_core_db_mac_client_alloc_cb)(
    int unit);

/**
 * implemented by: dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_set
 */
typedef int (*dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_set_cb)(
    int unit, uint32 mac_client_idx_0, uint32 _bit_num);

/**
 * implemented by: dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_clear
 */
typedef int (*dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_clear_cb)(
    int unit, uint32 mac_client_idx_0, uint32 _bit_num);

/**
 * implemented by: dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_get
 */
typedef int (*dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_get_cb)(
    int unit, uint32 mac_client_idx_0, uint32 _bit_num, uint8* result);

/**
 * implemented by: dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_read
 */
typedef int (*dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_read_cb)(
    int unit, uint32 mac_client_idx_0, uint32 sw_state_bmp_first, uint32 result_first, uint32 _range, SHR_BITDCL *result);

/**
 * implemented by: dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_write
 */
typedef int (*dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_write_cb)(
    int unit, uint32 mac_client_idx_0, uint32 sw_state_bmp_first, uint32 input_bmp_first, uint32 _range, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_and
 */
typedef int (*dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_and_cb)(
    int unit, uint32 mac_client_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_or
 */
typedef int (*dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_or_cb)(
    int unit, uint32 mac_client_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_xor
 */
typedef int (*dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_xor_cb)(
    int unit, uint32 mac_client_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_remove
 */
typedef int (*dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_remove_cb)(
    int unit, uint32 mac_client_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_negate
 */
typedef int (*dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_negate_cb)(
    int unit, uint32 mac_client_idx_0, uint32 _first, uint32 _count);

/**
 * implemented by: dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_clear
 */
typedef int (*dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_clear_cb)(
    int unit, uint32 mac_client_idx_0, uint32 _first, uint32 _count);

/**
 * implemented by: dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_set
 */
typedef int (*dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_set_cb)(
    int unit, uint32 mac_client_idx_0, uint32 _first, uint32 _count);

/**
 * implemented by: dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_null
 */
typedef int (*dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_null_cb)(
    int unit, uint32 mac_client_idx_0, uint32 _first, uint32 _count, uint8 *result);

/**
 * implemented by: dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_test
 */
typedef int (*dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_test_cb)(
    int unit, uint32 mac_client_idx_0, uint32 _first, uint32 _count, uint8 *result);

/**
 * implemented by: dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_eq
 */
typedef int (*dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_eq_cb)(
    int unit, uint32 mac_client_idx_0, SHR_BITDCL *input_bmp, uint32 _first, uint32 _count, uint8 *result);

/**
 * implemented by: dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_count
 */
typedef int (*dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_count_cb)(
    int unit, uint32 mac_client_idx_0, uint32 _first, uint32 _range, int *result);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_alloc
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_alloc_cb)(
    int unit);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_set
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_set_cb)(
    int unit, uint32 sar_client_idx_0, uint32 _bit_num);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_clear
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_clear_cb)(
    int unit, uint32 sar_client_idx_0, uint32 _bit_num);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_get
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_get_cb)(
    int unit, uint32 sar_client_idx_0, uint32 _bit_num, uint8* result);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_read
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_read_cb)(
    int unit, uint32 sar_client_idx_0, uint32 sw_state_bmp_first, uint32 result_first, uint32 _range, SHR_BITDCL *result);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_write
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_write_cb)(
    int unit, uint32 sar_client_idx_0, uint32 sw_state_bmp_first, uint32 input_bmp_first, uint32 _range, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_and
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_and_cb)(
    int unit, uint32 sar_client_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_or
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_or_cb)(
    int unit, uint32 sar_client_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_xor
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_xor_cb)(
    int unit, uint32 sar_client_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_remove
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_remove_cb)(
    int unit, uint32 sar_client_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_negate
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_negate_cb)(
    int unit, uint32 sar_client_idx_0, uint32 _first, uint32 _count);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_clear
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_clear_cb)(
    int unit, uint32 sar_client_idx_0, uint32 _first, uint32 _count);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_set
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_set_cb)(
    int unit, uint32 sar_client_idx_0, uint32 _first, uint32 _count);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_null
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_null_cb)(
    int unit, uint32 sar_client_idx_0, uint32 _first, uint32 _count, uint8 *result);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_test
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_test_cb)(
    int unit, uint32 sar_client_idx_0, uint32 _first, uint32 _count, uint8 *result);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_eq
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_eq_cb)(
    int unit, uint32 sar_client_idx_0, SHR_BITDCL *input_bmp, uint32 _first, uint32 _count, uint8 *result);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_count
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_count_cb)(
    int unit, uint32 sar_client_idx_0, uint32 _first, uint32 _range, int *result);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_set
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_set_cb)(
    int unit, uint32 sar_client_idx_0, uint32 _bit_num);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_clear
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_clear_cb)(
    int unit, uint32 sar_client_idx_0, uint32 _bit_num);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_get
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_get_cb)(
    int unit, uint32 sar_client_idx_0, uint32 _bit_num, uint8* result);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_read
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_read_cb)(
    int unit, uint32 sar_client_idx_0, uint32 sw_state_bmp_first, uint32 result_first, uint32 _range, SHR_BITDCL *result);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_write
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_write_cb)(
    int unit, uint32 sar_client_idx_0, uint32 sw_state_bmp_first, uint32 input_bmp_first, uint32 _range, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_and
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_and_cb)(
    int unit, uint32 sar_client_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_or
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_or_cb)(
    int unit, uint32 sar_client_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_xor
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_xor_cb)(
    int unit, uint32 sar_client_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_remove
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_remove_cb)(
    int unit, uint32 sar_client_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_negate
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_negate_cb)(
    int unit, uint32 sar_client_idx_0, uint32 _first, uint32 _count);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_clear
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_clear_cb)(
    int unit, uint32 sar_client_idx_0, uint32 _first, uint32 _count);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_set
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_set_cb)(
    int unit, uint32 sar_client_idx_0, uint32 _first, uint32 _count);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_null
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_null_cb)(
    int unit, uint32 sar_client_idx_0, uint32 _first, uint32 _count, uint8 *result);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_test
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_test_cb)(
    int unit, uint32 sar_client_idx_0, uint32 _first, uint32 _count, uint8 *result);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_eq
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_eq_cb)(
    int unit, uint32 sar_client_idx_0, SHR_BITDCL *input_bmp, uint32 _first, uint32 _count, uint8 *result);

/**
 * implemented by: dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_count
 */
typedef int (*dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_count_cb)(
    int unit, uint32 sar_client_idx_0, uint32 _first, uint32 _range, int *result);

/**
 * implemented by: dnx_algo_flexe_core_db_flexe_client_alloc
 */
typedef int (*dnx_algo_flexe_core_db_flexe_client_alloc_cb)(
    int unit);

/**
 * implemented by: dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_set
 */
typedef int (*dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_set_cb)(
    int unit, uint32 flexe_client_idx_0, uint32 _bit_num);

/**
 * implemented by: dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_clear
 */
typedef int (*dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_clear_cb)(
    int unit, uint32 flexe_client_idx_0, uint32 _bit_num);

/**
 * implemented by: dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_get
 */
typedef int (*dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_get_cb)(
    int unit, uint32 flexe_client_idx_0, uint32 _bit_num, uint8* result);

/**
 * implemented by: dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_read
 */
typedef int (*dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_read_cb)(
    int unit, uint32 flexe_client_idx_0, uint32 sw_state_bmp_first, uint32 result_first, uint32 _range, SHR_BITDCL *result);

/**
 * implemented by: dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_write
 */
typedef int (*dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_write_cb)(
    int unit, uint32 flexe_client_idx_0, uint32 sw_state_bmp_first, uint32 input_bmp_first, uint32 _range, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_and
 */
typedef int (*dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_and_cb)(
    int unit, uint32 flexe_client_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_or
 */
typedef int (*dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_or_cb)(
    int unit, uint32 flexe_client_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_xor
 */
typedef int (*dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_xor_cb)(
    int unit, uint32 flexe_client_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_remove
 */
typedef int (*dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_remove_cb)(
    int unit, uint32 flexe_client_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_negate
 */
typedef int (*dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_negate_cb)(
    int unit, uint32 flexe_client_idx_0, uint32 _first, uint32 _count);

/**
 * implemented by: dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_clear
 */
typedef int (*dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_clear_cb)(
    int unit, uint32 flexe_client_idx_0, uint32 _first, uint32 _count);

/**
 * implemented by: dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_set
 */
typedef int (*dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_set_cb)(
    int unit, uint32 flexe_client_idx_0, uint32 _first, uint32 _count);

/**
 * implemented by: dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_null
 */
typedef int (*dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_null_cb)(
    int unit, uint32 flexe_client_idx_0, uint32 _first, uint32 _count, uint8 *result);

/**
 * implemented by: dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_test
 */
typedef int (*dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_test_cb)(
    int unit, uint32 flexe_client_idx_0, uint32 _first, uint32 _count, uint8 *result);

/**
 * implemented by: dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_eq
 */
typedef int (*dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_eq_cb)(
    int unit, uint32 flexe_client_idx_0, SHR_BITDCL *input_bmp, uint32 _first, uint32 _count, uint8 *result);

/**
 * implemented by: dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_count
 */
typedef int (*dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_count_cb)(
    int unit, uint32 flexe_client_idx_0, uint32 _first, uint32 _range, int *result);

/*
 * STRUCTs
 */

/**
 * This structure holds the access functions for the variable drv_type
 */
typedef struct {
    dnx_algo_flexe_core_db_drv_type_set_cb set;
    dnx_algo_flexe_core_db_drv_type_get_cb get;
} dnx_algo_flexe_core_db_drv_type_cbs;

/**
 * This structure holds the access functions for the variable instance
 */
typedef struct {
    dnx_algo_flexe_core_db_resource_alloc_instance_set_cb set;
    dnx_algo_flexe_core_db_resource_alloc_instance_get_cb get;
    dnx_algo_flexe_core_db_resource_alloc_instance_create_cb create;
    dnx_algo_flexe_core_db_resource_alloc_instance_allocate_single_cb allocate_single;
    dnx_algo_flexe_core_db_resource_alloc_instance_free_single_cb free_single;
    dnx_algo_flexe_core_db_resource_alloc_instance_is_allocated_cb is_allocated;
    dnx_algo_flexe_core_db_resource_alloc_instance_nof_free_elements_get_cb nof_free_elements_get;
} dnx_algo_flexe_core_db_resource_alloc_instance_cbs;

/**
 * This structure holds the access functions for the variable lphy
 */
typedef struct {
    dnx_algo_flexe_core_db_resource_alloc_lphy_set_cb set;
    dnx_algo_flexe_core_db_resource_alloc_lphy_get_cb get;
    dnx_algo_flexe_core_db_resource_alloc_lphy_create_cb create;
    dnx_algo_flexe_core_db_resource_alloc_lphy_allocate_single_cb allocate_single;
    dnx_algo_flexe_core_db_resource_alloc_lphy_free_single_cb free_single;
    dnx_algo_flexe_core_db_resource_alloc_lphy_is_allocated_cb is_allocated;
    dnx_algo_flexe_core_db_resource_alloc_lphy_nof_free_elements_get_cb nof_free_elements_get;
} dnx_algo_flexe_core_db_resource_alloc_lphy_cbs;

/**
 * This structure holds the access functions for the variable mac_timeslot
 */
typedef struct {
    dnx_algo_flexe_core_db_resource_alloc_mac_timeslot_set_cb set;
    dnx_algo_flexe_core_db_resource_alloc_mac_timeslot_get_cb get;
    dnx_algo_flexe_core_db_resource_alloc_mac_timeslot_create_cb create;
    dnx_algo_flexe_core_db_resource_alloc_mac_timeslot_allocate_single_cb allocate_single;
    dnx_algo_flexe_core_db_resource_alloc_mac_timeslot_free_single_cb free_single;
    dnx_algo_flexe_core_db_resource_alloc_mac_timeslot_is_allocated_cb is_allocated;
    dnx_algo_flexe_core_db_resource_alloc_mac_timeslot_nof_free_elements_get_cb nof_free_elements_get;
} dnx_algo_flexe_core_db_resource_alloc_mac_timeslot_cbs;

/**
 * This structure holds the access functions for the variable sar_rx_timeslot
 */
typedef struct {
    dnx_algo_flexe_core_db_resource_alloc_sar_rx_timeslot_set_cb set;
    dnx_algo_flexe_core_db_resource_alloc_sar_rx_timeslot_get_cb get;
    dnx_algo_flexe_core_db_resource_alloc_sar_rx_timeslot_create_cb create;
    dnx_algo_flexe_core_db_resource_alloc_sar_rx_timeslot_allocate_single_cb allocate_single;
    dnx_algo_flexe_core_db_resource_alloc_sar_rx_timeslot_free_single_cb free_single;
    dnx_algo_flexe_core_db_resource_alloc_sar_rx_timeslot_is_allocated_cb is_allocated;
    dnx_algo_flexe_core_db_resource_alloc_sar_rx_timeslot_nof_free_elements_get_cb nof_free_elements_get;
} dnx_algo_flexe_core_db_resource_alloc_sar_rx_timeslot_cbs;

/**
 * This structure holds the access functions for the variable sar_tx_timeslot
 */
typedef struct {
    dnx_algo_flexe_core_db_resource_alloc_sar_tx_timeslot_set_cb set;
    dnx_algo_flexe_core_db_resource_alloc_sar_tx_timeslot_get_cb get;
    dnx_algo_flexe_core_db_resource_alloc_sar_tx_timeslot_create_cb create;
    dnx_algo_flexe_core_db_resource_alloc_sar_tx_timeslot_allocate_single_cb allocate_single;
    dnx_algo_flexe_core_db_resource_alloc_sar_tx_timeslot_free_single_cb free_single;
    dnx_algo_flexe_core_db_resource_alloc_sar_tx_timeslot_is_allocated_cb is_allocated;
    dnx_algo_flexe_core_db_resource_alloc_sar_tx_timeslot_nof_free_elements_get_cb nof_free_elements_get;
} dnx_algo_flexe_core_db_resource_alloc_sar_tx_timeslot_cbs;

/**
 * This structure holds the access functions for the variable rateadpt_timeslot
 */
typedef struct {
    dnx_algo_flexe_core_db_resource_alloc_rateadpt_timeslot_set_cb set;
    dnx_algo_flexe_core_db_resource_alloc_rateadpt_timeslot_get_cb get;
    dnx_algo_flexe_core_db_resource_alloc_rateadpt_timeslot_create_cb create;
    dnx_algo_flexe_core_db_resource_alloc_rateadpt_timeslot_allocate_single_cb allocate_single;
    dnx_algo_flexe_core_db_resource_alloc_rateadpt_timeslot_free_single_cb free_single;
    dnx_algo_flexe_core_db_resource_alloc_rateadpt_timeslot_is_allocated_cb is_allocated;
    dnx_algo_flexe_core_db_resource_alloc_rateadpt_timeslot_nof_free_elements_get_cb nof_free_elements_get;
} dnx_algo_flexe_core_db_resource_alloc_rateadpt_timeslot_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_flexe_core_resource_alloc_t
 */
typedef struct {
    /**
     * Access struct for instance
     */
    dnx_algo_flexe_core_db_resource_alloc_instance_cbs instance;
    /**
     * Access struct for lphy
     */
    dnx_algo_flexe_core_db_resource_alloc_lphy_cbs lphy;
    /**
     * Access struct for mac_timeslot
     */
    dnx_algo_flexe_core_db_resource_alloc_mac_timeslot_cbs mac_timeslot;
    /**
     * Access struct for sar_rx_timeslot
     */
    dnx_algo_flexe_core_db_resource_alloc_sar_rx_timeslot_cbs sar_rx_timeslot;
    /**
     * Access struct for sar_tx_timeslot
     */
    dnx_algo_flexe_core_db_resource_alloc_sar_tx_timeslot_cbs sar_tx_timeslot;
    /**
     * Access struct for rateadpt_timeslot
     */
    dnx_algo_flexe_core_db_resource_alloc_rateadpt_timeslot_cbs rateadpt_timeslot;
} dnx_algo_flexe_core_db_resource_alloc_cbs;

/**
 * This structure holds the access functions for the variable flexe_ports
 */
typedef struct {
    dnx_algo_flexe_core_db_group_flexe_ports_create_empty_cb create_empty;
    dnx_algo_flexe_core_db_group_flexe_ports_nof_elements_cb nof_elements;
    dnx_algo_flexe_core_db_group_flexe_ports_node_value_cb node_value;
    dnx_algo_flexe_core_db_group_flexe_ports_node_update_cb node_update;
    dnx_algo_flexe_core_db_group_flexe_ports_next_node_cb next_node;
    dnx_algo_flexe_core_db_group_flexe_ports_previous_node_cb previous_node;
    dnx_algo_flexe_core_db_group_flexe_ports_add_first_cb add_first;
    dnx_algo_flexe_core_db_group_flexe_ports_add_last_cb add_last;
    dnx_algo_flexe_core_db_group_flexe_ports_add_before_cb add_before;
    dnx_algo_flexe_core_db_group_flexe_ports_add_after_cb add_after;
    dnx_algo_flexe_core_db_group_flexe_ports_remove_node_cb remove_node;
    dnx_algo_flexe_core_db_group_flexe_ports_get_last_cb get_last;
    dnx_algo_flexe_core_db_group_flexe_ports_get_first_cb get_first;
    dnx_algo_flexe_core_db_group_flexe_ports_print_cb print;
    dnx_algo_flexe_core_db_group_flexe_ports_add_cb add;
    dnx_algo_flexe_core_db_group_flexe_ports_node_key_cb node_key;
    dnx_algo_flexe_core_db_group_flexe_ports_find_cb find;
} dnx_algo_flexe_core_db_group_flexe_ports_cbs;

/**
 * This structure holds the access functions for the variable clients_rx
 */
typedef struct {
    dnx_algo_flexe_core_db_group_clients_rx_create_empty_cb create_empty;
    dnx_algo_flexe_core_db_group_clients_rx_nof_elements_cb nof_elements;
    dnx_algo_flexe_core_db_group_clients_rx_node_value_cb node_value;
    dnx_algo_flexe_core_db_group_clients_rx_node_update_cb node_update;
    dnx_algo_flexe_core_db_group_clients_rx_next_node_cb next_node;
    dnx_algo_flexe_core_db_group_clients_rx_previous_node_cb previous_node;
    dnx_algo_flexe_core_db_group_clients_rx_add_first_cb add_first;
    dnx_algo_flexe_core_db_group_clients_rx_add_last_cb add_last;
    dnx_algo_flexe_core_db_group_clients_rx_add_before_cb add_before;
    dnx_algo_flexe_core_db_group_clients_rx_add_after_cb add_after;
    dnx_algo_flexe_core_db_group_clients_rx_remove_node_cb remove_node;
    dnx_algo_flexe_core_db_group_clients_rx_get_last_cb get_last;
    dnx_algo_flexe_core_db_group_clients_rx_get_first_cb get_first;
    dnx_algo_flexe_core_db_group_clients_rx_print_cb print;
} dnx_algo_flexe_core_db_group_clients_rx_cbs;

/**
 * This structure holds the access functions for the variable clients_tx
 */
typedef struct {
    dnx_algo_flexe_core_db_group_clients_tx_create_empty_cb create_empty;
    dnx_algo_flexe_core_db_group_clients_tx_nof_elements_cb nof_elements;
    dnx_algo_flexe_core_db_group_clients_tx_node_value_cb node_value;
    dnx_algo_flexe_core_db_group_clients_tx_node_update_cb node_update;
    dnx_algo_flexe_core_db_group_clients_tx_next_node_cb next_node;
    dnx_algo_flexe_core_db_group_clients_tx_previous_node_cb previous_node;
    dnx_algo_flexe_core_db_group_clients_tx_add_first_cb add_first;
    dnx_algo_flexe_core_db_group_clients_tx_add_last_cb add_last;
    dnx_algo_flexe_core_db_group_clients_tx_add_before_cb add_before;
    dnx_algo_flexe_core_db_group_clients_tx_add_after_cb add_after;
    dnx_algo_flexe_core_db_group_clients_tx_remove_node_cb remove_node;
    dnx_algo_flexe_core_db_group_clients_tx_get_last_cb get_last;
    dnx_algo_flexe_core_db_group_clients_tx_get_first_cb get_first;
    dnx_algo_flexe_core_db_group_clients_tx_print_cb print;
} dnx_algo_flexe_core_db_group_clients_tx_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_flexe_core_group_info_t
 */
typedef struct {
    dnx_algo_flexe_core_db_group_alloc_cb alloc;
    /**
     * Access struct for flexe_ports
     */
    dnx_algo_flexe_core_db_group_flexe_ports_cbs flexe_ports;
    /**
     * Access struct for clients_rx
     */
    dnx_algo_flexe_core_db_group_clients_rx_cbs clients_rx;
    /**
     * Access struct for clients_tx
     */
    dnx_algo_flexe_core_db_group_clients_tx_cbs clients_tx;
} dnx_algo_flexe_core_db_group_cbs;

/**
 * This structure holds the access functions for the variable group
 */
typedef struct {
    dnx_algo_flexe_core_db_port_group_set_cb set;
    dnx_algo_flexe_core_db_port_group_get_cb get;
} dnx_algo_flexe_core_db_port_group_cbs;

/**
 * This structure holds the access functions for the variable logical_phy_id
 */
typedef struct {
    dnx_algo_flexe_core_db_port_logical_phy_id_set_cb set;
    dnx_algo_flexe_core_db_port_logical_phy_id_get_cb get;
} dnx_algo_flexe_core_db_port_logical_phy_id_cbs;

/**
 * This structure holds the access functions for the variable phy_speed
 */
typedef struct {
    dnx_algo_flexe_core_db_port_phy_speed_set_cb set;
    dnx_algo_flexe_core_db_port_phy_speed_get_cb get;
} dnx_algo_flexe_core_db_port_phy_speed_cbs;

/**
 * This structure holds the access functions for the variable serdes_rate
 */
typedef struct {
    dnx_algo_flexe_core_db_port_serdes_rate_set_cb set;
    dnx_algo_flexe_core_db_port_serdes_rate_get_cb get;
} dnx_algo_flexe_core_db_port_serdes_rate_cbs;

/**
 * This structure holds the access functions for the variable instance
 */
typedef struct {
    dnx_algo_flexe_core_db_port_instance_set_cb set;
    dnx_algo_flexe_core_db_port_instance_get_cb get;
} dnx_algo_flexe_core_db_port_instance_cbs;

/**
 * This structure holds the access functions for the variable nof_instances
 */
typedef struct {
    dnx_algo_flexe_core_db_port_nof_instances_set_cb set;
    dnx_algo_flexe_core_db_port_nof_instances_get_cb get;
} dnx_algo_flexe_core_db_port_nof_instances_cbs;

/**
 * This structure holds the access functions for the variable lphy_bitmap
 */
typedef struct {
    dnx_algo_flexe_core_db_port_lphy_bitmap_bit_set_cb bit_set;
    dnx_algo_flexe_core_db_port_lphy_bitmap_bit_clear_cb bit_clear;
    dnx_algo_flexe_core_db_port_lphy_bitmap_bit_get_cb bit_get;
    dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_read_cb bit_range_read;
    dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_write_cb bit_range_write;
    dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_and_cb bit_range_and;
    dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_or_cb bit_range_or;
    dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_xor_cb bit_range_xor;
    dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_remove_cb bit_range_remove;
    dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_negate_cb bit_range_negate;
    dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_clear_cb bit_range_clear;
    dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_set_cb bit_range_set;
    dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_null_cb bit_range_null;
    dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_test_cb bit_range_test;
    dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_eq_cb bit_range_eq;
    dnx_algo_flexe_core_db_port_lphy_bitmap_bit_range_count_cb bit_range_count;
} dnx_algo_flexe_core_db_port_lphy_bitmap_cbs;

/**
 * This structure holds the access functions for the variable is_100g
 */
typedef struct {
    dnx_algo_flexe_core_db_port_is_100g_set_cb set;
    dnx_algo_flexe_core_db_port_is_100g_get_cb get;
} dnx_algo_flexe_core_db_port_is_100g_cbs;

/**
 * This structure holds the access functions for the variable is_bypass
 */
typedef struct {
    dnx_algo_flexe_core_db_port_is_bypass_set_cb set;
    dnx_algo_flexe_core_db_port_is_bypass_get_cb get;
} dnx_algo_flexe_core_db_port_is_bypass_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_flexe_core_port_info_t
 */
typedef struct {
    dnx_algo_flexe_core_db_port_alloc_cb alloc;
    /**
     * Access struct for group
     */
    dnx_algo_flexe_core_db_port_group_cbs group;
    /**
     * Access struct for logical_phy_id
     */
    dnx_algo_flexe_core_db_port_logical_phy_id_cbs logical_phy_id;
    /**
     * Access struct for phy_speed
     */
    dnx_algo_flexe_core_db_port_phy_speed_cbs phy_speed;
    /**
     * Access struct for serdes_rate
     */
    dnx_algo_flexe_core_db_port_serdes_rate_cbs serdes_rate;
    /**
     * Access struct for instance
     */
    dnx_algo_flexe_core_db_port_instance_cbs instance;
    /**
     * Access struct for nof_instances
     */
    dnx_algo_flexe_core_db_port_nof_instances_cbs nof_instances;
    /**
     * Access struct for lphy_bitmap
     */
    dnx_algo_flexe_core_db_port_lphy_bitmap_cbs lphy_bitmap;
    /**
     * Access struct for is_100g
     */
    dnx_algo_flexe_core_db_port_is_100g_cbs is_100g;
    /**
     * Access struct for is_bypass
     */
    dnx_algo_flexe_core_db_port_is_bypass_cbs is_bypass;
} dnx_algo_flexe_core_db_port_cbs;

/**
 * This structure holds the access functions for the variable timeslot_bitmap
 */
typedef struct {
    dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_set_cb bit_set;
    dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_clear_cb bit_clear;
    dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_get_cb bit_get;
    dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_read_cb bit_range_read;
    dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_write_cb bit_range_write;
    dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_and_cb bit_range_and;
    dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_or_cb bit_range_or;
    dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_xor_cb bit_range_xor;
    dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_remove_cb bit_range_remove;
    dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_negate_cb bit_range_negate;
    dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_clear_cb bit_range_clear;
    dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_set_cb bit_range_set;
    dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_null_cb bit_range_null;
    dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_test_cb bit_range_test;
    dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_eq_cb bit_range_eq;
    dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_bit_range_count_cb bit_range_count;
} dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_flexe_core_mac_channel_info_t
 */
typedef struct {
    dnx_algo_flexe_core_db_mac_client_alloc_cb alloc;
    /**
     * Access struct for timeslot_bitmap
     */
    dnx_algo_flexe_core_db_mac_client_timeslot_bitmap_cbs timeslot_bitmap;
} dnx_algo_flexe_core_db_mac_client_cbs;

/**
 * This structure holds the access functions for the variable rx_timeslot_bitmap
 */
typedef struct {
    dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_set_cb bit_set;
    dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_clear_cb bit_clear;
    dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_get_cb bit_get;
    dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_read_cb bit_range_read;
    dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_write_cb bit_range_write;
    dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_and_cb bit_range_and;
    dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_or_cb bit_range_or;
    dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_xor_cb bit_range_xor;
    dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_remove_cb bit_range_remove;
    dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_negate_cb bit_range_negate;
    dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_clear_cb bit_range_clear;
    dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_set_cb bit_range_set;
    dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_null_cb bit_range_null;
    dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_test_cb bit_range_test;
    dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_eq_cb bit_range_eq;
    dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_bit_range_count_cb bit_range_count;
} dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_cbs;

/**
 * This structure holds the access functions for the variable tx_timeslot_bitmap
 */
typedef struct {
    dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_set_cb bit_set;
    dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_clear_cb bit_clear;
    dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_get_cb bit_get;
    dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_read_cb bit_range_read;
    dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_write_cb bit_range_write;
    dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_and_cb bit_range_and;
    dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_or_cb bit_range_or;
    dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_xor_cb bit_range_xor;
    dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_remove_cb bit_range_remove;
    dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_negate_cb bit_range_negate;
    dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_clear_cb bit_range_clear;
    dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_set_cb bit_range_set;
    dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_null_cb bit_range_null;
    dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_test_cb bit_range_test;
    dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_eq_cb bit_range_eq;
    dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_bit_range_count_cb bit_range_count;
} dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_flexe_core_sar_channel_info_t
 */
typedef struct {
    dnx_algo_flexe_core_db_sar_client_alloc_cb alloc;
    /**
     * Access struct for rx_timeslot_bitmap
     */
    dnx_algo_flexe_core_db_sar_client_rx_timeslot_bitmap_cbs rx_timeslot_bitmap;
    /**
     * Access struct for tx_timeslot_bitmap
     */
    dnx_algo_flexe_core_db_sar_client_tx_timeslot_bitmap_cbs tx_timeslot_bitmap;
} dnx_algo_flexe_core_db_sar_client_cbs;

/**
 * This structure holds the access functions for the variable timeslot_bitmap
 */
typedef struct {
    dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_set_cb bit_set;
    dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_clear_cb bit_clear;
    dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_get_cb bit_get;
    dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_read_cb bit_range_read;
    dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_write_cb bit_range_write;
    dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_and_cb bit_range_and;
    dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_or_cb bit_range_or;
    dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_xor_cb bit_range_xor;
    dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_remove_cb bit_range_remove;
    dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_negate_cb bit_range_negate;
    dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_clear_cb bit_range_clear;
    dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_set_cb bit_range_set;
    dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_null_cb bit_range_null;
    dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_test_cb bit_range_test;
    dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_eq_cb bit_range_eq;
    dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_bit_range_count_cb bit_range_count;
} dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_flexe_core_channel_info_t
 */
typedef struct {
    dnx_algo_flexe_core_db_flexe_client_alloc_cb alloc;
    /**
     * Access struct for timeslot_bitmap
     */
    dnx_algo_flexe_core_db_flexe_client_timeslot_bitmap_cbs timeslot_bitmap;
} dnx_algo_flexe_core_db_flexe_client_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_flexe_core_db_t
 */
typedef struct {
    dnx_algo_flexe_core_db_is_init_cb is_init;
    dnx_algo_flexe_core_db_init_cb init;
    /**
     * Access struct for drv_type
     */
    dnx_algo_flexe_core_db_drv_type_cbs drv_type;
    /**
     * Access struct for resource_alloc
     */
    dnx_algo_flexe_core_db_resource_alloc_cbs resource_alloc;
    /**
     * Access struct for group
     */
    dnx_algo_flexe_core_db_group_cbs group;
    /**
     * Access struct for port
     */
    dnx_algo_flexe_core_db_port_cbs port;
    /**
     * Access struct for mac_client
     */
    dnx_algo_flexe_core_db_mac_client_cbs mac_client;
    /**
     * Access struct for sar_client
     */
    dnx_algo_flexe_core_db_sar_client_cbs sar_client;
    /**
     * Access struct for flexe_client
     */
    dnx_algo_flexe_core_db_flexe_client_cbs flexe_client;
} dnx_algo_flexe_core_db_cbs;

/*
 * Global Variables
 */

/*
 * Global Variables
 */

extern dnx_algo_flexe_core_db_cbs dnx_algo_flexe_core_db;

#endif /* __DNX_ALGO_FLEXE_CORE_ACCESS_H__ */
