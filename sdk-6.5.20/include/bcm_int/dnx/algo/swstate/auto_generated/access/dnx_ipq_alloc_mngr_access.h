/** \file algo/swstate/auto_generated/access/dnx_ipq_alloc_mngr_access.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef __DNX_IPQ_ALLOC_MNGR_ACCESS_H__
#define __DNX_IPQ_ALLOC_MNGR_ACCESS_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <bcm_int/dnx/algo/swstate/auto_generated/types/dnx_ipq_alloc_mngr_types.h>
#include <bcm_int/dnx/algo/ipq/ipq_alloc_mngr.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr_internal.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr_internal.h>
#include <bcm_int/dnx/cosq/cosq.h>
/*
 * TYPEDEFs
 */

/**
 * implemented by: dnx_ipq_alloc_mngr_db_is_init
 */
typedef int (*dnx_ipq_alloc_mngr_db_is_init_cb)(
    int unit, uint8 *is_init);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_init
 */
typedef int (*dnx_ipq_alloc_mngr_db_init_cb)(
    int unit);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_regions_alloc
 */
typedef int (*dnx_ipq_alloc_mngr_db_regions_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_regions_type_set
 */
typedef int (*dnx_ipq_alloc_mngr_db_regions_type_set_cb)(
    int unit, uint32 regions_idx_0, dnx_ipq_region_type_e type);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_regions_type_get
 */
typedef int (*dnx_ipq_alloc_mngr_db_regions_type_get_cb)(
    int unit, uint32 regions_idx_0, dnx_ipq_region_type_e *type);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_regions_nof_allocated_queue_quartets_set
 */
typedef int (*dnx_ipq_alloc_mngr_db_regions_nof_allocated_queue_quartets_set_cb)(
    int unit, uint32 regions_idx_0, uint32 nof_allocated_queue_quartets);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_regions_nof_allocated_queue_quartets_get
 */
typedef int (*dnx_ipq_alloc_mngr_db_regions_nof_allocated_queue_quartets_get_cb)(
    int unit, uint32 regions_idx_0, uint32 *nof_allocated_queue_quartets);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_fmq_is_enhance_scheduler_mode_set
 */
typedef int (*dnx_ipq_alloc_mngr_db_fmq_is_enhance_scheduler_mode_set_cb)(
    int unit, int is_enhance_scheduler_mode);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_fmq_is_enhance_scheduler_mode_get
 */
typedef int (*dnx_ipq_alloc_mngr_db_fmq_is_enhance_scheduler_mode_get_cb)(
    int unit, int *is_enhance_scheduler_mode);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_fmq_max_multicast_queue_set
 */
typedef int (*dnx_ipq_alloc_mngr_db_fmq_max_multicast_queue_set_cb)(
    int unit, int max_multicast_queue);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_fmq_max_multicast_queue_get
 */
typedef int (*dnx_ipq_alloc_mngr_db_fmq_max_multicast_queue_get_cb)(
    int unit, int *max_multicast_queue);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_ipq_alloc_mngr_set
 */
typedef int (*dnx_ipq_alloc_mngr_db_ipq_alloc_mngr_set_cb)(
    int unit, dnx_algo_res_t ipq_alloc_mngr);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_ipq_alloc_mngr_get
 */
typedef int (*dnx_ipq_alloc_mngr_db_ipq_alloc_mngr_get_cb)(
    int unit, dnx_algo_res_t *ipq_alloc_mngr);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_ipq_alloc_mngr_create
 */
typedef int (*dnx_ipq_alloc_mngr_db_ipq_alloc_mngr_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_ipq_alloc_mngr_allocate_single
 */
typedef int (*dnx_ipq_alloc_mngr_db_ipq_alloc_mngr_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_ipq_alloc_mngr_free_single
 */
typedef int (*dnx_ipq_alloc_mngr_db_ipq_alloc_mngr_free_single_cb)(
    int unit, int element);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_ipq_alloc_mngr_is_allocated
 */
typedef int (*dnx_ipq_alloc_mngr_db_ipq_alloc_mngr_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_ipq_alloc_mngr_nof_allocated_elements_in_range_get
 */
typedef int (*dnx_ipq_alloc_mngr_db_ipq_alloc_mngr_nof_allocated_elements_in_range_get_cb)(
    int unit, int range_start, int nof_elements_in_range, int *nof_allocated_elements);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_tc_voq_flow_map_set
 */
typedef int (*dnx_ipq_alloc_mngr_db_tc_voq_flow_map_set_cb)(
    int unit, uint32 tc_voq_flow_map_idx_0, dnx_algo_template_t tc_voq_flow_map);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_tc_voq_flow_map_get
 */
typedef int (*dnx_ipq_alloc_mngr_db_tc_voq_flow_map_get_cb)(
    int unit, uint32 tc_voq_flow_map_idx_0, dnx_algo_template_t *tc_voq_flow_map);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_tc_voq_flow_map_alloc
 */
typedef int (*dnx_ipq_alloc_mngr_db_tc_voq_flow_map_alloc_cb)(
    int unit);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_tc_voq_flow_map_create
 */
typedef int (*dnx_ipq_alloc_mngr_db_tc_voq_flow_map_create_cb)(
    int unit, uint32 tc_voq_flow_map_idx_0, dnx_algo_template_create_data_t * data, void *extra_arguments);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_tc_voq_flow_map_exchange
 */
typedef int (*dnx_ipq_alloc_mngr_db_tc_voq_flow_map_exchange_cb)(
    int unit, uint32 tc_voq_flow_map_idx_0, uint32 flags, const dnx_ipq_tc_map_t *profile_data, int old_profile, const void *extra_arguments, int *new_profile, uint8 *first_reference, uint8 *last_reference);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_tc_voq_flow_map_replace_data
 */
typedef int (*dnx_ipq_alloc_mngr_db_tc_voq_flow_map_replace_data_cb)(
    int unit, uint32 tc_voq_flow_map_idx_0, int profile,  const dnx_ipq_tc_map_t *new_profile_data);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_tc_voq_flow_map_profile_data_get
 */
typedef int (*dnx_ipq_alloc_mngr_db_tc_voq_flow_map_profile_data_get_cb)(
    int unit, uint32 tc_voq_flow_map_idx_0, int profile, int *ref_count, dnx_ipq_tc_map_t *profile_data);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_tc_voq_flow_map_profile_get
 */
typedef int (*dnx_ipq_alloc_mngr_db_tc_voq_flow_map_profile_get_cb)(
    int unit, uint32 tc_voq_flow_map_idx_0, const dnx_ipq_tc_map_t *profile_data, int *profile);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_tc_voq_flow_map_get_next
 */
typedef int (*dnx_ipq_alloc_mngr_db_tc_voq_flow_map_get_next_cb)(
    int unit, uint32 tc_voq_flow_map_idx_0, int *current_profile);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_tc_voq_flow_map_dump_info_get
 */
typedef int (*dnx_ipq_alloc_mngr_db_tc_voq_flow_map_dump_info_get_cb)(
    int unit, uint32 tc_voq_flow_map_idx_0, dnx_algo_template_dump_data_t * info);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_tc_sysport_map_set
 */
typedef int (*dnx_ipq_alloc_mngr_db_tc_sysport_map_set_cb)(
    int unit, dnx_algo_template_t tc_sysport_map);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_tc_sysport_map_get
 */
typedef int (*dnx_ipq_alloc_mngr_db_tc_sysport_map_get_cb)(
    int unit, dnx_algo_template_t *tc_sysport_map);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_tc_sysport_map_create
 */
typedef int (*dnx_ipq_alloc_mngr_db_tc_sysport_map_create_cb)(
    int unit, dnx_algo_template_create_data_t * data, void *extra_arguments);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_tc_sysport_map_exchange
 */
typedef int (*dnx_ipq_alloc_mngr_db_tc_sysport_map_exchange_cb)(
    int unit, uint32 flags, const dnx_ipq_tc_map_t *profile_data, int old_profile, const void *extra_arguments, int *new_profile, uint8 *first_reference, uint8 *last_reference);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_tc_sysport_map_replace_data
 */
typedef int (*dnx_ipq_alloc_mngr_db_tc_sysport_map_replace_data_cb)(
    int unit, int profile,  const dnx_ipq_tc_map_t *new_profile_data);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_tc_sysport_map_profile_data_get
 */
typedef int (*dnx_ipq_alloc_mngr_db_tc_sysport_map_profile_data_get_cb)(
    int unit, int profile, int *ref_count, dnx_ipq_tc_map_t *profile_data);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_tc_sysport_map_profile_get
 */
typedef int (*dnx_ipq_alloc_mngr_db_tc_sysport_map_profile_get_cb)(
    int unit, const dnx_ipq_tc_map_t *profile_data, int *profile);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_tc_sysport_map_get_next
 */
typedef int (*dnx_ipq_alloc_mngr_db_tc_sysport_map_get_next_cb)(
    int unit, int *current_profile);

/**
 * implemented by: dnx_ipq_alloc_mngr_db_tc_sysport_map_dump_info_get
 */
typedef int (*dnx_ipq_alloc_mngr_db_tc_sysport_map_dump_info_get_cb)(
    int unit, dnx_algo_template_dump_data_t * info);

/*
 * STRUCTs
 */

/**
 * This structure holds the access functions for the variable type
 */
typedef struct {
    dnx_ipq_alloc_mngr_db_regions_type_set_cb set;
    dnx_ipq_alloc_mngr_db_regions_type_get_cb get;
} dnx_ipq_alloc_mngr_db_regions_type_cbs;

/**
 * This structure holds the access functions for the variable nof_allocated_queue_quartets
 */
typedef struct {
    dnx_ipq_alloc_mngr_db_regions_nof_allocated_queue_quartets_set_cb set;
    dnx_ipq_alloc_mngr_db_regions_nof_allocated_queue_quartets_get_cb get;
} dnx_ipq_alloc_mngr_db_regions_nof_allocated_queue_quartets_cbs;

/**
 * This structure holds the access functions for the variable dnx_ipq_region_t
 */
typedef struct {
    dnx_ipq_alloc_mngr_db_regions_alloc_cb alloc;
    /**
     * Access struct for type
     */
    dnx_ipq_alloc_mngr_db_regions_type_cbs type;
    /**
     * Access struct for nof_allocated_queue_quartets
     */
    dnx_ipq_alloc_mngr_db_regions_nof_allocated_queue_quartets_cbs nof_allocated_queue_quartets;
} dnx_ipq_alloc_mngr_db_regions_cbs;

/**
 * This structure holds the access functions for the variable is_enhance_scheduler_mode
 */
typedef struct {
    dnx_ipq_alloc_mngr_db_fmq_is_enhance_scheduler_mode_set_cb set;
    dnx_ipq_alloc_mngr_db_fmq_is_enhance_scheduler_mode_get_cb get;
} dnx_ipq_alloc_mngr_db_fmq_is_enhance_scheduler_mode_cbs;

/**
 * This structure holds the access functions for the variable max_multicast_queue
 */
typedef struct {
    dnx_ipq_alloc_mngr_db_fmq_max_multicast_queue_set_cb set;
    dnx_ipq_alloc_mngr_db_fmq_max_multicast_queue_get_cb get;
} dnx_ipq_alloc_mngr_db_fmq_max_multicast_queue_cbs;

/**
 * This structure holds the access functions for the variable dnx_ipq_fmq_info_t
 */
typedef struct {
    /**
     * Access struct for is_enhance_scheduler_mode
     */
    dnx_ipq_alloc_mngr_db_fmq_is_enhance_scheduler_mode_cbs is_enhance_scheduler_mode;
    /**
     * Access struct for max_multicast_queue
     */
    dnx_ipq_alloc_mngr_db_fmq_max_multicast_queue_cbs max_multicast_queue;
} dnx_ipq_alloc_mngr_db_fmq_cbs;

/**
 * This structure holds the access functions for the variable ipq_alloc_mngr
 */
typedef struct {
    dnx_ipq_alloc_mngr_db_ipq_alloc_mngr_set_cb set;
    dnx_ipq_alloc_mngr_db_ipq_alloc_mngr_get_cb get;
    dnx_ipq_alloc_mngr_db_ipq_alloc_mngr_create_cb create;
    dnx_ipq_alloc_mngr_db_ipq_alloc_mngr_allocate_single_cb allocate_single;
    dnx_ipq_alloc_mngr_db_ipq_alloc_mngr_free_single_cb free_single;
    dnx_ipq_alloc_mngr_db_ipq_alloc_mngr_is_allocated_cb is_allocated;
    dnx_ipq_alloc_mngr_db_ipq_alloc_mngr_nof_allocated_elements_in_range_get_cb nof_allocated_elements_in_range_get;
} dnx_ipq_alloc_mngr_db_ipq_alloc_mngr_cbs;

/**
 * This structure holds the access functions for the variable tc_voq_flow_map
 */
typedef struct {
    dnx_ipq_alloc_mngr_db_tc_voq_flow_map_set_cb set;
    dnx_ipq_alloc_mngr_db_tc_voq_flow_map_get_cb get;
    dnx_ipq_alloc_mngr_db_tc_voq_flow_map_alloc_cb alloc;
    dnx_ipq_alloc_mngr_db_tc_voq_flow_map_create_cb create;
    dnx_ipq_alloc_mngr_db_tc_voq_flow_map_exchange_cb exchange;
    dnx_ipq_alloc_mngr_db_tc_voq_flow_map_replace_data_cb replace_data;
    dnx_ipq_alloc_mngr_db_tc_voq_flow_map_profile_data_get_cb profile_data_get;
    dnx_ipq_alloc_mngr_db_tc_voq_flow_map_profile_get_cb profile_get;
    dnx_ipq_alloc_mngr_db_tc_voq_flow_map_get_next_cb get_next;
    dnx_ipq_alloc_mngr_db_tc_voq_flow_map_dump_info_get_cb dump_info_get;
} dnx_ipq_alloc_mngr_db_tc_voq_flow_map_cbs;

/**
 * This structure holds the access functions for the variable tc_sysport_map
 */
typedef struct {
    dnx_ipq_alloc_mngr_db_tc_sysport_map_set_cb set;
    dnx_ipq_alloc_mngr_db_tc_sysport_map_get_cb get;
    dnx_ipq_alloc_mngr_db_tc_sysport_map_create_cb create;
    dnx_ipq_alloc_mngr_db_tc_sysport_map_exchange_cb exchange;
    dnx_ipq_alloc_mngr_db_tc_sysport_map_replace_data_cb replace_data;
    dnx_ipq_alloc_mngr_db_tc_sysport_map_profile_data_get_cb profile_data_get;
    dnx_ipq_alloc_mngr_db_tc_sysport_map_profile_get_cb profile_get;
    dnx_ipq_alloc_mngr_db_tc_sysport_map_get_next_cb get_next;
    dnx_ipq_alloc_mngr_db_tc_sysport_map_dump_info_get_cb dump_info_get;
} dnx_ipq_alloc_mngr_db_tc_sysport_map_cbs;

/**
 * This structure holds the access functions for the variable dnx_ipq_alloc_mngr_db_t
 */
typedef struct {
    dnx_ipq_alloc_mngr_db_is_init_cb is_init;
    dnx_ipq_alloc_mngr_db_init_cb init;
    /**
     * Access struct for regions
     */
    dnx_ipq_alloc_mngr_db_regions_cbs regions;
    /**
     * Access struct for fmq
     */
    dnx_ipq_alloc_mngr_db_fmq_cbs fmq;
    /**
     * Access struct for ipq_alloc_mngr
     */
    dnx_ipq_alloc_mngr_db_ipq_alloc_mngr_cbs ipq_alloc_mngr;
    /**
     * Access struct for tc_voq_flow_map
     */
    dnx_ipq_alloc_mngr_db_tc_voq_flow_map_cbs tc_voq_flow_map;
    /**
     * Access struct for tc_sysport_map
     */
    dnx_ipq_alloc_mngr_db_tc_sysport_map_cbs tc_sysport_map;
} dnx_ipq_alloc_mngr_db_cbs;

/*
 * Global Variables
 */

/*
 * FUNCTIONs
 */

/*
 *
 * get_name function for enum type dnx_ipq_region_type_e
 * AUTO-GENERATED - DO NOT MODIFY
 */
const char *
dnx_ipq_region_type_e_get_name(dnx_ipq_region_type_e value);


/*
 *
 * get_name function for enum type dnx_ipq_queue_type_e
 * AUTO-GENERATED - DO NOT MODIFY
 */
const char *
dnx_ipq_queue_type_e_get_name(dnx_ipq_queue_type_e value);


/*
 * Global Variables
 */

extern dnx_ipq_alloc_mngr_db_cbs dnx_ipq_alloc_mngr_db;

#endif /* __DNX_IPQ_ALLOC_MNGR_ACCESS_H__ */
