/** \file algo/swstate/auto_generated/access/ingress_compensation_access.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef __INGRESS_COMPENSATION_ACCESS_H__
#define __INGRESS_COMPENSATION_ACCESS_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <bcm_int/dnx/algo/swstate/auto_generated/types/ingress_compensation_types.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr_internal.h>
#include <bcm_int/dnx/cosq/ingress/cosq_ingress.h>
/*
 * TYPEDEFs
 */

/**
 * implemented by: dnx_ingress_compensation_db_is_init
 */
typedef int (*dnx_ingress_compensation_db_is_init_cb)(
    int unit, uint8 *is_init);

/**
 * implemented by: dnx_ingress_compensation_db_init
 */
typedef int (*dnx_ingress_compensation_db_init_cb)(
    int unit);

/**
 * implemented by: dnx_ingress_compensation_db_compensation_set
 */
typedef int (*dnx_ingress_compensation_db_compensation_set_cb)(
    int unit, uint32 compensation_idx_0, dnx_algo_template_t compensation);

/**
 * implemented by: dnx_ingress_compensation_db_compensation_get
 */
typedef int (*dnx_ingress_compensation_db_compensation_get_cb)(
    int unit, uint32 compensation_idx_0, dnx_algo_template_t *compensation);

/**
 * implemented by: dnx_ingress_compensation_db_compensation_alloc
 */
typedef int (*dnx_ingress_compensation_db_compensation_alloc_cb)(
    int unit);

/**
 * implemented by: dnx_ingress_compensation_db_compensation_create
 */
typedef int (*dnx_ingress_compensation_db_compensation_create_cb)(
    int unit, uint32 compensation_idx_0, dnx_algo_template_create_data_t * data, void *extra_arguments);

/**
 * implemented by: dnx_ingress_compensation_db_compensation_exchange
 */
typedef int (*dnx_ingress_compensation_db_compensation_exchange_cb)(
    int unit, uint32 compensation_idx_0, uint32 flags, const int *profile_data, int old_profile, const void *extra_arguments, int *new_profile, uint8 *first_reference, uint8 *last_reference);

/**
 * implemented by: dnx_ingress_compensation_db_compensation_replace_data
 */
typedef int (*dnx_ingress_compensation_db_compensation_replace_data_cb)(
    int unit, uint32 compensation_idx_0, int profile,  const int *new_profile_data);

/**
 * implemented by: dnx_ingress_compensation_db_compensation_profile_data_get
 */
typedef int (*dnx_ingress_compensation_db_compensation_profile_data_get_cb)(
    int unit, uint32 compensation_idx_0, int profile, int *ref_count, int *profile_data);

/**
 * implemented by: dnx_ingress_compensation_db_compensation_profile_get
 */
typedef int (*dnx_ingress_compensation_db_compensation_profile_get_cb)(
    int unit, uint32 compensation_idx_0, const int *profile_data, int *profile);

/**
 * implemented by: dnx_ingress_compensation_db_compensation_get_next
 */
typedef int (*dnx_ingress_compensation_db_compensation_get_next_cb)(
    int unit, uint32 compensation_idx_0, int *current_profile);

/**
 * implemented by: dnx_ingress_compensation_db_compensation_dump_info_get
 */
typedef int (*dnx_ingress_compensation_db_compensation_dump_info_get_cb)(
    int unit, uint32 compensation_idx_0, dnx_algo_template_dump_data_t * info);

/*
 * STRUCTs
 */

/**
 * This structure holds the access functions for the variable compensation
 */
typedef struct {
    dnx_ingress_compensation_db_compensation_set_cb set;
    dnx_ingress_compensation_db_compensation_get_cb get;
    dnx_ingress_compensation_db_compensation_alloc_cb alloc;
    dnx_ingress_compensation_db_compensation_create_cb create;
    dnx_ingress_compensation_db_compensation_exchange_cb exchange;
    dnx_ingress_compensation_db_compensation_replace_data_cb replace_data;
    dnx_ingress_compensation_db_compensation_profile_data_get_cb profile_data_get;
    dnx_ingress_compensation_db_compensation_profile_get_cb profile_get;
    dnx_ingress_compensation_db_compensation_get_next_cb get_next;
    dnx_ingress_compensation_db_compensation_dump_info_get_cb dump_info_get;
} dnx_ingress_compensation_db_compensation_cbs;

/**
 * This structure holds the access functions for the variable dnx_ingress_compensation_db_t
 */
typedef struct {
    dnx_ingress_compensation_db_is_init_cb is_init;
    dnx_ingress_compensation_db_init_cb init;
    /**
     * Access struct for compensation
     */
    dnx_ingress_compensation_db_compensation_cbs compensation;
} dnx_ingress_compensation_db_cbs;

/*
 * Global Variables
 */

/*
 * Global Variables
 */

extern dnx_ingress_compensation_db_cbs dnx_ingress_compensation_db;

#endif /* __INGRESS_COMPENSATION_ACCESS_H__ */
