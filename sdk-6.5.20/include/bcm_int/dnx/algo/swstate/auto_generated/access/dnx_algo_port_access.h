/** \file algo/swstate/auto_generated/access/dnx_algo_port_access.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef __DNX_ALGO_PORT_ACCESS_H__
#define __DNX_ALGO_PORT_ACCESS_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <bcm_int/dnx/algo/swstate/auto_generated/types/dnx_algo_port_types.h>
#include <bcm/port.h>
#include <bcm_int/dnx/algo/port/algo_port_mgmt.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr_internal.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr_internal.h>
#include <soc/dnxc/swstate/types/sw_state_bitmap.h>
#include <soc/dnxc/swstate/types/sw_state_pbmp.h>
/*
 * TYPEDEFs
 */

/**
 * implemented by: dnx_algo_port_db_is_init
 */
typedef int (*dnx_algo_port_db_is_init_cb)(
    int unit, uint8 *is_init);

/**
 * implemented by: dnx_algo_port_db_init
 */
typedef int (*dnx_algo_port_db_init_cb)(
    int unit);

/**
 * implemented by: dnx_algo_port_db_general_dummy_set
 */
typedef int (*dnx_algo_port_db_general_dummy_set_cb)(
    int unit, int dummy);

/**
 * implemented by: dnx_algo_port_db_general_dummy_get
 */
typedef int (*dnx_algo_port_db_general_dummy_get_cb)(
    int unit, int *dummy);

/**
 * implemented by: dnx_algo_port_db_logical_set
 */
typedef int (*dnx_algo_port_db_logical_set_cb)(
    int unit, uint32 logical_idx_0, CONST dnx_algo_port_db_logical_t *logical);

/**
 * implemented by: dnx_algo_port_db_logical_get
 */
typedef int (*dnx_algo_port_db_logical_get_cb)(
    int unit, uint32 logical_idx_0, dnx_algo_port_db_logical_t *logical);

/**
 * implemented by: dnx_algo_port_db_logical_state_set
 */
typedef int (*dnx_algo_port_db_logical_state_set_cb)(
    int unit, uint32 logical_idx_0, dnx_algo_port_state_e state);

/**
 * implemented by: dnx_algo_port_db_logical_state_get
 */
typedef int (*dnx_algo_port_db_logical_state_get_cb)(
    int unit, uint32 logical_idx_0, dnx_algo_port_state_e *state);

/**
 * implemented by: dnx_algo_port_db_logical_info_set
 */
typedef int (*dnx_algo_port_db_logical_info_set_cb)(
    int unit, uint32 logical_idx_0, dnx_algo_port_info_s info);

/**
 * implemented by: dnx_algo_port_db_logical_info_get
 */
typedef int (*dnx_algo_port_db_logical_info_get_cb)(
    int unit, uint32 logical_idx_0, dnx_algo_port_info_s *info);

/**
 * implemented by: dnx_algo_port_db_logical_interface_type_set
 */
typedef int (*dnx_algo_port_db_logical_interface_type_set_cb)(
    int unit, uint32 logical_idx_0, bcm_port_if_t interface_type);

/**
 * implemented by: dnx_algo_port_db_logical_interface_type_get
 */
typedef int (*dnx_algo_port_db_logical_interface_type_get_cb)(
    int unit, uint32 logical_idx_0, bcm_port_if_t *interface_type);

/**
 * implemented by: dnx_algo_port_db_logical_interface_offset_set
 */
typedef int (*dnx_algo_port_db_logical_interface_offset_set_cb)(
    int unit, uint32 logical_idx_0, int interface_offset);

/**
 * implemented by: dnx_algo_port_db_logical_interface_offset_get
 */
typedef int (*dnx_algo_port_db_logical_interface_offset_get_cb)(
    int unit, uint32 logical_idx_0, int *interface_offset);

/**
 * implemented by: dnx_algo_port_db_logical_nif_handle_set
 */
typedef int (*dnx_algo_port_db_logical_nif_handle_set_cb)(
    int unit, uint32 logical_idx_0, int nif_handle);

/**
 * implemented by: dnx_algo_port_db_logical_nif_handle_get
 */
typedef int (*dnx_algo_port_db_logical_nif_handle_get_cb)(
    int unit, uint32 logical_idx_0, int *nif_handle);

/**
 * implemented by: dnx_algo_port_db_logical_tm_handle_set
 */
typedef int (*dnx_algo_port_db_logical_tm_handle_set_cb)(
    int unit, uint32 logical_idx_0, CONST dnx_algo_port_db_2d_handle_t *tm_handle);

/**
 * implemented by: dnx_algo_port_db_logical_tm_handle_get
 */
typedef int (*dnx_algo_port_db_logical_tm_handle_get_cb)(
    int unit, uint32 logical_idx_0, dnx_algo_port_db_2d_handle_t *tm_handle);

/**
 * implemented by: dnx_algo_port_db_logical_tm_handle_h0_set
 */
typedef int (*dnx_algo_port_db_logical_tm_handle_h0_set_cb)(
    int unit, uint32 logical_idx_0, int h0);

/**
 * implemented by: dnx_algo_port_db_logical_tm_handle_h0_get
 */
typedef int (*dnx_algo_port_db_logical_tm_handle_h0_get_cb)(
    int unit, uint32 logical_idx_0, int *h0);

/**
 * implemented by: dnx_algo_port_db_logical_tm_handle_h1_set
 */
typedef int (*dnx_algo_port_db_logical_tm_handle_h1_set_cb)(
    int unit, uint32 logical_idx_0, int h1);

/**
 * implemented by: dnx_algo_port_db_logical_tm_handle_h1_get
 */
typedef int (*dnx_algo_port_db_logical_tm_handle_h1_get_cb)(
    int unit, uint32 logical_idx_0, int *h1);

/**
 * implemented by: dnx_algo_port_db_logical_sch_handle_set
 */
typedef int (*dnx_algo_port_db_logical_sch_handle_set_cb)(
    int unit, uint32 logical_idx_0, CONST dnx_algo_port_db_2d_handle_t *sch_handle);

/**
 * implemented by: dnx_algo_port_db_logical_sch_handle_get
 */
typedef int (*dnx_algo_port_db_logical_sch_handle_get_cb)(
    int unit, uint32 logical_idx_0, dnx_algo_port_db_2d_handle_t *sch_handle);

/**
 * implemented by: dnx_algo_port_db_logical_sch_handle_h0_set
 */
typedef int (*dnx_algo_port_db_logical_sch_handle_h0_set_cb)(
    int unit, uint32 logical_idx_0, int h0);

/**
 * implemented by: dnx_algo_port_db_logical_sch_handle_h0_get
 */
typedef int (*dnx_algo_port_db_logical_sch_handle_h0_get_cb)(
    int unit, uint32 logical_idx_0, int *h0);

/**
 * implemented by: dnx_algo_port_db_logical_sch_handle_h1_set
 */
typedef int (*dnx_algo_port_db_logical_sch_handle_h1_set_cb)(
    int unit, uint32 logical_idx_0, int h1);

/**
 * implemented by: dnx_algo_port_db_logical_sch_handle_h1_get
 */
typedef int (*dnx_algo_port_db_logical_sch_handle_h1_get_cb)(
    int unit, uint32 logical_idx_0, int *h1);

/**
 * implemented by: dnx_algo_port_db_logical_sch_if_handle_set
 */
typedef int (*dnx_algo_port_db_logical_sch_if_handle_set_cb)(
    int unit, uint32 logical_idx_0, CONST dnx_algo_port_db_2d_handle_t *sch_if_handle);

/**
 * implemented by: dnx_algo_port_db_logical_sch_if_handle_get
 */
typedef int (*dnx_algo_port_db_logical_sch_if_handle_get_cb)(
    int unit, uint32 logical_idx_0, dnx_algo_port_db_2d_handle_t *sch_if_handle);

/**
 * implemented by: dnx_algo_port_db_logical_sch_if_handle_h0_set
 */
typedef int (*dnx_algo_port_db_logical_sch_if_handle_h0_set_cb)(
    int unit, uint32 logical_idx_0, int h0);

/**
 * implemented by: dnx_algo_port_db_logical_sch_if_handle_h0_get
 */
typedef int (*dnx_algo_port_db_logical_sch_if_handle_h0_get_cb)(
    int unit, uint32 logical_idx_0, int *h0);

/**
 * implemented by: dnx_algo_port_db_logical_sch_if_handle_h1_set
 */
typedef int (*dnx_algo_port_db_logical_sch_if_handle_h1_set_cb)(
    int unit, uint32 logical_idx_0, int h1);

/**
 * implemented by: dnx_algo_port_db_logical_sch_if_handle_h1_get
 */
typedef int (*dnx_algo_port_db_logical_sch_if_handle_h1_get_cb)(
    int unit, uint32 logical_idx_0, int *h1);

/**
 * implemented by: dnx_algo_port_db_logical_pp_handle_set
 */
typedef int (*dnx_algo_port_db_logical_pp_handle_set_cb)(
    int unit, uint32 logical_idx_0, CONST dnx_algo_port_db_2d_handle_t *pp_handle);

/**
 * implemented by: dnx_algo_port_db_logical_pp_handle_get
 */
typedef int (*dnx_algo_port_db_logical_pp_handle_get_cb)(
    int unit, uint32 logical_idx_0, dnx_algo_port_db_2d_handle_t *pp_handle);

/**
 * implemented by: dnx_algo_port_db_logical_pp_handle_h0_set
 */
typedef int (*dnx_algo_port_db_logical_pp_handle_h0_set_cb)(
    int unit, uint32 logical_idx_0, int h0);

/**
 * implemented by: dnx_algo_port_db_logical_pp_handle_h0_get
 */
typedef int (*dnx_algo_port_db_logical_pp_handle_h0_get_cb)(
    int unit, uint32 logical_idx_0, int *h0);

/**
 * implemented by: dnx_algo_port_db_logical_pp_handle_h1_set
 */
typedef int (*dnx_algo_port_db_logical_pp_handle_h1_set_cb)(
    int unit, uint32 logical_idx_0, int h1);

/**
 * implemented by: dnx_algo_port_db_logical_pp_handle_h1_get
 */
typedef int (*dnx_algo_port_db_logical_pp_handle_h1_get_cb)(
    int unit, uint32 logical_idx_0, int *h1);

/**
 * implemented by: dnx_algo_port_db_logical_ilkn_handle_set
 */
typedef int (*dnx_algo_port_db_logical_ilkn_handle_set_cb)(
    int unit, uint32 logical_idx_0, int ilkn_handle);

/**
 * implemented by: dnx_algo_port_db_logical_ilkn_handle_get
 */
typedef int (*dnx_algo_port_db_logical_ilkn_handle_get_cb)(
    int unit, uint32 logical_idx_0, int *ilkn_handle);

/**
 * implemented by: dnx_algo_port_db_logical_flexe_client_handle_set
 */
typedef int (*dnx_algo_port_db_logical_flexe_client_handle_set_cb)(
    int unit, uint32 logical_idx_0, int flexe_client_handle);

/**
 * implemented by: dnx_algo_port_db_logical_flexe_client_handle_get
 */
typedef int (*dnx_algo_port_db_logical_flexe_client_handle_get_cb)(
    int unit, uint32 logical_idx_0, int *flexe_client_handle);

/**
 * implemented by: dnx_algo_port_db_logical_flexe_mac_handle_set
 */
typedef int (*dnx_algo_port_db_logical_flexe_mac_handle_set_cb)(
    int unit, uint32 logical_idx_0, int flexe_mac_handle);

/**
 * implemented by: dnx_algo_port_db_logical_flexe_mac_handle_get
 */
typedef int (*dnx_algo_port_db_logical_flexe_mac_handle_get_cb)(
    int unit, uint32 logical_idx_0, int *flexe_mac_handle);

/**
 * implemented by: dnx_algo_port_db_logical_flexe_sar_handle_set
 */
typedef int (*dnx_algo_port_db_logical_flexe_sar_handle_set_cb)(
    int unit, uint32 logical_idx_0, int flexe_sar_handle);

/**
 * implemented by: dnx_algo_port_db_logical_flexe_sar_handle_get
 */
typedef int (*dnx_algo_port_db_logical_flexe_sar_handle_get_cb)(
    int unit, uint32 logical_idx_0, int *flexe_sar_handle);

/**
 * implemented by: dnx_algo_port_db_logical_flexe_phy_handle_set
 */
typedef int (*dnx_algo_port_db_logical_flexe_phy_handle_set_cb)(
    int unit, uint32 logical_idx_0, int flexe_phy_handle);

/**
 * implemented by: dnx_algo_port_db_logical_flexe_phy_handle_get
 */
typedef int (*dnx_algo_port_db_logical_flexe_phy_handle_get_cb)(
    int unit, uint32 logical_idx_0, int *flexe_phy_handle);

/**
 * implemented by: dnx_algo_port_db_logical_tm_interface_handle_set
 */
typedef int (*dnx_algo_port_db_logical_tm_interface_handle_set_cb)(
    int unit, uint32 logical_idx_0, CONST dnx_algo_port_db_2d_handle_t *tm_interface_handle);

/**
 * implemented by: dnx_algo_port_db_logical_tm_interface_handle_get
 */
typedef int (*dnx_algo_port_db_logical_tm_interface_handle_get_cb)(
    int unit, uint32 logical_idx_0, dnx_algo_port_db_2d_handle_t *tm_interface_handle);

/**
 * implemented by: dnx_algo_port_db_logical_tm_interface_handle_h0_set
 */
typedef int (*dnx_algo_port_db_logical_tm_interface_handle_h0_set_cb)(
    int unit, uint32 logical_idx_0, int h0);

/**
 * implemented by: dnx_algo_port_db_logical_tm_interface_handle_h0_get
 */
typedef int (*dnx_algo_port_db_logical_tm_interface_handle_h0_get_cb)(
    int unit, uint32 logical_idx_0, int *h0);

/**
 * implemented by: dnx_algo_port_db_logical_tm_interface_handle_h1_set
 */
typedef int (*dnx_algo_port_db_logical_tm_interface_handle_h1_set_cb)(
    int unit, uint32 logical_idx_0, int h1);

/**
 * implemented by: dnx_algo_port_db_logical_tm_interface_handle_h1_get
 */
typedef int (*dnx_algo_port_db_logical_tm_interface_handle_h1_get_cb)(
    int unit, uint32 logical_idx_0, int *h1);

/**
 * implemented by: dnx_algo_port_db_logical_interface_handle_set
 */
typedef int (*dnx_algo_port_db_logical_interface_handle_set_cb)(
    int unit, uint32 logical_idx_0, CONST dnx_algo_port_db_2d_handle_t *interface_handle);

/**
 * implemented by: dnx_algo_port_db_logical_interface_handle_get
 */
typedef int (*dnx_algo_port_db_logical_interface_handle_get_cb)(
    int unit, uint32 logical_idx_0, dnx_algo_port_db_2d_handle_t *interface_handle);

/**
 * implemented by: dnx_algo_port_db_logical_interface_handle_h0_set
 */
typedef int (*dnx_algo_port_db_logical_interface_handle_h0_set_cb)(
    int unit, uint32 logical_idx_0, int h0);

/**
 * implemented by: dnx_algo_port_db_logical_interface_handle_h0_get
 */
typedef int (*dnx_algo_port_db_logical_interface_handle_h0_get_cb)(
    int unit, uint32 logical_idx_0, int *h0);

/**
 * implemented by: dnx_algo_port_db_logical_interface_handle_h1_set
 */
typedef int (*dnx_algo_port_db_logical_interface_handle_h1_set_cb)(
    int unit, uint32 logical_idx_0, int h1);

/**
 * implemented by: dnx_algo_port_db_logical_interface_handle_h1_get
 */
typedef int (*dnx_algo_port_db_logical_interface_handle_h1_get_cb)(
    int unit, uint32 logical_idx_0, int *h1);

/**
 * implemented by: dnx_algo_port_db_logical_fabric_handle_set
 */
typedef int (*dnx_algo_port_db_logical_fabric_handle_set_cb)(
    int unit, uint32 logical_idx_0, int fabric_handle);

/**
 * implemented by: dnx_algo_port_db_logical_fabric_handle_get
 */
typedef int (*dnx_algo_port_db_logical_fabric_handle_get_cb)(
    int unit, uint32 logical_idx_0, int *fabric_handle);

/**
 * implemented by: dnx_algo_port_db_logical_channel_set
 */
typedef int (*dnx_algo_port_db_logical_channel_set_cb)(
    int unit, uint32 logical_idx_0, int channel);

/**
 * implemented by: dnx_algo_port_db_logical_channel_get
 */
typedef int (*dnx_algo_port_db_logical_channel_get_cb)(
    int unit, uint32 logical_idx_0, int *channel);

/**
 * implemented by: dnx_algo_port_db_nif_set
 */
typedef int (*dnx_algo_port_db_nif_set_cb)(
    int unit, uint32 nif_idx_0, CONST dnx_algo_port_db_nif_t *nif);

/**
 * implemented by: dnx_algo_port_db_nif_get
 */
typedef int (*dnx_algo_port_db_nif_get_cb)(
    int unit, uint32 nif_idx_0, dnx_algo_port_db_nif_t *nif);

/**
 * implemented by: dnx_algo_port_db_nif_alloc
 */
typedef int (*dnx_algo_port_db_nif_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

/**
 * implemented by: dnx_algo_port_db_nif_valid_set
 */
typedef int (*dnx_algo_port_db_nif_valid_set_cb)(
    int unit, uint32 nif_idx_0, int valid);

/**
 * implemented by: dnx_algo_port_db_nif_valid_get
 */
typedef int (*dnx_algo_port_db_nif_valid_get_cb)(
    int unit, uint32 nif_idx_0, int *valid);

/**
 * implemented by: dnx_algo_port_db_nif_phys_set
 */
typedef int (*dnx_algo_port_db_nif_phys_set_cb)(
    int unit, uint32 nif_idx_0, bcm_pbmp_t phys);

/**
 * implemented by: dnx_algo_port_db_nif_phys_get
 */
typedef int (*dnx_algo_port_db_nif_phys_get_cb)(
    int unit, uint32 nif_idx_0, bcm_pbmp_t *phys);

/**
 * implemented by: dnx_algo_port_db_nif_phys_pbmp_neq
 */
typedef int (*dnx_algo_port_db_nif_phys_pbmp_neq_cb)(
    int unit, uint32 nif_idx_0, _shr_pbmp_t input_pbmp, uint8 *result);

/**
 * implemented by: dnx_algo_port_db_nif_phys_pbmp_eq
 */
typedef int (*dnx_algo_port_db_nif_phys_pbmp_eq_cb)(
    int unit, uint32 nif_idx_0, _shr_pbmp_t input_pbmp, uint8 *result);

/**
 * implemented by: dnx_algo_port_db_nif_phys_pbmp_member
 */
typedef int (*dnx_algo_port_db_nif_phys_pbmp_member_cb)(
    int unit, uint32 nif_idx_0, uint32 _input_port, uint8 *result);

/**
 * implemented by: dnx_algo_port_db_nif_phys_pbmp_not_null
 */
typedef int (*dnx_algo_port_db_nif_phys_pbmp_not_null_cb)(
    int unit, uint32 nif_idx_0, uint8 *result);

/**
 * implemented by: dnx_algo_port_db_nif_phys_pbmp_is_null
 */
typedef int (*dnx_algo_port_db_nif_phys_pbmp_is_null_cb)(
    int unit, uint32 nif_idx_0, uint8 *result);

/**
 * implemented by: dnx_algo_port_db_nif_phys_pbmp_count
 */
typedef int (*dnx_algo_port_db_nif_phys_pbmp_count_cb)(
    int unit, uint32 nif_idx_0, int *result);

/**
 * implemented by: dnx_algo_port_db_nif_phys_pbmp_xor
 */
typedef int (*dnx_algo_port_db_nif_phys_pbmp_xor_cb)(
    int unit, uint32 nif_idx_0, _shr_pbmp_t input_pbmp);

/**
 * implemented by: dnx_algo_port_db_nif_phys_pbmp_remove
 */
typedef int (*dnx_algo_port_db_nif_phys_pbmp_remove_cb)(
    int unit, uint32 nif_idx_0, _shr_pbmp_t input_pbmp);

/**
 * implemented by: dnx_algo_port_db_nif_phys_pbmp_assign
 */
typedef int (*dnx_algo_port_db_nif_phys_pbmp_assign_cb)(
    int unit, uint32 nif_idx_0, _shr_pbmp_t input_pbmp);

/**
 * implemented by: dnx_algo_port_db_nif_phys_pbmp_get
 */
typedef int (*dnx_algo_port_db_nif_phys_pbmp_get_cb)(
    int unit, uint32 nif_idx_0, _shr_pbmp_t *output_pbmp);

/**
 * implemented by: dnx_algo_port_db_nif_phys_pbmp_and
 */
typedef int (*dnx_algo_port_db_nif_phys_pbmp_and_cb)(
    int unit, uint32 nif_idx_0, _shr_pbmp_t input_pbmp);

/**
 * implemented by: dnx_algo_port_db_nif_phys_pbmp_negate
 */
typedef int (*dnx_algo_port_db_nif_phys_pbmp_negate_cb)(
    int unit, uint32 nif_idx_0, _shr_pbmp_t input_pbmp);

/**
 * implemented by: dnx_algo_port_db_nif_phys_pbmp_or
 */
typedef int (*dnx_algo_port_db_nif_phys_pbmp_or_cb)(
    int unit, uint32 nif_idx_0, _shr_pbmp_t input_pbmp);

/**
 * implemented by: dnx_algo_port_db_nif_phys_pbmp_clear
 */
typedef int (*dnx_algo_port_db_nif_phys_pbmp_clear_cb)(
    int unit, uint32 nif_idx_0);

/**
 * implemented by: dnx_algo_port_db_nif_phys_pbmp_port_add
 */
typedef int (*dnx_algo_port_db_nif_phys_pbmp_port_add_cb)(
    int unit, uint32 nif_idx_0, uint32 _input_port);

/**
 * implemented by: dnx_algo_port_db_nif_phys_pbmp_port_flip
 */
typedef int (*dnx_algo_port_db_nif_phys_pbmp_port_flip_cb)(
    int unit, uint32 nif_idx_0, uint32 _input_port);

/**
 * implemented by: dnx_algo_port_db_nif_phys_pbmp_port_remove
 */
typedef int (*dnx_algo_port_db_nif_phys_pbmp_port_remove_cb)(
    int unit, uint32 nif_idx_0, uint32 _input_port);

/**
 * implemented by: dnx_algo_port_db_nif_phys_pbmp_port_set
 */
typedef int (*dnx_algo_port_db_nif_phys_pbmp_port_set_cb)(
    int unit, uint32 nif_idx_0, uint32 _input_port);

/**
 * implemented by: dnx_algo_port_db_nif_phys_pbmp_ports_range_add
 */
typedef int (*dnx_algo_port_db_nif_phys_pbmp_ports_range_add_cb)(
    int unit, uint32 nif_idx_0, uint32 _first_port, uint32 _range);

/**
 * implemented by: dnx_algo_port_db_nif_phys_pbmp_fmt
 */
typedef int (*dnx_algo_port_db_nif_phys_pbmp_fmt_cb)(
    int unit, uint32 nif_idx_0, char* _buffer);

/**
 * implemented by: dnx_algo_port_db_nif_first_phy_set
 */
typedef int (*dnx_algo_port_db_nif_first_phy_set_cb)(
    int unit, uint32 nif_idx_0, int first_phy);

/**
 * implemented by: dnx_algo_port_db_nif_first_phy_get
 */
typedef int (*dnx_algo_port_db_nif_first_phy_get_cb)(
    int unit, uint32 nif_idx_0, int *first_phy);

/**
 * implemented by: dnx_algo_port_db_nif_master_logical_port_set
 */
typedef int (*dnx_algo_port_db_nif_master_logical_port_set_cb)(
    int unit, uint32 nif_idx_0, bcm_port_t master_logical_port);

/**
 * implemented by: dnx_algo_port_db_nif_master_logical_port_get
 */
typedef int (*dnx_algo_port_db_nif_master_logical_port_get_cb)(
    int unit, uint32 nif_idx_0, bcm_port_t *master_logical_port);

/**
 * implemented by: dnx_algo_port_db_nif_logical_fifos_set
 */
typedef int (*dnx_algo_port_db_nif_logical_fifos_set_cb)(
    int unit, uint32 nif_idx_0, uint32 logical_fifos_idx_0, dnx_algo_port_rmc_info_t logical_fifos);

/**
 * implemented by: dnx_algo_port_db_nif_logical_fifos_get
 */
typedef int (*dnx_algo_port_db_nif_logical_fifos_get_cb)(
    int unit, uint32 nif_idx_0, uint32 logical_fifos_idx_0, dnx_algo_port_rmc_info_t *logical_fifos);

/**
 * implemented by: dnx_algo_port_db_nif_latch_down_set
 */
typedef int (*dnx_algo_port_db_nif_latch_down_set_cb)(
    int unit, uint32 nif_idx_0, int latch_down);

/**
 * implemented by: dnx_algo_port_db_nif_latch_down_get
 */
typedef int (*dnx_algo_port_db_nif_latch_down_get_cb)(
    int unit, uint32 nif_idx_0, int *latch_down);

/**
 * implemented by: dnx_algo_port_db_nif_loopback_original_link_training_set
 */
typedef int (*dnx_algo_port_db_nif_loopback_original_link_training_set_cb)(
    int unit, uint32 nif_idx_0, int loopback_original_link_training);

/**
 * implemented by: dnx_algo_port_db_nif_loopback_original_link_training_get
 */
typedef int (*dnx_algo_port_db_nif_loopback_original_link_training_get_cb)(
    int unit, uint32 nif_idx_0, int *loopback_original_link_training);

/**
 * implemented by: dnx_algo_port_db_nif_loopback_original_phy_lane_config_set
 */
typedef int (*dnx_algo_port_db_nif_loopback_original_phy_lane_config_set_cb)(
    int unit, uint32 nif_idx_0, int loopback_original_phy_lane_config);

/**
 * implemented by: dnx_algo_port_db_nif_loopback_original_phy_lane_config_get
 */
typedef int (*dnx_algo_port_db_nif_loopback_original_phy_lane_config_get_cb)(
    int unit, uint32 nif_idx_0, int *loopback_original_phy_lane_config);

/**
 * implemented by: dnx_algo_port_db_tm_set
 */
typedef int (*dnx_algo_port_db_tm_set_cb)(
    int unit, uint32 tm_idx_0, uint32 tm_idx_1, CONST dnx_algo_port_db_tm_t *tm);

/**
 * implemented by: dnx_algo_port_db_tm_get
 */
typedef int (*dnx_algo_port_db_tm_get_cb)(
    int unit, uint32 tm_idx_0, uint32 tm_idx_1, dnx_algo_port_db_tm_t *tm);

/**
 * implemented by: dnx_algo_port_db_tm_alloc
 */
typedef int (*dnx_algo_port_db_tm_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0, uint32 nof_instances_to_alloc_1);

/**
 * implemented by: dnx_algo_port_db_tm_ref_count_set
 */
typedef int (*dnx_algo_port_db_tm_ref_count_set_cb)(
    int unit, uint32 tm_idx_0, uint32 tm_idx_1, int ref_count);

/**
 * implemented by: dnx_algo_port_db_tm_ref_count_get
 */
typedef int (*dnx_algo_port_db_tm_ref_count_get_cb)(
    int unit, uint32 tm_idx_0, uint32 tm_idx_1, int *ref_count);

/**
 * implemented by: dnx_algo_port_db_tm_ref_count_inc
 */
typedef int (*dnx_algo_port_db_tm_ref_count_inc_cb)(
    int unit, uint32 tm_idx_0, uint32 tm_idx_1, uint32 inc_value);

/**
 * implemented by: dnx_algo_port_db_tm_ref_count_dec
 */
typedef int (*dnx_algo_port_db_tm_ref_count_dec_cb)(
    int unit, uint32 tm_idx_0, uint32 tm_idx_1, uint32 dec_value);

/**
 * implemented by: dnx_algo_port_db_tm_tm_port_set
 */
typedef int (*dnx_algo_port_db_tm_tm_port_set_cb)(
    int unit, uint32 tm_idx_0, uint32 tm_idx_1, uint32 tm_port);

/**
 * implemented by: dnx_algo_port_db_tm_tm_port_get
 */
typedef int (*dnx_algo_port_db_tm_tm_port_get_cb)(
    int unit, uint32 tm_idx_0, uint32 tm_idx_1, uint32 *tm_port);

/**
 * implemented by: dnx_algo_port_db_tm_core_set
 */
typedef int (*dnx_algo_port_db_tm_core_set_cb)(
    int unit, uint32 tm_idx_0, uint32 tm_idx_1, bcm_core_t core);

/**
 * implemented by: dnx_algo_port_db_tm_core_get
 */
typedef int (*dnx_algo_port_db_tm_core_get_cb)(
    int unit, uint32 tm_idx_0, uint32 tm_idx_1, bcm_core_t *core);

/**
 * implemented by: dnx_algo_port_db_tm_base_q_pair_set
 */
typedef int (*dnx_algo_port_db_tm_base_q_pair_set_cb)(
    int unit, uint32 tm_idx_0, uint32 tm_idx_1, int base_q_pair);

/**
 * implemented by: dnx_algo_port_db_tm_base_q_pair_get
 */
typedef int (*dnx_algo_port_db_tm_base_q_pair_get_cb)(
    int unit, uint32 tm_idx_0, uint32 tm_idx_1, int *base_q_pair);

/**
 * implemented by: dnx_algo_port_db_tm_port_app_flags_set
 */
typedef int (*dnx_algo_port_db_tm_port_app_flags_set_cb)(
    int unit, uint32 tm_idx_0, uint32 tm_idx_1, uint32 port_app_flags);

/**
 * implemented by: dnx_algo_port_db_tm_port_app_flags_get
 */
typedef int (*dnx_algo_port_db_tm_port_app_flags_get_cb)(
    int unit, uint32 tm_idx_0, uint32 tm_idx_1, uint32 *port_app_flags);

/**
 * implemented by: dnx_algo_port_db_tm_priorities_set
 */
typedef int (*dnx_algo_port_db_tm_priorities_set_cb)(
    int unit, uint32 tm_idx_0, uint32 tm_idx_1, int priorities);

/**
 * implemented by: dnx_algo_port_db_tm_priorities_get
 */
typedef int (*dnx_algo_port_db_tm_priorities_get_cb)(
    int unit, uint32 tm_idx_0, uint32 tm_idx_1, int *priorities);

/**
 * implemented by: dnx_algo_port_db_tm_tdm_mode_set
 */
typedef int (*dnx_algo_port_db_tm_tdm_mode_set_cb)(
    int unit, uint32 tm_idx_0, uint32 tm_idx_1, dnx_algo_port_tdm_mode_e tdm_mode);

/**
 * implemented by: dnx_algo_port_db_tm_tdm_mode_get
 */
typedef int (*dnx_algo_port_db_tm_tdm_mode_get_cb)(
    int unit, uint32 tm_idx_0, uint32 tm_idx_1, dnx_algo_port_tdm_mode_e *tdm_mode);

/**
 * implemented by: dnx_algo_port_db_tm_header_type_in_set
 */
typedef int (*dnx_algo_port_db_tm_header_type_in_set_cb)(
    int unit, uint32 tm_idx_0, uint32 tm_idx_1, int header_type_in);

/**
 * implemented by: dnx_algo_port_db_tm_header_type_in_get
 */
typedef int (*dnx_algo_port_db_tm_header_type_in_get_cb)(
    int unit, uint32 tm_idx_0, uint32 tm_idx_1, int *header_type_in);

/**
 * implemented by: dnx_algo_port_db_tm_header_type_out_set
 */
typedef int (*dnx_algo_port_db_tm_header_type_out_set_cb)(
    int unit, uint32 tm_idx_0, uint32 tm_idx_1, int header_type_out);

/**
 * implemented by: dnx_algo_port_db_tm_header_type_out_get
 */
typedef int (*dnx_algo_port_db_tm_header_type_out_get_cb)(
    int unit, uint32 tm_idx_0, uint32 tm_idx_1, int *header_type_out);

/**
 * implemented by: dnx_algo_port_db_tm_master_logical_port_set
 */
typedef int (*dnx_algo_port_db_tm_master_logical_port_set_cb)(
    int unit, uint32 tm_idx_0, uint32 tm_idx_1, bcm_port_t master_logical_port);

/**
 * implemented by: dnx_algo_port_db_tm_master_logical_port_get
 */
typedef int (*dnx_algo_port_db_tm_master_logical_port_get_cb)(
    int unit, uint32 tm_idx_0, uint32 tm_idx_1, bcm_port_t *master_logical_port);

/**
 * implemented by: dnx_algo_port_db_sch_set
 */
typedef int (*dnx_algo_port_db_sch_set_cb)(
    int unit, uint32 sch_idx_0, uint32 sch_idx_1, CONST dnx_algo_port_db_sch_t *sch);

/**
 * implemented by: dnx_algo_port_db_sch_get
 */
typedef int (*dnx_algo_port_db_sch_get_cb)(
    int unit, uint32 sch_idx_0, uint32 sch_idx_1, dnx_algo_port_db_sch_t *sch);

/**
 * implemented by: dnx_algo_port_db_sch_alloc
 */
typedef int (*dnx_algo_port_db_sch_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0, uint32 nof_instances_to_alloc_1);

/**
 * implemented by: dnx_algo_port_db_sch_valid_set
 */
typedef int (*dnx_algo_port_db_sch_valid_set_cb)(
    int unit, uint32 sch_idx_0, uint32 sch_idx_1, int valid);

/**
 * implemented by: dnx_algo_port_db_sch_valid_get
 */
typedef int (*dnx_algo_port_db_sch_valid_get_cb)(
    int unit, uint32 sch_idx_0, uint32 sch_idx_1, int *valid);

/**
 * implemented by: dnx_algo_port_db_sch_base_hr_set
 */
typedef int (*dnx_algo_port_db_sch_base_hr_set_cb)(
    int unit, uint32 sch_idx_0, uint32 sch_idx_1, int base_hr);

/**
 * implemented by: dnx_algo_port_db_sch_base_hr_get
 */
typedef int (*dnx_algo_port_db_sch_base_hr_get_cb)(
    int unit, uint32 sch_idx_0, uint32 sch_idx_1, int *base_hr);

/**
 * implemented by: dnx_algo_port_db_sch_sch_priorities_set
 */
typedef int (*dnx_algo_port_db_sch_sch_priorities_set_cb)(
    int unit, uint32 sch_idx_0, uint32 sch_idx_1, int sch_priorities);

/**
 * implemented by: dnx_algo_port_db_sch_sch_priorities_get
 */
typedef int (*dnx_algo_port_db_sch_sch_priorities_get_cb)(
    int unit, uint32 sch_idx_0, uint32 sch_idx_1, int *sch_priorities);

/**
 * implemented by: dnx_algo_port_db_sch_master_logical_port_set
 */
typedef int (*dnx_algo_port_db_sch_master_logical_port_set_cb)(
    int unit, uint32 sch_idx_0, uint32 sch_idx_1, bcm_port_t master_logical_port);

/**
 * implemented by: dnx_algo_port_db_sch_master_logical_port_get
 */
typedef int (*dnx_algo_port_db_sch_master_logical_port_get_cb)(
    int unit, uint32 sch_idx_0, uint32 sch_idx_1, bcm_port_t *master_logical_port);

/**
 * implemented by: dnx_algo_port_db_pp_set
 */
typedef int (*dnx_algo_port_db_pp_set_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, CONST dnx_algo_port_db_pp_t *pp);

/**
 * implemented by: dnx_algo_port_db_pp_get
 */
typedef int (*dnx_algo_port_db_pp_get_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, dnx_algo_port_db_pp_t *pp);

/**
 * implemented by: dnx_algo_port_db_pp_alloc
 */
typedef int (*dnx_algo_port_db_pp_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0, uint32 nof_instances_to_alloc_1);

/**
 * implemented by: dnx_algo_port_db_pp_ref_count_set
 */
typedef int (*dnx_algo_port_db_pp_ref_count_set_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, int ref_count);

/**
 * implemented by: dnx_algo_port_db_pp_ref_count_get
 */
typedef int (*dnx_algo_port_db_pp_ref_count_get_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, int *ref_count);

/**
 * implemented by: dnx_algo_port_db_pp_ref_count_inc
 */
typedef int (*dnx_algo_port_db_pp_ref_count_inc_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, uint32 inc_value);

/**
 * implemented by: dnx_algo_port_db_pp_ref_count_dec
 */
typedef int (*dnx_algo_port_db_pp_ref_count_dec_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, uint32 dec_value);

/**
 * implemented by: dnx_algo_port_db_pp_pp_port_set
 */
typedef int (*dnx_algo_port_db_pp_pp_port_set_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, uint32 pp_port);

/**
 * implemented by: dnx_algo_port_db_pp_pp_port_get
 */
typedef int (*dnx_algo_port_db_pp_pp_port_get_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, uint32 *pp_port);

/**
 * implemented by: dnx_algo_port_db_pp_core_set
 */
typedef int (*dnx_algo_port_db_pp_core_set_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, bcm_core_t core);

/**
 * implemented by: dnx_algo_port_db_pp_core_get
 */
typedef int (*dnx_algo_port_db_pp_core_get_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, bcm_core_t *core);

/**
 * implemented by: dnx_algo_port_db_pp_is_lag_set
 */
typedef int (*dnx_algo_port_db_pp_is_lag_set_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, int is_lag);

/**
 * implemented by: dnx_algo_port_db_pp_is_lag_get
 */
typedef int (*dnx_algo_port_db_pp_is_lag_get_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, int *is_lag);

/**
 * implemented by: dnx_algo_port_db_pp_lag_id_set
 */
typedef int (*dnx_algo_port_db_pp_lag_id_set_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, bcm_trunk_t lag_id);

/**
 * implemented by: dnx_algo_port_db_pp_lag_id_get
 */
typedef int (*dnx_algo_port_db_pp_lag_id_get_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, bcm_trunk_t *lag_id);

/**
 * implemented by: dnx_algo_port_db_pp_master_logical_port_set
 */
typedef int (*dnx_algo_port_db_pp_master_logical_port_set_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, bcm_port_t master_logical_port);

/**
 * implemented by: dnx_algo_port_db_pp_master_logical_port_get
 */
typedef int (*dnx_algo_port_db_pp_master_logical_port_get_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, bcm_port_t *master_logical_port);

/**
 * implemented by: dnx_algo_port_db_pp_header_mode_set
 */
typedef int (*dnx_algo_port_db_pp_header_mode_set_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, dnx_algo_port_header_mode_e header_mode);

/**
 * implemented by: dnx_algo_port_db_pp_header_mode_get
 */
typedef int (*dnx_algo_port_db_pp_header_mode_get_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, dnx_algo_port_header_mode_e *header_mode);

/**
 * implemented by: dnx_algo_port_db_pp_ingress_llvp_profile_valid_set
 */
typedef int (*dnx_algo_port_db_pp_ingress_llvp_profile_valid_set_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, int ingress_llvp_profile_valid);

/**
 * implemented by: dnx_algo_port_db_pp_ingress_llvp_profile_valid_get
 */
typedef int (*dnx_algo_port_db_pp_ingress_llvp_profile_valid_get_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, int *ingress_llvp_profile_valid);

/**
 * implemented by: dnx_algo_port_db_pp_egress_llvp_profile_valid_set
 */
typedef int (*dnx_algo_port_db_pp_egress_llvp_profile_valid_set_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, int egress_llvp_profile_valid);

/**
 * implemented by: dnx_algo_port_db_pp_egress_llvp_profile_valid_get
 */
typedef int (*dnx_algo_port_db_pp_egress_llvp_profile_valid_get_cb)(
    int unit, uint32 pp_idx_0, uint32 pp_idx_1, int *egress_llvp_profile_valid);

/**
 * implemented by: dnx_algo_port_db_pp_alloc_set
 */
typedef int (*dnx_algo_port_db_pp_alloc_set_cb)(
    int unit, uint32 pp_alloc_idx_0, dnx_algo_res_t pp_alloc);

/**
 * implemented by: dnx_algo_port_db_pp_alloc_get
 */
typedef int (*dnx_algo_port_db_pp_alloc_get_cb)(
    int unit, uint32 pp_alloc_idx_0, dnx_algo_res_t *pp_alloc);

/**
 * implemented by: dnx_algo_port_db_pp_alloc_alloc
 */
typedef int (*dnx_algo_port_db_pp_alloc_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

/**
 * implemented by: dnx_algo_port_db_pp_alloc_create
 */
typedef int (*dnx_algo_port_db_pp_alloc_create_cb)(
    int unit, uint32 pp_alloc_idx_0, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: dnx_algo_port_db_pp_alloc_allocate_single
 */
typedef int (*dnx_algo_port_db_pp_alloc_allocate_single_cb)(
    int unit, uint32 pp_alloc_idx_0, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: dnx_algo_port_db_pp_alloc_free_single
 */
typedef int (*dnx_algo_port_db_pp_alloc_free_single_cb)(
    int unit, uint32 pp_alloc_idx_0, int element);

/**
 * implemented by: dnx_algo_port_db_pp_alloc_is_allocated
 */
typedef int (*dnx_algo_port_db_pp_alloc_is_allocated_cb)(
    int unit, uint32 pp_alloc_idx_0, int element, uint8 *is_allocated);

/**
 * implemented by: dnx_algo_port_db_ilkn_set
 */
typedef int (*dnx_algo_port_db_ilkn_set_cb)(
    int unit, uint32 ilkn_idx_0, CONST dnx_algo_port_db_ilkn_t *ilkn);

/**
 * implemented by: dnx_algo_port_db_ilkn_get
 */
typedef int (*dnx_algo_port_db_ilkn_get_cb)(
    int unit, uint32 ilkn_idx_0, dnx_algo_port_db_ilkn_t *ilkn);

/**
 * implemented by: dnx_algo_port_db_ilkn_alloc
 */
typedef int (*dnx_algo_port_db_ilkn_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

/**
 * implemented by: dnx_algo_port_db_ilkn_valid_set
 */
typedef int (*dnx_algo_port_db_ilkn_valid_set_cb)(
    int unit, uint32 ilkn_idx_0, int valid);

/**
 * implemented by: dnx_algo_port_db_ilkn_valid_get
 */
typedef int (*dnx_algo_port_db_ilkn_valid_get_cb)(
    int unit, uint32 ilkn_idx_0, int *valid);

/**
 * implemented by: dnx_algo_port_db_ilkn_master_logical_port_set
 */
typedef int (*dnx_algo_port_db_ilkn_master_logical_port_set_cb)(
    int unit, uint32 ilkn_idx_0, bcm_port_t master_logical_port);

/**
 * implemented by: dnx_algo_port_db_ilkn_master_logical_port_get
 */
typedef int (*dnx_algo_port_db_ilkn_master_logical_port_get_cb)(
    int unit, uint32 ilkn_idx_0, bcm_port_t *master_logical_port);

/**
 * implemented by: dnx_algo_port_db_ilkn_nof_segments_set
 */
typedef int (*dnx_algo_port_db_ilkn_nof_segments_set_cb)(
    int unit, uint32 ilkn_idx_0, int nof_segments);

/**
 * implemented by: dnx_algo_port_db_ilkn_nof_segments_get
 */
typedef int (*dnx_algo_port_db_ilkn_nof_segments_get_cb)(
    int unit, uint32 ilkn_idx_0, int *nof_segments);

/**
 * implemented by: dnx_algo_port_db_ilkn_is_over_fabric_set
 */
typedef int (*dnx_algo_port_db_ilkn_is_over_fabric_set_cb)(
    int unit, uint32 ilkn_idx_0, int is_over_fabric);

/**
 * implemented by: dnx_algo_port_db_ilkn_is_over_fabric_get
 */
typedef int (*dnx_algo_port_db_ilkn_is_over_fabric_get_cb)(
    int unit, uint32 ilkn_idx_0, int *is_over_fabric);

/**
 * implemented by: dnx_algo_port_db_ilkn_is_elk_set
 */
typedef int (*dnx_algo_port_db_ilkn_is_elk_set_cb)(
    int unit, uint32 ilkn_idx_0, int is_elk);

/**
 * implemented by: dnx_algo_port_db_ilkn_is_elk_get
 */
typedef int (*dnx_algo_port_db_ilkn_is_elk_get_cb)(
    int unit, uint32 ilkn_idx_0, int *is_elk);

/**
 * implemented by: dnx_algo_port_db_ilkn_lanes_set
 */
typedef int (*dnx_algo_port_db_ilkn_lanes_set_cb)(
    int unit, uint32 ilkn_idx_0, bcm_pbmp_t lanes);

/**
 * implemented by: dnx_algo_port_db_ilkn_lanes_get
 */
typedef int (*dnx_algo_port_db_ilkn_lanes_get_cb)(
    int unit, uint32 ilkn_idx_0, bcm_pbmp_t *lanes);

/**
 * implemented by: dnx_algo_port_db_ilkn_lanes_pbmp_neq
 */
typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_neq_cb)(
    int unit, uint32 ilkn_idx_0, _shr_pbmp_t input_pbmp, uint8 *result);

/**
 * implemented by: dnx_algo_port_db_ilkn_lanes_pbmp_eq
 */
typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_eq_cb)(
    int unit, uint32 ilkn_idx_0, _shr_pbmp_t input_pbmp, uint8 *result);

/**
 * implemented by: dnx_algo_port_db_ilkn_lanes_pbmp_member
 */
typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_member_cb)(
    int unit, uint32 ilkn_idx_0, uint32 _input_port, uint8 *result);

/**
 * implemented by: dnx_algo_port_db_ilkn_lanes_pbmp_not_null
 */
typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_not_null_cb)(
    int unit, uint32 ilkn_idx_0, uint8 *result);

/**
 * implemented by: dnx_algo_port_db_ilkn_lanes_pbmp_is_null
 */
typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_is_null_cb)(
    int unit, uint32 ilkn_idx_0, uint8 *result);

/**
 * implemented by: dnx_algo_port_db_ilkn_lanes_pbmp_count
 */
typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_count_cb)(
    int unit, uint32 ilkn_idx_0, int *result);

/**
 * implemented by: dnx_algo_port_db_ilkn_lanes_pbmp_xor
 */
typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_xor_cb)(
    int unit, uint32 ilkn_idx_0, _shr_pbmp_t input_pbmp);

/**
 * implemented by: dnx_algo_port_db_ilkn_lanes_pbmp_remove
 */
typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_remove_cb)(
    int unit, uint32 ilkn_idx_0, _shr_pbmp_t input_pbmp);

/**
 * implemented by: dnx_algo_port_db_ilkn_lanes_pbmp_assign
 */
typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_assign_cb)(
    int unit, uint32 ilkn_idx_0, _shr_pbmp_t input_pbmp);

/**
 * implemented by: dnx_algo_port_db_ilkn_lanes_pbmp_get
 */
typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_get_cb)(
    int unit, uint32 ilkn_idx_0, _shr_pbmp_t *output_pbmp);

/**
 * implemented by: dnx_algo_port_db_ilkn_lanes_pbmp_and
 */
typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_and_cb)(
    int unit, uint32 ilkn_idx_0, _shr_pbmp_t input_pbmp);

/**
 * implemented by: dnx_algo_port_db_ilkn_lanes_pbmp_negate
 */
typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_negate_cb)(
    int unit, uint32 ilkn_idx_0, _shr_pbmp_t input_pbmp);

/**
 * implemented by: dnx_algo_port_db_ilkn_lanes_pbmp_or
 */
typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_or_cb)(
    int unit, uint32 ilkn_idx_0, _shr_pbmp_t input_pbmp);

/**
 * implemented by: dnx_algo_port_db_ilkn_lanes_pbmp_clear
 */
typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_clear_cb)(
    int unit, uint32 ilkn_idx_0);

/**
 * implemented by: dnx_algo_port_db_ilkn_lanes_pbmp_port_add
 */
typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_port_add_cb)(
    int unit, uint32 ilkn_idx_0, uint32 _input_port);

/**
 * implemented by: dnx_algo_port_db_ilkn_lanes_pbmp_port_flip
 */
typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_port_flip_cb)(
    int unit, uint32 ilkn_idx_0, uint32 _input_port);

/**
 * implemented by: dnx_algo_port_db_ilkn_lanes_pbmp_port_remove
 */
typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_port_remove_cb)(
    int unit, uint32 ilkn_idx_0, uint32 _input_port);

/**
 * implemented by: dnx_algo_port_db_ilkn_lanes_pbmp_port_set
 */
typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_port_set_cb)(
    int unit, uint32 ilkn_idx_0, uint32 _input_port);

/**
 * implemented by: dnx_algo_port_db_ilkn_lanes_pbmp_ports_range_add
 */
typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_ports_range_add_cb)(
    int unit, uint32 ilkn_idx_0, uint32 _first_port, uint32 _range);

/**
 * implemented by: dnx_algo_port_db_ilkn_lanes_pbmp_fmt
 */
typedef int (*dnx_algo_port_db_ilkn_lanes_pbmp_fmt_cb)(
    int unit, uint32 ilkn_idx_0, char* _buffer);

/**
 * implemented by: dnx_algo_port_db_ilkn_priority_set
 */
typedef int (*dnx_algo_port_db_ilkn_priority_set_cb)(
    int unit, uint32 ilkn_idx_0, bcm_port_nif_scheduler_t priority);

/**
 * implemented by: dnx_algo_port_db_ilkn_priority_get
 */
typedef int (*dnx_algo_port_db_ilkn_priority_get_cb)(
    int unit, uint32 ilkn_idx_0, bcm_port_nif_scheduler_t *priority);

/**
 * implemented by: dnx_algo_port_db_flexe_client_set
 */
typedef int (*dnx_algo_port_db_flexe_client_set_cb)(
    int unit, uint32 client_idx_0, CONST dnx_algo_port_db_flexe_client_t *client);

/**
 * implemented by: dnx_algo_port_db_flexe_client_get
 */
typedef int (*dnx_algo_port_db_flexe_client_get_cb)(
    int unit, uint32 client_idx_0, dnx_algo_port_db_flexe_client_t *client);

/**
 * implemented by: dnx_algo_port_db_flexe_client_alloc
 */
typedef int (*dnx_algo_port_db_flexe_client_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

/**
 * implemented by: dnx_algo_port_db_flexe_client_valid_set
 */
typedef int (*dnx_algo_port_db_flexe_client_valid_set_cb)(
    int unit, uint32 client_idx_0, int valid);

/**
 * implemented by: dnx_algo_port_db_flexe_client_valid_get
 */
typedef int (*dnx_algo_port_db_flexe_client_valid_get_cb)(
    int unit, uint32 client_idx_0, int *valid);

/**
 * implemented by: dnx_algo_port_db_flexe_client_client_index_set
 */
typedef int (*dnx_algo_port_db_flexe_client_client_index_set_cb)(
    int unit, uint32 client_idx_0, int client_index);

/**
 * implemented by: dnx_algo_port_db_flexe_client_client_index_get
 */
typedef int (*dnx_algo_port_db_flexe_client_client_index_get_cb)(
    int unit, uint32 client_idx_0, int *client_index);

/**
 * implemented by: dnx_algo_port_db_flexe_client_client_id_set
 */
typedef int (*dnx_algo_port_db_flexe_client_client_id_set_cb)(
    int unit, uint32 client_idx_0, int client_id);

/**
 * implemented by: dnx_algo_port_db_flexe_client_client_id_get
 */
typedef int (*dnx_algo_port_db_flexe_client_client_id_get_cb)(
    int unit, uint32 client_idx_0, int *client_id);

/**
 * implemented by: dnx_algo_port_db_flexe_client_master_logical_port_set
 */
typedef int (*dnx_algo_port_db_flexe_client_master_logical_port_set_cb)(
    int unit, uint32 client_idx_0, bcm_port_t master_logical_port);

/**
 * implemented by: dnx_algo_port_db_flexe_client_master_logical_port_get
 */
typedef int (*dnx_algo_port_db_flexe_client_master_logical_port_get_cb)(
    int unit, uint32 client_idx_0, bcm_port_t *master_logical_port);

/**
 * implemented by: dnx_algo_port_db_flexe_client_is_bypass_set
 */
typedef int (*dnx_algo_port_db_flexe_client_is_bypass_set_cb)(
    int unit, uint32 client_idx_0, int is_bypass);

/**
 * implemented by: dnx_algo_port_db_flexe_client_is_bypass_get
 */
typedef int (*dnx_algo_port_db_flexe_client_is_bypass_get_cb)(
    int unit, uint32 client_idx_0, int *is_bypass);

/**
 * implemented by: dnx_algo_port_db_flexe_mac_set
 */
typedef int (*dnx_algo_port_db_flexe_mac_set_cb)(
    int unit, uint32 mac_idx_0, CONST dnx_algo_port_db_flexe_mac_t *mac);

/**
 * implemented by: dnx_algo_port_db_flexe_mac_get
 */
typedef int (*dnx_algo_port_db_flexe_mac_get_cb)(
    int unit, uint32 mac_idx_0, dnx_algo_port_db_flexe_mac_t *mac);

/**
 * implemented by: dnx_algo_port_db_flexe_mac_alloc
 */
typedef int (*dnx_algo_port_db_flexe_mac_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

/**
 * implemented by: dnx_algo_port_db_flexe_mac_valid_set
 */
typedef int (*dnx_algo_port_db_flexe_mac_valid_set_cb)(
    int unit, uint32 mac_idx_0, int valid);

/**
 * implemented by: dnx_algo_port_db_flexe_mac_valid_get
 */
typedef int (*dnx_algo_port_db_flexe_mac_valid_get_cb)(
    int unit, uint32 mac_idx_0, int *valid);

/**
 * implemented by: dnx_algo_port_db_flexe_mac_master_logical_port_set
 */
typedef int (*dnx_algo_port_db_flexe_mac_master_logical_port_set_cb)(
    int unit, uint32 mac_idx_0, bcm_port_t master_logical_port);

/**
 * implemented by: dnx_algo_port_db_flexe_mac_master_logical_port_get
 */
typedef int (*dnx_algo_port_db_flexe_mac_master_logical_port_get_cb)(
    int unit, uint32 mac_idx_0, bcm_port_t *master_logical_port);

/**
 * implemented by: dnx_algo_port_db_flexe_mac_client_index_set
 */
typedef int (*dnx_algo_port_db_flexe_mac_client_index_set_cb)(
    int unit, uint32 mac_idx_0, int client_index);

/**
 * implemented by: dnx_algo_port_db_flexe_mac_client_index_get
 */
typedef int (*dnx_algo_port_db_flexe_mac_client_index_get_cb)(
    int unit, uint32 mac_idx_0, int *client_index);

/**
 * implemented by: dnx_algo_port_db_flexe_mac_logical_fifos_set
 */
typedef int (*dnx_algo_port_db_flexe_mac_logical_fifos_set_cb)(
    int unit, uint32 mac_idx_0, uint32 logical_fifos_idx_0, dnx_algo_port_rmc_info_t logical_fifos);

/**
 * implemented by: dnx_algo_port_db_flexe_mac_logical_fifos_get
 */
typedef int (*dnx_algo_port_db_flexe_mac_logical_fifos_get_cb)(
    int unit, uint32 mac_idx_0, uint32 logical_fifos_idx_0, dnx_algo_port_rmc_info_t *logical_fifos);

/**
 * implemented by: dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_set
 */
typedef int (*dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_set_cb)(
    int unit, uint32 mac_idx_0, uint32 _bit_num);

/**
 * implemented by: dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_clear
 */
typedef int (*dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_clear_cb)(
    int unit, uint32 mac_idx_0, uint32 _bit_num);

/**
 * implemented by: dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_get
 */
typedef int (*dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_get_cb)(
    int unit, uint32 mac_idx_0, uint32 _bit_num, uint8* result);

/**
 * implemented by: dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_read
 */
typedef int (*dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_read_cb)(
    int unit, uint32 mac_idx_0, uint32 sw_state_bmp_first, uint32 result_first, uint32 _range, SHR_BITDCL *result);

/**
 * implemented by: dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_write
 */
typedef int (*dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_write_cb)(
    int unit, uint32 mac_idx_0, uint32 sw_state_bmp_first, uint32 input_bmp_first, uint32 _range, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_and
 */
typedef int (*dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_and_cb)(
    int unit, uint32 mac_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_or
 */
typedef int (*dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_or_cb)(
    int unit, uint32 mac_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_xor
 */
typedef int (*dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_xor_cb)(
    int unit, uint32 mac_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_remove
 */
typedef int (*dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_remove_cb)(
    int unit, uint32 mac_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_negate
 */
typedef int (*dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_negate_cb)(
    int unit, uint32 mac_idx_0, uint32 _first, uint32 _count);

/**
 * implemented by: dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_clear
 */
typedef int (*dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_clear_cb)(
    int unit, uint32 mac_idx_0, uint32 _first, uint32 _count);

/**
 * implemented by: dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_set
 */
typedef int (*dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_set_cb)(
    int unit, uint32 mac_idx_0, uint32 _first, uint32 _count);

/**
 * implemented by: dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_null
 */
typedef int (*dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_null_cb)(
    int unit, uint32 mac_idx_0, uint32 _first, uint32 _count, uint8 *result);

/**
 * implemented by: dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_test
 */
typedef int (*dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_test_cb)(
    int unit, uint32 mac_idx_0, uint32 _first, uint32 _count, uint8 *result);

/**
 * implemented by: dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_eq
 */
typedef int (*dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_eq_cb)(
    int unit, uint32 mac_idx_0, SHR_BITDCL *input_bmp, uint32 _first, uint32 _count, uint8 *result);

/**
 * implemented by: dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_count
 */
typedef int (*dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_count_cb)(
    int unit, uint32 mac_idx_0, uint32 _first, uint32 _range, int *result);

/**
 * implemented by: dnx_algo_port_db_flexe_sar_set
 */
typedef int (*dnx_algo_port_db_flexe_sar_set_cb)(
    int unit, uint32 sar_idx_0, CONST dnx_algo_port_db_flexe_sar_t *sar);

/**
 * implemented by: dnx_algo_port_db_flexe_sar_get
 */
typedef int (*dnx_algo_port_db_flexe_sar_get_cb)(
    int unit, uint32 sar_idx_0, dnx_algo_port_db_flexe_sar_t *sar);

/**
 * implemented by: dnx_algo_port_db_flexe_sar_alloc
 */
typedef int (*dnx_algo_port_db_flexe_sar_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

/**
 * implemented by: dnx_algo_port_db_flexe_sar_valid_set
 */
typedef int (*dnx_algo_port_db_flexe_sar_valid_set_cb)(
    int unit, uint32 sar_idx_0, int valid);

/**
 * implemented by: dnx_algo_port_db_flexe_sar_valid_get
 */
typedef int (*dnx_algo_port_db_flexe_sar_valid_get_cb)(
    int unit, uint32 sar_idx_0, int *valid);

/**
 * implemented by: dnx_algo_port_db_flexe_sar_master_logical_port_set
 */
typedef int (*dnx_algo_port_db_flexe_sar_master_logical_port_set_cb)(
    int unit, uint32 sar_idx_0, bcm_port_t master_logical_port);

/**
 * implemented by: dnx_algo_port_db_flexe_sar_master_logical_port_get
 */
typedef int (*dnx_algo_port_db_flexe_sar_master_logical_port_get_cb)(
    int unit, uint32 sar_idx_0, bcm_port_t *master_logical_port);

/**
 * implemented by: dnx_algo_port_db_flexe_sar_client_index_set
 */
typedef int (*dnx_algo_port_db_flexe_sar_client_index_set_cb)(
    int unit, uint32 sar_idx_0, int client_index);

/**
 * implemented by: dnx_algo_port_db_flexe_sar_client_index_get
 */
typedef int (*dnx_algo_port_db_flexe_sar_client_index_get_cb)(
    int unit, uint32 sar_idx_0, int *client_index);

/**
 * implemented by: dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_set
 */
typedef int (*dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_set_cb)(
    int unit, uint32 sar_idx_0, uint32 _bit_num);

/**
 * implemented by: dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_clear
 */
typedef int (*dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_clear_cb)(
    int unit, uint32 sar_idx_0, uint32 _bit_num);

/**
 * implemented by: dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_get
 */
typedef int (*dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_get_cb)(
    int unit, uint32 sar_idx_0, uint32 _bit_num, uint8* result);

/**
 * implemented by: dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_read
 */
typedef int (*dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_read_cb)(
    int unit, uint32 sar_idx_0, uint32 sw_state_bmp_first, uint32 result_first, uint32 _range, SHR_BITDCL *result);

/**
 * implemented by: dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_write
 */
typedef int (*dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_write_cb)(
    int unit, uint32 sar_idx_0, uint32 sw_state_bmp_first, uint32 input_bmp_first, uint32 _range, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_and
 */
typedef int (*dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_and_cb)(
    int unit, uint32 sar_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_or
 */
typedef int (*dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_or_cb)(
    int unit, uint32 sar_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_xor
 */
typedef int (*dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_xor_cb)(
    int unit, uint32 sar_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_remove
 */
typedef int (*dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_remove_cb)(
    int unit, uint32 sar_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_negate
 */
typedef int (*dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_negate_cb)(
    int unit, uint32 sar_idx_0, uint32 _first, uint32 _count);

/**
 * implemented by: dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_clear
 */
typedef int (*dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_clear_cb)(
    int unit, uint32 sar_idx_0, uint32 _first, uint32 _count);

/**
 * implemented by: dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_set
 */
typedef int (*dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_set_cb)(
    int unit, uint32 sar_idx_0, uint32 _first, uint32 _count);

/**
 * implemented by: dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_null
 */
typedef int (*dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_null_cb)(
    int unit, uint32 sar_idx_0, uint32 _first, uint32 _count, uint8 *result);

/**
 * implemented by: dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_test
 */
typedef int (*dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_test_cb)(
    int unit, uint32 sar_idx_0, uint32 _first, uint32 _count, uint8 *result);

/**
 * implemented by: dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_eq
 */
typedef int (*dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_eq_cb)(
    int unit, uint32 sar_idx_0, SHR_BITDCL *input_bmp, uint32 _first, uint32 _count, uint8 *result);

/**
 * implemented by: dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_count
 */
typedef int (*dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_count_cb)(
    int unit, uint32 sar_idx_0, uint32 _first, uint32 _range, int *result);

/**
 * implemented by: dnx_algo_port_db_flexe_phy_set
 */
typedef int (*dnx_algo_port_db_flexe_phy_set_cb)(
    int unit, uint32 phy_idx_0, CONST dnx_algo_port_db_flexe_phy_t *phy);

/**
 * implemented by: dnx_algo_port_db_flexe_phy_get
 */
typedef int (*dnx_algo_port_db_flexe_phy_get_cb)(
    int unit, uint32 phy_idx_0, dnx_algo_port_db_flexe_phy_t *phy);

/**
 * implemented by: dnx_algo_port_db_flexe_phy_alloc
 */
typedef int (*dnx_algo_port_db_flexe_phy_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

/**
 * implemented by: dnx_algo_port_db_flexe_phy_valid_set
 */
typedef int (*dnx_algo_port_db_flexe_phy_valid_set_cb)(
    int unit, uint32 phy_idx_0, int valid);

/**
 * implemented by: dnx_algo_port_db_flexe_phy_valid_get
 */
typedef int (*dnx_algo_port_db_flexe_phy_valid_get_cb)(
    int unit, uint32 phy_idx_0, int *valid);

/**
 * implemented by: dnx_algo_port_db_flexe_phy_master_logical_port_set
 */
typedef int (*dnx_algo_port_db_flexe_phy_master_logical_port_set_cb)(
    int unit, uint32 phy_idx_0, bcm_port_t master_logical_port);

/**
 * implemented by: dnx_algo_port_db_flexe_phy_master_logical_port_get
 */
typedef int (*dnx_algo_port_db_flexe_phy_master_logical_port_get_cb)(
    int unit, uint32 phy_idx_0, bcm_port_t *master_logical_port);

/**
 * implemented by: dnx_algo_port_db_flexe_phy_logical_phy_id_set
 */
typedef int (*dnx_algo_port_db_flexe_phy_logical_phy_id_set_cb)(
    int unit, uint32 phy_idx_0, int logical_phy_id);

/**
 * implemented by: dnx_algo_port_db_flexe_phy_logical_phy_id_get
 */
typedef int (*dnx_algo_port_db_flexe_phy_logical_phy_id_get_cb)(
    int unit, uint32 phy_idx_0, int *logical_phy_id);

/**
 * implemented by: dnx_algo_port_db_flexe_phy_core_port_set
 */
typedef int (*dnx_algo_port_db_flexe_phy_core_port_set_cb)(
    int unit, uint32 phy_idx_0, int core_port);

/**
 * implemented by: dnx_algo_port_db_flexe_phy_core_port_get
 */
typedef int (*dnx_algo_port_db_flexe_phy_core_port_get_cb)(
    int unit, uint32 phy_idx_0, int *core_port);

/**
 * implemented by: dnx_algo_port_db_flexe_phy_instance_base_set
 */
typedef int (*dnx_algo_port_db_flexe_phy_instance_base_set_cb)(
    int unit, uint32 phy_idx_0, uint8 instance_base);

/**
 * implemented by: dnx_algo_port_db_flexe_phy_instance_base_get
 */
typedef int (*dnx_algo_port_db_flexe_phy_instance_base_get_cb)(
    int unit, uint32 phy_idx_0, uint8 *instance_base);

/**
 * implemented by: dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_set
 */
typedef int (*dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_set_cb)(
    int unit, uint32 phy_idx_0, uint32 _bit_num);

/**
 * implemented by: dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_clear
 */
typedef int (*dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_clear_cb)(
    int unit, uint32 phy_idx_0, uint32 _bit_num);

/**
 * implemented by: dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_get
 */
typedef int (*dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_get_cb)(
    int unit, uint32 phy_idx_0, uint32 _bit_num, uint8* result);

/**
 * implemented by: dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_read
 */
typedef int (*dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_read_cb)(
    int unit, uint32 phy_idx_0, uint32 sw_state_bmp_first, uint32 result_first, uint32 _range, SHR_BITDCL *result);

/**
 * implemented by: dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_write
 */
typedef int (*dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_write_cb)(
    int unit, uint32 phy_idx_0, uint32 sw_state_bmp_first, uint32 input_bmp_first, uint32 _range, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_and
 */
typedef int (*dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_and_cb)(
    int unit, uint32 phy_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_or
 */
typedef int (*dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_or_cb)(
    int unit, uint32 phy_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_xor
 */
typedef int (*dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_xor_cb)(
    int unit, uint32 phy_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_remove
 */
typedef int (*dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_remove_cb)(
    int unit, uint32 phy_idx_0, uint32 _first, uint32 _count, SHR_BITDCL *input_bmp);

/**
 * implemented by: dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_negate
 */
typedef int (*dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_negate_cb)(
    int unit, uint32 phy_idx_0, uint32 _first, uint32 _count);

/**
 * implemented by: dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_clear
 */
typedef int (*dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_clear_cb)(
    int unit, uint32 phy_idx_0, uint32 _first, uint32 _count);

/**
 * implemented by: dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_set
 */
typedef int (*dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_set_cb)(
    int unit, uint32 phy_idx_0, uint32 _first, uint32 _count);

/**
 * implemented by: dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_null
 */
typedef int (*dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_null_cb)(
    int unit, uint32 phy_idx_0, uint32 _first, uint32 _count, uint8 *result);

/**
 * implemented by: dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_test
 */
typedef int (*dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_test_cb)(
    int unit, uint32 phy_idx_0, uint32 _first, uint32 _count, uint8 *result);

/**
 * implemented by: dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_eq
 */
typedef int (*dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_eq_cb)(
    int unit, uint32 phy_idx_0, SHR_BITDCL *input_bmp, uint32 _first, uint32 _count, uint8 *result);

/**
 * implemented by: dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_count
 */
typedef int (*dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_count_cb)(
    int unit, uint32 phy_idx_0, uint32 _first, uint32 _range, int *result);

/**
 * implemented by: dnx_algo_port_db_fabric_set
 */
typedef int (*dnx_algo_port_db_fabric_set_cb)(
    int unit, uint32 fabric_idx_0, CONST dnx_algo_port_db_fabric_t *fabric);

/**
 * implemented by: dnx_algo_port_db_fabric_get
 */
typedef int (*dnx_algo_port_db_fabric_get_cb)(
    int unit, uint32 fabric_idx_0, dnx_algo_port_db_fabric_t *fabric);

/**
 * implemented by: dnx_algo_port_db_fabric_alloc
 */
typedef int (*dnx_algo_port_db_fabric_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0);

/**
 * implemented by: dnx_algo_port_db_fabric_valid_set
 */
typedef int (*dnx_algo_port_db_fabric_valid_set_cb)(
    int unit, uint32 fabric_idx_0, int valid);

/**
 * implemented by: dnx_algo_port_db_fabric_valid_get
 */
typedef int (*dnx_algo_port_db_fabric_valid_get_cb)(
    int unit, uint32 fabric_idx_0, int *valid);

/**
 * implemented by: dnx_algo_port_db_fabric_link_set
 */
typedef int (*dnx_algo_port_db_fabric_link_set_cb)(
    int unit, uint32 fabric_idx_0, int link);

/**
 * implemented by: dnx_algo_port_db_fabric_link_get
 */
typedef int (*dnx_algo_port_db_fabric_link_get_cb)(
    int unit, uint32 fabric_idx_0, int *link);

/**
 * implemented by: dnx_algo_port_db_fabric_master_logical_port_set
 */
typedef int (*dnx_algo_port_db_fabric_master_logical_port_set_cb)(
    int unit, uint32 fabric_idx_0, bcm_port_t master_logical_port);

/**
 * implemented by: dnx_algo_port_db_fabric_master_logical_port_get
 */
typedef int (*dnx_algo_port_db_fabric_master_logical_port_get_cb)(
    int unit, uint32 fabric_idx_0, bcm_port_t *master_logical_port);

/**
 * implemented by: dnx_algo_port_db_fabric_prbs_mode_set
 */
typedef int (*dnx_algo_port_db_fabric_prbs_mode_set_cb)(
    int unit, uint32 fabric_idx_0, int prbs_mode);

/**
 * implemented by: dnx_algo_port_db_fabric_prbs_mode_get
 */
typedef int (*dnx_algo_port_db_fabric_prbs_mode_get_cb)(
    int unit, uint32 fabric_idx_0, int *prbs_mode);

/**
 * implemented by: dnx_algo_port_db_fabric_speed_set
 */
typedef int (*dnx_algo_port_db_fabric_speed_set_cb)(
    int unit, uint32 fabric_idx_0, int speed);

/**
 * implemented by: dnx_algo_port_db_fabric_speed_get
 */
typedef int (*dnx_algo_port_db_fabric_speed_get_cb)(
    int unit, uint32 fabric_idx_0, int *speed);

/**
 * implemented by: dnx_algo_port_db_fabric_loopback_original_link_training_set
 */
typedef int (*dnx_algo_port_db_fabric_loopback_original_link_training_set_cb)(
    int unit, uint32 fabric_idx_0, int loopback_original_link_training);

/**
 * implemented by: dnx_algo_port_db_fabric_loopback_original_link_training_get
 */
typedef int (*dnx_algo_port_db_fabric_loopback_original_link_training_get_cb)(
    int unit, uint32 fabric_idx_0, int *loopback_original_link_training);

/**
 * implemented by: dnx_algo_port_db_fabric_loopback_original_phy_lane_config_set
 */
typedef int (*dnx_algo_port_db_fabric_loopback_original_phy_lane_config_set_cb)(
    int unit, uint32 fabric_idx_0, int loopback_original_phy_lane_config);

/**
 * implemented by: dnx_algo_port_db_fabric_loopback_original_phy_lane_config_get
 */
typedef int (*dnx_algo_port_db_fabric_loopback_original_phy_lane_config_get_cb)(
    int unit, uint32 fabric_idx_0, int *loopback_original_phy_lane_config);

/**
 * implemented by: dnx_algo_port_db_tm_interface_set
 */
typedef int (*dnx_algo_port_db_tm_interface_set_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, CONST dnx_algo_port_db_tm_interface_t *tm_interface);

/**
 * implemented by: dnx_algo_port_db_tm_interface_get
 */
typedef int (*dnx_algo_port_db_tm_interface_get_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, dnx_algo_port_db_tm_interface_t *tm_interface);

/**
 * implemented by: dnx_algo_port_db_tm_interface_alloc
 */
typedef int (*dnx_algo_port_db_tm_interface_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0, uint32 nof_instances_to_alloc_1);

/**
 * implemented by: dnx_algo_port_db_tm_interface_valid_set
 */
typedef int (*dnx_algo_port_db_tm_interface_valid_set_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, int valid);

/**
 * implemented by: dnx_algo_port_db_tm_interface_valid_get
 */
typedef int (*dnx_algo_port_db_tm_interface_valid_get_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, int *valid);

/**
 * implemented by: dnx_algo_port_db_tm_interface_is_channelized_set
 */
typedef int (*dnx_algo_port_db_tm_interface_is_channelized_set_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, int is_channelized);

/**
 * implemented by: dnx_algo_port_db_tm_interface_is_channelized_get
 */
typedef int (*dnx_algo_port_db_tm_interface_is_channelized_get_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, int *is_channelized);

/**
 * implemented by: dnx_algo_port_db_tm_interface_is_ingress_interleave_set
 */
typedef int (*dnx_algo_port_db_tm_interface_is_ingress_interleave_set_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, int is_ingress_interleave);

/**
 * implemented by: dnx_algo_port_db_tm_interface_is_ingress_interleave_get
 */
typedef int (*dnx_algo_port_db_tm_interface_is_ingress_interleave_get_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, int *is_ingress_interleave);

/**
 * implemented by: dnx_algo_port_db_tm_interface_is_egress_interleave_set
 */
typedef int (*dnx_algo_port_db_tm_interface_is_egress_interleave_set_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, int is_egress_interleave);

/**
 * implemented by: dnx_algo_port_db_tm_interface_is_egress_interleave_get
 */
typedef int (*dnx_algo_port_db_tm_interface_is_egress_interleave_get_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, int *is_egress_interleave);

/**
 * implemented by: dnx_algo_port_db_tm_interface_egr_if_set
 */
typedef int (*dnx_algo_port_db_tm_interface_egr_if_set_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, int egr_if);

/**
 * implemented by: dnx_algo_port_db_tm_interface_egr_if_get
 */
typedef int (*dnx_algo_port_db_tm_interface_egr_if_get_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, int *egr_if);

/**
 * implemented by: dnx_algo_port_db_tm_interface_tdm_mode_set
 */
typedef int (*dnx_algo_port_db_tm_interface_tdm_mode_set_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, dnx_algo_port_if_tdm_mode_e tdm_mode);

/**
 * implemented by: dnx_algo_port_db_tm_interface_tdm_mode_get
 */
typedef int (*dnx_algo_port_db_tm_interface_tdm_mode_get_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, dnx_algo_port_if_tdm_mode_e *tdm_mode);

/**
 * implemented by: dnx_algo_port_db_tm_interface_master_tdm_logical_port_set
 */
typedef int (*dnx_algo_port_db_tm_interface_master_tdm_logical_port_set_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, bcm_port_t master_tdm_logical_port);

/**
 * implemented by: dnx_algo_port_db_tm_interface_master_tdm_logical_port_get
 */
typedef int (*dnx_algo_port_db_tm_interface_master_tdm_logical_port_get_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, bcm_port_t *master_tdm_logical_port);

/**
 * implemented by: dnx_algo_port_db_tm_interface_master_non_tdm_logical_port_set
 */
typedef int (*dnx_algo_port_db_tm_interface_master_non_tdm_logical_port_set_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, bcm_port_t master_non_tdm_logical_port);

/**
 * implemented by: dnx_algo_port_db_tm_interface_master_non_tdm_logical_port_get
 */
typedef int (*dnx_algo_port_db_tm_interface_master_non_tdm_logical_port_get_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, bcm_port_t *master_non_tdm_logical_port);

/**
 * implemented by: dnx_algo_port_db_tm_interface_master_logical_port_set
 */
typedef int (*dnx_algo_port_db_tm_interface_master_logical_port_set_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, bcm_port_t master_logical_port);

/**
 * implemented by: dnx_algo_port_db_tm_interface_master_logical_port_get
 */
typedef int (*dnx_algo_port_db_tm_interface_master_logical_port_get_cb)(
    int unit, uint32 tm_interface_idx_0, uint32 tm_interface_idx_1, bcm_port_t *master_logical_port);

/**
 * implemented by: dnx_algo_port_db_interface_set
 */
typedef int (*dnx_algo_port_db_interface_set_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, CONST dnx_algo_port_db_interface_t *interface);

/**
 * implemented by: dnx_algo_port_db_interface_get
 */
typedef int (*dnx_algo_port_db_interface_get_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, dnx_algo_port_db_interface_t *interface);

/**
 * implemented by: dnx_algo_port_db_interface_alloc
 */
typedef int (*dnx_algo_port_db_interface_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0, uint32 nof_instances_to_alloc_1);

/**
 * implemented by: dnx_algo_port_db_interface_valid_set
 */
typedef int (*dnx_algo_port_db_interface_valid_set_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, int valid);

/**
 * implemented by: dnx_algo_port_db_interface_valid_get
 */
typedef int (*dnx_algo_port_db_interface_valid_get_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, int *valid);

/**
 * implemented by: dnx_algo_port_db_interface_core_set
 */
typedef int (*dnx_algo_port_db_interface_core_set_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, bcm_core_t core);

/**
 * implemented by: dnx_algo_port_db_interface_core_get
 */
typedef int (*dnx_algo_port_db_interface_core_get_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, bcm_core_t *core);

/**
 * implemented by: dnx_algo_port_db_interface_rx_speed_set
 */
typedef int (*dnx_algo_port_db_interface_rx_speed_set_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, int rx_speed);

/**
 * implemented by: dnx_algo_port_db_interface_rx_speed_get
 */
typedef int (*dnx_algo_port_db_interface_rx_speed_get_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, int *rx_speed);

/**
 * implemented by: dnx_algo_port_db_interface_tx_speed_set
 */
typedef int (*dnx_algo_port_db_interface_tx_speed_set_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, int tx_speed);

/**
 * implemented by: dnx_algo_port_db_interface_tx_speed_get
 */
typedef int (*dnx_algo_port_db_interface_tx_speed_get_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, int *tx_speed);

/**
 * implemented by: dnx_algo_port_db_interface_master_logical_port_set
 */
typedef int (*dnx_algo_port_db_interface_master_logical_port_set_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, bcm_port_t master_logical_port);

/**
 * implemented by: dnx_algo_port_db_interface_master_logical_port_get
 */
typedef int (*dnx_algo_port_db_interface_master_logical_port_get_cb)(
    int unit, uint32 interface_idx_0, uint32 interface_idx_1, bcm_port_t *master_logical_port);

/**
 * implemented by: dnx_algo_port_db_sch_interface_set
 */
typedef int (*dnx_algo_port_db_sch_interface_set_cb)(
    int unit, uint32 sch_interface_idx_0, uint32 sch_interface_idx_1, CONST dnx_algo_port_db_sch_if_t *sch_interface);

/**
 * implemented by: dnx_algo_port_db_sch_interface_get
 */
typedef int (*dnx_algo_port_db_sch_interface_get_cb)(
    int unit, uint32 sch_interface_idx_0, uint32 sch_interface_idx_1, dnx_algo_port_db_sch_if_t *sch_interface);

/**
 * implemented by: dnx_algo_port_db_sch_interface_alloc
 */
typedef int (*dnx_algo_port_db_sch_interface_alloc_cb)(
    int unit, uint32 nof_instances_to_alloc_0, uint32 nof_instances_to_alloc_1);

/**
 * implemented by: dnx_algo_port_db_sch_interface_valid_set
 */
typedef int (*dnx_algo_port_db_sch_interface_valid_set_cb)(
    int unit, uint32 sch_interface_idx_0, uint32 sch_interface_idx_1, int valid);

/**
 * implemented by: dnx_algo_port_db_sch_interface_valid_get
 */
typedef int (*dnx_algo_port_db_sch_interface_valid_get_cb)(
    int unit, uint32 sch_interface_idx_0, uint32 sch_interface_idx_1, int *valid);

/**
 * implemented by: dnx_algo_port_db_sch_interface_sch_if_set
 */
typedef int (*dnx_algo_port_db_sch_interface_sch_if_set_cb)(
    int unit, uint32 sch_interface_idx_0, uint32 sch_interface_idx_1, int sch_if);

/**
 * implemented by: dnx_algo_port_db_sch_interface_sch_if_get
 */
typedef int (*dnx_algo_port_db_sch_interface_sch_if_get_cb)(
    int unit, uint32 sch_interface_idx_0, uint32 sch_interface_idx_1, int *sch_if);

/**
 * implemented by: dnx_algo_port_db_sch_interface_priority_propagation_enable_set
 */
typedef int (*dnx_algo_port_db_sch_interface_priority_propagation_enable_set_cb)(
    int unit, uint32 sch_interface_idx_0, uint32 sch_interface_idx_1, int priority_propagation_enable);

/**
 * implemented by: dnx_algo_port_db_sch_interface_priority_propagation_enable_get
 */
typedef int (*dnx_algo_port_db_sch_interface_priority_propagation_enable_get_cb)(
    int unit, uint32 sch_interface_idx_0, uint32 sch_interface_idx_1, int *priority_propagation_enable);

/**
 * implemented by: dnx_algo_port_db_sch_interface_master_logical_port_set
 */
typedef int (*dnx_algo_port_db_sch_interface_master_logical_port_set_cb)(
    int unit, uint32 sch_interface_idx_0, uint32 sch_interface_idx_1, bcm_port_t master_logical_port);

/**
 * implemented by: dnx_algo_port_db_sch_interface_master_logical_port_get
 */
typedef int (*dnx_algo_port_db_sch_interface_master_logical_port_get_cb)(
    int unit, uint32 sch_interface_idx_0, uint32 sch_interface_idx_1, bcm_port_t *master_logical_port);

/**
 * implemented by: dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_set
 */
typedef int (*dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_set_cb)(
    int unit, dnx_algo_template_t skip_first_user_defined_header_size_profile_data);

/**
 * implemented by: dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_get
 */
typedef int (*dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_get_cb)(
    int unit, dnx_algo_template_t *skip_first_user_defined_header_size_profile_data);

/**
 * implemented by: dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_create
 */
typedef int (*dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_create_cb)(
    int unit, dnx_algo_template_create_data_t * data, void *extra_arguments);

/**
 * implemented by: dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_exchange
 */
typedef int (*dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_exchange_cb)(
    int unit, uint32 flags, const dnx_algo_skip_first_header_info_t *profile_data, int old_profile, const void *extra_arguments, int *new_profile, uint8 *first_reference, uint8 *last_reference);

/**
 * implemented by: dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_profile_data_get
 */
typedef int (*dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_profile_data_get_cb)(
    int unit, int profile, int *ref_count, dnx_algo_skip_first_header_info_t *profile_data);

/**
 * implemented by: dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_profile_get
 */
typedef int (*dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_profile_get_cb)(
    int unit, const dnx_algo_skip_first_header_info_t *profile_data, int *profile);

/**
 * implemented by: dnx_algo_port_db_prd_set
 */
typedef int (*dnx_algo_port_db_prd_set_cb)(
    int unit, uint32 prd_idx_0, CONST dnx_algo_prd_info_t *prd);

/**
 * implemented by: dnx_algo_port_db_prd_get
 */
typedef int (*dnx_algo_port_db_prd_get_cb)(
    int unit, uint32 prd_idx_0, dnx_algo_prd_info_t *prd);

/**
 * implemented by: dnx_algo_port_db_prd_port_to_profile_map_set
 */
typedef int (*dnx_algo_port_db_prd_port_to_profile_map_set_cb)(
    int unit, uint32 prd_idx_0, uint32 port_to_profile_map);

/**
 * implemented by: dnx_algo_port_db_prd_port_to_profile_map_get
 */
typedef int (*dnx_algo_port_db_prd_port_to_profile_map_get_cb)(
    int unit, uint32 prd_idx_0, uint32 *port_to_profile_map);

/*
 * STRUCTs
 */

/**
 * This structure holds the access functions for the variable dummy
 */
typedef struct {
    dnx_algo_port_db_general_dummy_set_cb set;
    dnx_algo_port_db_general_dummy_get_cb get;
} dnx_algo_port_db_general_dummy_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_port_db_general_t
 */
typedef struct {
    /**
     * Access struct for dummy
     */
    dnx_algo_port_db_general_dummy_cbs dummy;
} dnx_algo_port_db_general_cbs;

/**
 * This structure holds the access functions for the variable state
 */
typedef struct {
    dnx_algo_port_db_logical_state_set_cb set;
    dnx_algo_port_db_logical_state_get_cb get;
} dnx_algo_port_db_logical_state_cbs;

/**
 * This structure holds the access functions for the variable info
 */
typedef struct {
    dnx_algo_port_db_logical_info_set_cb set;
    dnx_algo_port_db_logical_info_get_cb get;
} dnx_algo_port_db_logical_info_cbs;

/**
 * This structure holds the access functions for the variable interface_type
 */
typedef struct {
    dnx_algo_port_db_logical_interface_type_set_cb set;
    dnx_algo_port_db_logical_interface_type_get_cb get;
} dnx_algo_port_db_logical_interface_type_cbs;

/**
 * This structure holds the access functions for the variable interface_offset
 */
typedef struct {
    dnx_algo_port_db_logical_interface_offset_set_cb set;
    dnx_algo_port_db_logical_interface_offset_get_cb get;
} dnx_algo_port_db_logical_interface_offset_cbs;

/**
 * This structure holds the access functions for the variable nif_handle
 */
typedef struct {
    dnx_algo_port_db_logical_nif_handle_set_cb set;
    dnx_algo_port_db_logical_nif_handle_get_cb get;
} dnx_algo_port_db_logical_nif_handle_cbs;

/**
 * This structure holds the access functions for the variable h0
 */
typedef struct {
    dnx_algo_port_db_logical_tm_handle_h0_set_cb set;
    dnx_algo_port_db_logical_tm_handle_h0_get_cb get;
} dnx_algo_port_db_logical_tm_handle_h0_cbs;

/**
 * This structure holds the access functions for the variable h1
 */
typedef struct {
    dnx_algo_port_db_logical_tm_handle_h1_set_cb set;
    dnx_algo_port_db_logical_tm_handle_h1_get_cb get;
} dnx_algo_port_db_logical_tm_handle_h1_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_port_db_2d_handle_t
 */
typedef struct {
    dnx_algo_port_db_logical_tm_handle_set_cb set;
    dnx_algo_port_db_logical_tm_handle_get_cb get;
    /**
     * Access struct for h0
     */
    dnx_algo_port_db_logical_tm_handle_h0_cbs h0;
    /**
     * Access struct for h1
     */
    dnx_algo_port_db_logical_tm_handle_h1_cbs h1;
} dnx_algo_port_db_logical_tm_handle_cbs;

/**
 * This structure holds the access functions for the variable h0
 */
typedef struct {
    dnx_algo_port_db_logical_sch_handle_h0_set_cb set;
    dnx_algo_port_db_logical_sch_handle_h0_get_cb get;
} dnx_algo_port_db_logical_sch_handle_h0_cbs;

/**
 * This structure holds the access functions for the variable h1
 */
typedef struct {
    dnx_algo_port_db_logical_sch_handle_h1_set_cb set;
    dnx_algo_port_db_logical_sch_handle_h1_get_cb get;
} dnx_algo_port_db_logical_sch_handle_h1_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_port_db_2d_handle_t
 */
typedef struct {
    dnx_algo_port_db_logical_sch_handle_set_cb set;
    dnx_algo_port_db_logical_sch_handle_get_cb get;
    /**
     * Access struct for h0
     */
    dnx_algo_port_db_logical_sch_handle_h0_cbs h0;
    /**
     * Access struct for h1
     */
    dnx_algo_port_db_logical_sch_handle_h1_cbs h1;
} dnx_algo_port_db_logical_sch_handle_cbs;

/**
 * This structure holds the access functions for the variable h0
 */
typedef struct {
    dnx_algo_port_db_logical_sch_if_handle_h0_set_cb set;
    dnx_algo_port_db_logical_sch_if_handle_h0_get_cb get;
} dnx_algo_port_db_logical_sch_if_handle_h0_cbs;

/**
 * This structure holds the access functions for the variable h1
 */
typedef struct {
    dnx_algo_port_db_logical_sch_if_handle_h1_set_cb set;
    dnx_algo_port_db_logical_sch_if_handle_h1_get_cb get;
} dnx_algo_port_db_logical_sch_if_handle_h1_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_port_db_2d_handle_t
 */
typedef struct {
    dnx_algo_port_db_logical_sch_if_handle_set_cb set;
    dnx_algo_port_db_logical_sch_if_handle_get_cb get;
    /**
     * Access struct for h0
     */
    dnx_algo_port_db_logical_sch_if_handle_h0_cbs h0;
    /**
     * Access struct for h1
     */
    dnx_algo_port_db_logical_sch_if_handle_h1_cbs h1;
} dnx_algo_port_db_logical_sch_if_handle_cbs;

/**
 * This structure holds the access functions for the variable h0
 */
typedef struct {
    dnx_algo_port_db_logical_pp_handle_h0_set_cb set;
    dnx_algo_port_db_logical_pp_handle_h0_get_cb get;
} dnx_algo_port_db_logical_pp_handle_h0_cbs;

/**
 * This structure holds the access functions for the variable h1
 */
typedef struct {
    dnx_algo_port_db_logical_pp_handle_h1_set_cb set;
    dnx_algo_port_db_logical_pp_handle_h1_get_cb get;
} dnx_algo_port_db_logical_pp_handle_h1_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_port_db_2d_handle_t
 */
typedef struct {
    dnx_algo_port_db_logical_pp_handle_set_cb set;
    dnx_algo_port_db_logical_pp_handle_get_cb get;
    /**
     * Access struct for h0
     */
    dnx_algo_port_db_logical_pp_handle_h0_cbs h0;
    /**
     * Access struct for h1
     */
    dnx_algo_port_db_logical_pp_handle_h1_cbs h1;
} dnx_algo_port_db_logical_pp_handle_cbs;

/**
 * This structure holds the access functions for the variable ilkn_handle
 */
typedef struct {
    dnx_algo_port_db_logical_ilkn_handle_set_cb set;
    dnx_algo_port_db_logical_ilkn_handle_get_cb get;
} dnx_algo_port_db_logical_ilkn_handle_cbs;

/**
 * This structure holds the access functions for the variable flexe_client_handle
 */
typedef struct {
    dnx_algo_port_db_logical_flexe_client_handle_set_cb set;
    dnx_algo_port_db_logical_flexe_client_handle_get_cb get;
} dnx_algo_port_db_logical_flexe_client_handle_cbs;

/**
 * This structure holds the access functions for the variable flexe_mac_handle
 */
typedef struct {
    dnx_algo_port_db_logical_flexe_mac_handle_set_cb set;
    dnx_algo_port_db_logical_flexe_mac_handle_get_cb get;
} dnx_algo_port_db_logical_flexe_mac_handle_cbs;

/**
 * This structure holds the access functions for the variable flexe_sar_handle
 */
typedef struct {
    dnx_algo_port_db_logical_flexe_sar_handle_set_cb set;
    dnx_algo_port_db_logical_flexe_sar_handle_get_cb get;
} dnx_algo_port_db_logical_flexe_sar_handle_cbs;

/**
 * This structure holds the access functions for the variable flexe_phy_handle
 */
typedef struct {
    dnx_algo_port_db_logical_flexe_phy_handle_set_cb set;
    dnx_algo_port_db_logical_flexe_phy_handle_get_cb get;
} dnx_algo_port_db_logical_flexe_phy_handle_cbs;

/**
 * This structure holds the access functions for the variable h0
 */
typedef struct {
    dnx_algo_port_db_logical_tm_interface_handle_h0_set_cb set;
    dnx_algo_port_db_logical_tm_interface_handle_h0_get_cb get;
} dnx_algo_port_db_logical_tm_interface_handle_h0_cbs;

/**
 * This structure holds the access functions for the variable h1
 */
typedef struct {
    dnx_algo_port_db_logical_tm_interface_handle_h1_set_cb set;
    dnx_algo_port_db_logical_tm_interface_handle_h1_get_cb get;
} dnx_algo_port_db_logical_tm_interface_handle_h1_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_port_db_2d_handle_t
 */
typedef struct {
    dnx_algo_port_db_logical_tm_interface_handle_set_cb set;
    dnx_algo_port_db_logical_tm_interface_handle_get_cb get;
    /**
     * Access struct for h0
     */
    dnx_algo_port_db_logical_tm_interface_handle_h0_cbs h0;
    /**
     * Access struct for h1
     */
    dnx_algo_port_db_logical_tm_interface_handle_h1_cbs h1;
} dnx_algo_port_db_logical_tm_interface_handle_cbs;

/**
 * This structure holds the access functions for the variable h0
 */
typedef struct {
    dnx_algo_port_db_logical_interface_handle_h0_set_cb set;
    dnx_algo_port_db_logical_interface_handle_h0_get_cb get;
} dnx_algo_port_db_logical_interface_handle_h0_cbs;

/**
 * This structure holds the access functions for the variable h1
 */
typedef struct {
    dnx_algo_port_db_logical_interface_handle_h1_set_cb set;
    dnx_algo_port_db_logical_interface_handle_h1_get_cb get;
} dnx_algo_port_db_logical_interface_handle_h1_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_port_db_2d_handle_t
 */
typedef struct {
    dnx_algo_port_db_logical_interface_handle_set_cb set;
    dnx_algo_port_db_logical_interface_handle_get_cb get;
    /**
     * Access struct for h0
     */
    dnx_algo_port_db_logical_interface_handle_h0_cbs h0;
    /**
     * Access struct for h1
     */
    dnx_algo_port_db_logical_interface_handle_h1_cbs h1;
} dnx_algo_port_db_logical_interface_handle_cbs;

/**
 * This structure holds the access functions for the variable fabric_handle
 */
typedef struct {
    dnx_algo_port_db_logical_fabric_handle_set_cb set;
    dnx_algo_port_db_logical_fabric_handle_get_cb get;
} dnx_algo_port_db_logical_fabric_handle_cbs;

/**
 * This structure holds the access functions for the variable channel
 */
typedef struct {
    dnx_algo_port_db_logical_channel_set_cb set;
    dnx_algo_port_db_logical_channel_get_cb get;
} dnx_algo_port_db_logical_channel_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_port_db_logical_t
 */
typedef struct {
    dnx_algo_port_db_logical_set_cb set;
    dnx_algo_port_db_logical_get_cb get;
    /**
     * Access struct for state
     */
    dnx_algo_port_db_logical_state_cbs state;
    /**
     * Access struct for info
     */
    dnx_algo_port_db_logical_info_cbs info;
    /**
     * Access struct for interface_type
     */
    dnx_algo_port_db_logical_interface_type_cbs interface_type;
    /**
     * Access struct for interface_offset
     */
    dnx_algo_port_db_logical_interface_offset_cbs interface_offset;
    /**
     * Access struct for nif_handle
     */
    dnx_algo_port_db_logical_nif_handle_cbs nif_handle;
    /**
     * Access struct for tm_handle
     */
    dnx_algo_port_db_logical_tm_handle_cbs tm_handle;
    /**
     * Access struct for sch_handle
     */
    dnx_algo_port_db_logical_sch_handle_cbs sch_handle;
    /**
     * Access struct for sch_if_handle
     */
    dnx_algo_port_db_logical_sch_if_handle_cbs sch_if_handle;
    /**
     * Access struct for pp_handle
     */
    dnx_algo_port_db_logical_pp_handle_cbs pp_handle;
    /**
     * Access struct for ilkn_handle
     */
    dnx_algo_port_db_logical_ilkn_handle_cbs ilkn_handle;
    /**
     * Access struct for flexe_client_handle
     */
    dnx_algo_port_db_logical_flexe_client_handle_cbs flexe_client_handle;
    /**
     * Access struct for flexe_mac_handle
     */
    dnx_algo_port_db_logical_flexe_mac_handle_cbs flexe_mac_handle;
    /**
     * Access struct for flexe_sar_handle
     */
    dnx_algo_port_db_logical_flexe_sar_handle_cbs flexe_sar_handle;
    /**
     * Access struct for flexe_phy_handle
     */
    dnx_algo_port_db_logical_flexe_phy_handle_cbs flexe_phy_handle;
    /**
     * Access struct for tm_interface_handle
     */
    dnx_algo_port_db_logical_tm_interface_handle_cbs tm_interface_handle;
    /**
     * Access struct for interface_handle
     */
    dnx_algo_port_db_logical_interface_handle_cbs interface_handle;
    /**
     * Access struct for fabric_handle
     */
    dnx_algo_port_db_logical_fabric_handle_cbs fabric_handle;
    /**
     * Access struct for channel
     */
    dnx_algo_port_db_logical_channel_cbs channel;
} dnx_algo_port_db_logical_cbs;

/**
 * This structure holds the access functions for the variable valid
 */
typedef struct {
    dnx_algo_port_db_nif_valid_set_cb set;
    dnx_algo_port_db_nif_valid_get_cb get;
} dnx_algo_port_db_nif_valid_cbs;

/**
 * This structure holds the access functions for the variable phys
 */
typedef struct {
    dnx_algo_port_db_nif_phys_set_cb set;
    dnx_algo_port_db_nif_phys_get_cb get;
    dnx_algo_port_db_nif_phys_pbmp_neq_cb pbmp_neq;
    dnx_algo_port_db_nif_phys_pbmp_eq_cb pbmp_eq;
    dnx_algo_port_db_nif_phys_pbmp_member_cb pbmp_member;
    dnx_algo_port_db_nif_phys_pbmp_not_null_cb pbmp_not_null;
    dnx_algo_port_db_nif_phys_pbmp_is_null_cb pbmp_is_null;
    dnx_algo_port_db_nif_phys_pbmp_count_cb pbmp_count;
    dnx_algo_port_db_nif_phys_pbmp_xor_cb pbmp_xor;
    dnx_algo_port_db_nif_phys_pbmp_remove_cb pbmp_remove;
    dnx_algo_port_db_nif_phys_pbmp_assign_cb pbmp_assign;
    dnx_algo_port_db_nif_phys_pbmp_get_cb pbmp_get;
    dnx_algo_port_db_nif_phys_pbmp_and_cb pbmp_and;
    dnx_algo_port_db_nif_phys_pbmp_negate_cb pbmp_negate;
    dnx_algo_port_db_nif_phys_pbmp_or_cb pbmp_or;
    dnx_algo_port_db_nif_phys_pbmp_clear_cb pbmp_clear;
    dnx_algo_port_db_nif_phys_pbmp_port_add_cb pbmp_port_add;
    dnx_algo_port_db_nif_phys_pbmp_port_flip_cb pbmp_port_flip;
    dnx_algo_port_db_nif_phys_pbmp_port_remove_cb pbmp_port_remove;
    dnx_algo_port_db_nif_phys_pbmp_port_set_cb pbmp_port_set;
    dnx_algo_port_db_nif_phys_pbmp_ports_range_add_cb pbmp_ports_range_add;
    dnx_algo_port_db_nif_phys_pbmp_fmt_cb pbmp_fmt;
} dnx_algo_port_db_nif_phys_cbs;

/**
 * This structure holds the access functions for the variable first_phy
 */
typedef struct {
    dnx_algo_port_db_nif_first_phy_set_cb set;
    dnx_algo_port_db_nif_first_phy_get_cb get;
} dnx_algo_port_db_nif_first_phy_cbs;

/**
 * This structure holds the access functions for the variable master_logical_port
 */
typedef struct {
    dnx_algo_port_db_nif_master_logical_port_set_cb set;
    dnx_algo_port_db_nif_master_logical_port_get_cb get;
} dnx_algo_port_db_nif_master_logical_port_cbs;

/**
 * This structure holds the access functions for the variable logical_fifos
 */
typedef struct {
    dnx_algo_port_db_nif_logical_fifos_set_cb set;
    dnx_algo_port_db_nif_logical_fifos_get_cb get;
} dnx_algo_port_db_nif_logical_fifos_cbs;

/**
 * This structure holds the access functions for the variable latch_down
 */
typedef struct {
    dnx_algo_port_db_nif_latch_down_set_cb set;
    dnx_algo_port_db_nif_latch_down_get_cb get;
} dnx_algo_port_db_nif_latch_down_cbs;

/**
 * This structure holds the access functions for the variable loopback_original_link_training
 */
typedef struct {
    dnx_algo_port_db_nif_loopback_original_link_training_set_cb set;
    dnx_algo_port_db_nif_loopback_original_link_training_get_cb get;
} dnx_algo_port_db_nif_loopback_original_link_training_cbs;

/**
 * This structure holds the access functions for the variable loopback_original_phy_lane_config
 */
typedef struct {
    dnx_algo_port_db_nif_loopback_original_phy_lane_config_set_cb set;
    dnx_algo_port_db_nif_loopback_original_phy_lane_config_get_cb get;
} dnx_algo_port_db_nif_loopback_original_phy_lane_config_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_port_db_nif_t
 */
typedef struct {
    dnx_algo_port_db_nif_set_cb set;
    dnx_algo_port_db_nif_get_cb get;
    dnx_algo_port_db_nif_alloc_cb alloc;
    /**
     * Access struct for valid
     */
    dnx_algo_port_db_nif_valid_cbs valid;
    /**
     * Access struct for phys
     */
    dnx_algo_port_db_nif_phys_cbs phys;
    /**
     * Access struct for first_phy
     */
    dnx_algo_port_db_nif_first_phy_cbs first_phy;
    /**
     * Access struct for master_logical_port
     */
    dnx_algo_port_db_nif_master_logical_port_cbs master_logical_port;
    /**
     * Access struct for logical_fifos
     */
    dnx_algo_port_db_nif_logical_fifos_cbs logical_fifos;
    /**
     * Access struct for latch_down
     */
    dnx_algo_port_db_nif_latch_down_cbs latch_down;
    /**
     * Access struct for loopback_original_link_training
     */
    dnx_algo_port_db_nif_loopback_original_link_training_cbs loopback_original_link_training;
    /**
     * Access struct for loopback_original_phy_lane_config
     */
    dnx_algo_port_db_nif_loopback_original_phy_lane_config_cbs loopback_original_phy_lane_config;
} dnx_algo_port_db_nif_cbs;

/**
 * This structure holds the access functions for the variable ref_count
 */
typedef struct {
    dnx_algo_port_db_tm_ref_count_set_cb set;
    dnx_algo_port_db_tm_ref_count_get_cb get;
    dnx_algo_port_db_tm_ref_count_inc_cb inc;
    dnx_algo_port_db_tm_ref_count_dec_cb dec;
} dnx_algo_port_db_tm_ref_count_cbs;

/**
 * This structure holds the access functions for the variable tm_port
 */
typedef struct {
    dnx_algo_port_db_tm_tm_port_set_cb set;
    dnx_algo_port_db_tm_tm_port_get_cb get;
} dnx_algo_port_db_tm_tm_port_cbs;

/**
 * This structure holds the access functions for the variable core
 */
typedef struct {
    dnx_algo_port_db_tm_core_set_cb set;
    dnx_algo_port_db_tm_core_get_cb get;
} dnx_algo_port_db_tm_core_cbs;

/**
 * This structure holds the access functions for the variable base_q_pair
 */
typedef struct {
    dnx_algo_port_db_tm_base_q_pair_set_cb set;
    dnx_algo_port_db_tm_base_q_pair_get_cb get;
} dnx_algo_port_db_tm_base_q_pair_cbs;

/**
 * This structure holds the access functions for the variable port_app_flags
 */
typedef struct {
    dnx_algo_port_db_tm_port_app_flags_set_cb set;
    dnx_algo_port_db_tm_port_app_flags_get_cb get;
} dnx_algo_port_db_tm_port_app_flags_cbs;

/**
 * This structure holds the access functions for the variable priorities
 */
typedef struct {
    dnx_algo_port_db_tm_priorities_set_cb set;
    dnx_algo_port_db_tm_priorities_get_cb get;
} dnx_algo_port_db_tm_priorities_cbs;

/**
 * This structure holds the access functions for the variable tdm_mode
 */
typedef struct {
    dnx_algo_port_db_tm_tdm_mode_set_cb set;
    dnx_algo_port_db_tm_tdm_mode_get_cb get;
} dnx_algo_port_db_tm_tdm_mode_cbs;

/**
 * This structure holds the access functions for the variable header_type_in
 */
typedef struct {
    dnx_algo_port_db_tm_header_type_in_set_cb set;
    dnx_algo_port_db_tm_header_type_in_get_cb get;
} dnx_algo_port_db_tm_header_type_in_cbs;

/**
 * This structure holds the access functions for the variable header_type_out
 */
typedef struct {
    dnx_algo_port_db_tm_header_type_out_set_cb set;
    dnx_algo_port_db_tm_header_type_out_get_cb get;
} dnx_algo_port_db_tm_header_type_out_cbs;

/**
 * This structure holds the access functions for the variable master_logical_port
 */
typedef struct {
    dnx_algo_port_db_tm_master_logical_port_set_cb set;
    dnx_algo_port_db_tm_master_logical_port_get_cb get;
} dnx_algo_port_db_tm_master_logical_port_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_port_db_tm_t
 */
typedef struct {
    dnx_algo_port_db_tm_set_cb set;
    dnx_algo_port_db_tm_get_cb get;
    dnx_algo_port_db_tm_alloc_cb alloc;
    /**
     * Access struct for ref_count
     */
    dnx_algo_port_db_tm_ref_count_cbs ref_count;
    /**
     * Access struct for tm_port
     */
    dnx_algo_port_db_tm_tm_port_cbs tm_port;
    /**
     * Access struct for core
     */
    dnx_algo_port_db_tm_core_cbs core;
    /**
     * Access struct for base_q_pair
     */
    dnx_algo_port_db_tm_base_q_pair_cbs base_q_pair;
    /**
     * Access struct for port_app_flags
     */
    dnx_algo_port_db_tm_port_app_flags_cbs port_app_flags;
    /**
     * Access struct for priorities
     */
    dnx_algo_port_db_tm_priorities_cbs priorities;
    /**
     * Access struct for tdm_mode
     */
    dnx_algo_port_db_tm_tdm_mode_cbs tdm_mode;
    /**
     * Access struct for header_type_in
     */
    dnx_algo_port_db_tm_header_type_in_cbs header_type_in;
    /**
     * Access struct for header_type_out
     */
    dnx_algo_port_db_tm_header_type_out_cbs header_type_out;
    /**
     * Access struct for master_logical_port
     */
    dnx_algo_port_db_tm_master_logical_port_cbs master_logical_port;
} dnx_algo_port_db_tm_cbs;

/**
 * This structure holds the access functions for the variable valid
 */
typedef struct {
    dnx_algo_port_db_sch_valid_set_cb set;
    dnx_algo_port_db_sch_valid_get_cb get;
} dnx_algo_port_db_sch_valid_cbs;

/**
 * This structure holds the access functions for the variable base_hr
 */
typedef struct {
    dnx_algo_port_db_sch_base_hr_set_cb set;
    dnx_algo_port_db_sch_base_hr_get_cb get;
} dnx_algo_port_db_sch_base_hr_cbs;

/**
 * This structure holds the access functions for the variable sch_priorities
 */
typedef struct {
    dnx_algo_port_db_sch_sch_priorities_set_cb set;
    dnx_algo_port_db_sch_sch_priorities_get_cb get;
} dnx_algo_port_db_sch_sch_priorities_cbs;

/**
 * This structure holds the access functions for the variable master_logical_port
 */
typedef struct {
    dnx_algo_port_db_sch_master_logical_port_set_cb set;
    dnx_algo_port_db_sch_master_logical_port_get_cb get;
} dnx_algo_port_db_sch_master_logical_port_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_port_db_sch_t
 */
typedef struct {
    dnx_algo_port_db_sch_set_cb set;
    dnx_algo_port_db_sch_get_cb get;
    dnx_algo_port_db_sch_alloc_cb alloc;
    /**
     * Access struct for valid
     */
    dnx_algo_port_db_sch_valid_cbs valid;
    /**
     * Access struct for base_hr
     */
    dnx_algo_port_db_sch_base_hr_cbs base_hr;
    /**
     * Access struct for sch_priorities
     */
    dnx_algo_port_db_sch_sch_priorities_cbs sch_priorities;
    /**
     * Access struct for master_logical_port
     */
    dnx_algo_port_db_sch_master_logical_port_cbs master_logical_port;
} dnx_algo_port_db_sch_cbs;

/**
 * This structure holds the access functions for the variable ref_count
 */
typedef struct {
    dnx_algo_port_db_pp_ref_count_set_cb set;
    dnx_algo_port_db_pp_ref_count_get_cb get;
    dnx_algo_port_db_pp_ref_count_inc_cb inc;
    dnx_algo_port_db_pp_ref_count_dec_cb dec;
} dnx_algo_port_db_pp_ref_count_cbs;

/**
 * This structure holds the access functions for the variable pp_port
 */
typedef struct {
    dnx_algo_port_db_pp_pp_port_set_cb set;
    dnx_algo_port_db_pp_pp_port_get_cb get;
} dnx_algo_port_db_pp_pp_port_cbs;

/**
 * This structure holds the access functions for the variable core
 */
typedef struct {
    dnx_algo_port_db_pp_core_set_cb set;
    dnx_algo_port_db_pp_core_get_cb get;
} dnx_algo_port_db_pp_core_cbs;

/**
 * This structure holds the access functions for the variable is_lag
 */
typedef struct {
    dnx_algo_port_db_pp_is_lag_set_cb set;
    dnx_algo_port_db_pp_is_lag_get_cb get;
} dnx_algo_port_db_pp_is_lag_cbs;

/**
 * This structure holds the access functions for the variable lag_id
 */
typedef struct {
    dnx_algo_port_db_pp_lag_id_set_cb set;
    dnx_algo_port_db_pp_lag_id_get_cb get;
} dnx_algo_port_db_pp_lag_id_cbs;

/**
 * This structure holds the access functions for the variable master_logical_port
 */
typedef struct {
    dnx_algo_port_db_pp_master_logical_port_set_cb set;
    dnx_algo_port_db_pp_master_logical_port_get_cb get;
} dnx_algo_port_db_pp_master_logical_port_cbs;

/**
 * This structure holds the access functions for the variable header_mode
 */
typedef struct {
    dnx_algo_port_db_pp_header_mode_set_cb set;
    dnx_algo_port_db_pp_header_mode_get_cb get;
} dnx_algo_port_db_pp_header_mode_cbs;

/**
 * This structure holds the access functions for the variable ingress_llvp_profile_valid
 */
typedef struct {
    dnx_algo_port_db_pp_ingress_llvp_profile_valid_set_cb set;
    dnx_algo_port_db_pp_ingress_llvp_profile_valid_get_cb get;
} dnx_algo_port_db_pp_ingress_llvp_profile_valid_cbs;

/**
 * This structure holds the access functions for the variable egress_llvp_profile_valid
 */
typedef struct {
    dnx_algo_port_db_pp_egress_llvp_profile_valid_set_cb set;
    dnx_algo_port_db_pp_egress_llvp_profile_valid_get_cb get;
} dnx_algo_port_db_pp_egress_llvp_profile_valid_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_port_db_pp_t
 */
typedef struct {
    dnx_algo_port_db_pp_set_cb set;
    dnx_algo_port_db_pp_get_cb get;
    dnx_algo_port_db_pp_alloc_cb alloc;
    /**
     * Access struct for ref_count
     */
    dnx_algo_port_db_pp_ref_count_cbs ref_count;
    /**
     * Access struct for pp_port
     */
    dnx_algo_port_db_pp_pp_port_cbs pp_port;
    /**
     * Access struct for core
     */
    dnx_algo_port_db_pp_core_cbs core;
    /**
     * Access struct for is_lag
     */
    dnx_algo_port_db_pp_is_lag_cbs is_lag;
    /**
     * Access struct for lag_id
     */
    dnx_algo_port_db_pp_lag_id_cbs lag_id;
    /**
     * Access struct for master_logical_port
     */
    dnx_algo_port_db_pp_master_logical_port_cbs master_logical_port;
    /**
     * Access struct for header_mode
     */
    dnx_algo_port_db_pp_header_mode_cbs header_mode;
    /**
     * Access struct for ingress_llvp_profile_valid
     */
    dnx_algo_port_db_pp_ingress_llvp_profile_valid_cbs ingress_llvp_profile_valid;
    /**
     * Access struct for egress_llvp_profile_valid
     */
    dnx_algo_port_db_pp_egress_llvp_profile_valid_cbs egress_llvp_profile_valid;
} dnx_algo_port_db_pp_cbs;

/**
 * This structure holds the access functions for the variable pp_alloc
 */
typedef struct {
    dnx_algo_port_db_pp_alloc_set_cb set;
    dnx_algo_port_db_pp_alloc_get_cb get;
    dnx_algo_port_db_pp_alloc_alloc_cb alloc;
    dnx_algo_port_db_pp_alloc_create_cb create;
    dnx_algo_port_db_pp_alloc_allocate_single_cb allocate_single;
    dnx_algo_port_db_pp_alloc_free_single_cb free_single;
    dnx_algo_port_db_pp_alloc_is_allocated_cb is_allocated;
} dnx_algo_port_db_pp_alloc_cbs;

/**
 * This structure holds the access functions for the variable valid
 */
typedef struct {
    dnx_algo_port_db_ilkn_valid_set_cb set;
    dnx_algo_port_db_ilkn_valid_get_cb get;
} dnx_algo_port_db_ilkn_valid_cbs;

/**
 * This structure holds the access functions for the variable master_logical_port
 */
typedef struct {
    dnx_algo_port_db_ilkn_master_logical_port_set_cb set;
    dnx_algo_port_db_ilkn_master_logical_port_get_cb get;
} dnx_algo_port_db_ilkn_master_logical_port_cbs;

/**
 * This structure holds the access functions for the variable nof_segments
 */
typedef struct {
    dnx_algo_port_db_ilkn_nof_segments_set_cb set;
    dnx_algo_port_db_ilkn_nof_segments_get_cb get;
} dnx_algo_port_db_ilkn_nof_segments_cbs;

/**
 * This structure holds the access functions for the variable is_over_fabric
 */
typedef struct {
    dnx_algo_port_db_ilkn_is_over_fabric_set_cb set;
    dnx_algo_port_db_ilkn_is_over_fabric_get_cb get;
} dnx_algo_port_db_ilkn_is_over_fabric_cbs;

/**
 * This structure holds the access functions for the variable is_elk
 */
typedef struct {
    dnx_algo_port_db_ilkn_is_elk_set_cb set;
    dnx_algo_port_db_ilkn_is_elk_get_cb get;
} dnx_algo_port_db_ilkn_is_elk_cbs;

/**
 * This structure holds the access functions for the variable lanes
 */
typedef struct {
    dnx_algo_port_db_ilkn_lanes_set_cb set;
    dnx_algo_port_db_ilkn_lanes_get_cb get;
    dnx_algo_port_db_ilkn_lanes_pbmp_neq_cb pbmp_neq;
    dnx_algo_port_db_ilkn_lanes_pbmp_eq_cb pbmp_eq;
    dnx_algo_port_db_ilkn_lanes_pbmp_member_cb pbmp_member;
    dnx_algo_port_db_ilkn_lanes_pbmp_not_null_cb pbmp_not_null;
    dnx_algo_port_db_ilkn_lanes_pbmp_is_null_cb pbmp_is_null;
    dnx_algo_port_db_ilkn_lanes_pbmp_count_cb pbmp_count;
    dnx_algo_port_db_ilkn_lanes_pbmp_xor_cb pbmp_xor;
    dnx_algo_port_db_ilkn_lanes_pbmp_remove_cb pbmp_remove;
    dnx_algo_port_db_ilkn_lanes_pbmp_assign_cb pbmp_assign;
    dnx_algo_port_db_ilkn_lanes_pbmp_get_cb pbmp_get;
    dnx_algo_port_db_ilkn_lanes_pbmp_and_cb pbmp_and;
    dnx_algo_port_db_ilkn_lanes_pbmp_negate_cb pbmp_negate;
    dnx_algo_port_db_ilkn_lanes_pbmp_or_cb pbmp_or;
    dnx_algo_port_db_ilkn_lanes_pbmp_clear_cb pbmp_clear;
    dnx_algo_port_db_ilkn_lanes_pbmp_port_add_cb pbmp_port_add;
    dnx_algo_port_db_ilkn_lanes_pbmp_port_flip_cb pbmp_port_flip;
    dnx_algo_port_db_ilkn_lanes_pbmp_port_remove_cb pbmp_port_remove;
    dnx_algo_port_db_ilkn_lanes_pbmp_port_set_cb pbmp_port_set;
    dnx_algo_port_db_ilkn_lanes_pbmp_ports_range_add_cb pbmp_ports_range_add;
    dnx_algo_port_db_ilkn_lanes_pbmp_fmt_cb pbmp_fmt;
} dnx_algo_port_db_ilkn_lanes_cbs;

/**
 * This structure holds the access functions for the variable priority
 */
typedef struct {
    dnx_algo_port_db_ilkn_priority_set_cb set;
    dnx_algo_port_db_ilkn_priority_get_cb get;
} dnx_algo_port_db_ilkn_priority_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_port_db_ilkn_t
 */
typedef struct {
    dnx_algo_port_db_ilkn_set_cb set;
    dnx_algo_port_db_ilkn_get_cb get;
    dnx_algo_port_db_ilkn_alloc_cb alloc;
    /**
     * Access struct for valid
     */
    dnx_algo_port_db_ilkn_valid_cbs valid;
    /**
     * Access struct for master_logical_port
     */
    dnx_algo_port_db_ilkn_master_logical_port_cbs master_logical_port;
    /**
     * Access struct for nof_segments
     */
    dnx_algo_port_db_ilkn_nof_segments_cbs nof_segments;
    /**
     * Access struct for is_over_fabric
     */
    dnx_algo_port_db_ilkn_is_over_fabric_cbs is_over_fabric;
    /**
     * Access struct for is_elk
     */
    dnx_algo_port_db_ilkn_is_elk_cbs is_elk;
    /**
     * Access struct for lanes
     */
    dnx_algo_port_db_ilkn_lanes_cbs lanes;
    /**
     * Access struct for priority
     */
    dnx_algo_port_db_ilkn_priority_cbs priority;
} dnx_algo_port_db_ilkn_cbs;

/**
 * This structure holds the access functions for the variable valid
 */
typedef struct {
    dnx_algo_port_db_flexe_client_valid_set_cb set;
    dnx_algo_port_db_flexe_client_valid_get_cb get;
} dnx_algo_port_db_flexe_client_valid_cbs;

/**
 * This structure holds the access functions for the variable client_index
 */
typedef struct {
    dnx_algo_port_db_flexe_client_client_index_set_cb set;
    dnx_algo_port_db_flexe_client_client_index_get_cb get;
} dnx_algo_port_db_flexe_client_client_index_cbs;

/**
 * This structure holds the access functions for the variable client_id
 */
typedef struct {
    dnx_algo_port_db_flexe_client_client_id_set_cb set;
    dnx_algo_port_db_flexe_client_client_id_get_cb get;
} dnx_algo_port_db_flexe_client_client_id_cbs;

/**
 * This structure holds the access functions for the variable master_logical_port
 */
typedef struct {
    dnx_algo_port_db_flexe_client_master_logical_port_set_cb set;
    dnx_algo_port_db_flexe_client_master_logical_port_get_cb get;
} dnx_algo_port_db_flexe_client_master_logical_port_cbs;

/**
 * This structure holds the access functions for the variable is_bypass
 */
typedef struct {
    dnx_algo_port_db_flexe_client_is_bypass_set_cb set;
    dnx_algo_port_db_flexe_client_is_bypass_get_cb get;
} dnx_algo_port_db_flexe_client_is_bypass_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_port_db_flexe_client_t
 */
typedef struct {
    dnx_algo_port_db_flexe_client_set_cb set;
    dnx_algo_port_db_flexe_client_get_cb get;
    dnx_algo_port_db_flexe_client_alloc_cb alloc;
    /**
     * Access struct for valid
     */
    dnx_algo_port_db_flexe_client_valid_cbs valid;
    /**
     * Access struct for client_index
     */
    dnx_algo_port_db_flexe_client_client_index_cbs client_index;
    /**
     * Access struct for client_id
     */
    dnx_algo_port_db_flexe_client_client_id_cbs client_id;
    /**
     * Access struct for master_logical_port
     */
    dnx_algo_port_db_flexe_client_master_logical_port_cbs master_logical_port;
    /**
     * Access struct for is_bypass
     */
    dnx_algo_port_db_flexe_client_is_bypass_cbs is_bypass;
} dnx_algo_port_db_flexe_client_cbs;

/**
 * This structure holds the access functions for the variable valid
 */
typedef struct {
    dnx_algo_port_db_flexe_mac_valid_set_cb set;
    dnx_algo_port_db_flexe_mac_valid_get_cb get;
} dnx_algo_port_db_flexe_mac_valid_cbs;

/**
 * This structure holds the access functions for the variable master_logical_port
 */
typedef struct {
    dnx_algo_port_db_flexe_mac_master_logical_port_set_cb set;
    dnx_algo_port_db_flexe_mac_master_logical_port_get_cb get;
} dnx_algo_port_db_flexe_mac_master_logical_port_cbs;

/**
 * This structure holds the access functions for the variable client_index
 */
typedef struct {
    dnx_algo_port_db_flexe_mac_client_index_set_cb set;
    dnx_algo_port_db_flexe_mac_client_index_get_cb get;
} dnx_algo_port_db_flexe_mac_client_index_cbs;

/**
 * This structure holds the access functions for the variable logical_fifos
 */
typedef struct {
    dnx_algo_port_db_flexe_mac_logical_fifos_set_cb set;
    dnx_algo_port_db_flexe_mac_logical_fifos_get_cb get;
} dnx_algo_port_db_flexe_mac_logical_fifos_cbs;

/**
 * This structure holds the access functions for the variable timeslot_bitmap
 */
typedef struct {
    dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_set_cb bit_set;
    dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_clear_cb bit_clear;
    dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_get_cb bit_get;
    dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_read_cb bit_range_read;
    dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_write_cb bit_range_write;
    dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_and_cb bit_range_and;
    dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_or_cb bit_range_or;
    dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_xor_cb bit_range_xor;
    dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_remove_cb bit_range_remove;
    dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_negate_cb bit_range_negate;
    dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_clear_cb bit_range_clear;
    dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_set_cb bit_range_set;
    dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_null_cb bit_range_null;
    dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_test_cb bit_range_test;
    dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_eq_cb bit_range_eq;
    dnx_algo_port_db_flexe_mac_timeslot_bitmap_bit_range_count_cb bit_range_count;
} dnx_algo_port_db_flexe_mac_timeslot_bitmap_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_port_db_flexe_mac_t
 */
typedef struct {
    dnx_algo_port_db_flexe_mac_set_cb set;
    dnx_algo_port_db_flexe_mac_get_cb get;
    dnx_algo_port_db_flexe_mac_alloc_cb alloc;
    /**
     * Access struct for valid
     */
    dnx_algo_port_db_flexe_mac_valid_cbs valid;
    /**
     * Access struct for master_logical_port
     */
    dnx_algo_port_db_flexe_mac_master_logical_port_cbs master_logical_port;
    /**
     * Access struct for client_index
     */
    dnx_algo_port_db_flexe_mac_client_index_cbs client_index;
    /**
     * Access struct for logical_fifos
     */
    dnx_algo_port_db_flexe_mac_logical_fifos_cbs logical_fifos;
    /**
     * Access struct for timeslot_bitmap
     */
    dnx_algo_port_db_flexe_mac_timeslot_bitmap_cbs timeslot_bitmap;
} dnx_algo_port_db_flexe_mac_cbs;

/**
 * This structure holds the access functions for the variable valid
 */
typedef struct {
    dnx_algo_port_db_flexe_sar_valid_set_cb set;
    dnx_algo_port_db_flexe_sar_valid_get_cb get;
} dnx_algo_port_db_flexe_sar_valid_cbs;

/**
 * This structure holds the access functions for the variable master_logical_port
 */
typedef struct {
    dnx_algo_port_db_flexe_sar_master_logical_port_set_cb set;
    dnx_algo_port_db_flexe_sar_master_logical_port_get_cb get;
} dnx_algo_port_db_flexe_sar_master_logical_port_cbs;

/**
 * This structure holds the access functions for the variable client_index
 */
typedef struct {
    dnx_algo_port_db_flexe_sar_client_index_set_cb set;
    dnx_algo_port_db_flexe_sar_client_index_get_cb get;
} dnx_algo_port_db_flexe_sar_client_index_cbs;

/**
 * This structure holds the access functions for the variable timeslot_bitmap
 */
typedef struct {
    dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_set_cb bit_set;
    dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_clear_cb bit_clear;
    dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_get_cb bit_get;
    dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_read_cb bit_range_read;
    dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_write_cb bit_range_write;
    dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_and_cb bit_range_and;
    dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_or_cb bit_range_or;
    dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_xor_cb bit_range_xor;
    dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_remove_cb bit_range_remove;
    dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_negate_cb bit_range_negate;
    dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_clear_cb bit_range_clear;
    dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_set_cb bit_range_set;
    dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_null_cb bit_range_null;
    dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_test_cb bit_range_test;
    dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_eq_cb bit_range_eq;
    dnx_algo_port_db_flexe_sar_timeslot_bitmap_bit_range_count_cb bit_range_count;
} dnx_algo_port_db_flexe_sar_timeslot_bitmap_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_port_db_flexe_sar_t
 */
typedef struct {
    dnx_algo_port_db_flexe_sar_set_cb set;
    dnx_algo_port_db_flexe_sar_get_cb get;
    dnx_algo_port_db_flexe_sar_alloc_cb alloc;
    /**
     * Access struct for valid
     */
    dnx_algo_port_db_flexe_sar_valid_cbs valid;
    /**
     * Access struct for master_logical_port
     */
    dnx_algo_port_db_flexe_sar_master_logical_port_cbs master_logical_port;
    /**
     * Access struct for client_index
     */
    dnx_algo_port_db_flexe_sar_client_index_cbs client_index;
    /**
     * Access struct for timeslot_bitmap
     */
    dnx_algo_port_db_flexe_sar_timeslot_bitmap_cbs timeslot_bitmap;
} dnx_algo_port_db_flexe_sar_cbs;

/**
 * This structure holds the access functions for the variable valid
 */
typedef struct {
    dnx_algo_port_db_flexe_phy_valid_set_cb set;
    dnx_algo_port_db_flexe_phy_valid_get_cb get;
} dnx_algo_port_db_flexe_phy_valid_cbs;

/**
 * This structure holds the access functions for the variable master_logical_port
 */
typedef struct {
    dnx_algo_port_db_flexe_phy_master_logical_port_set_cb set;
    dnx_algo_port_db_flexe_phy_master_logical_port_get_cb get;
} dnx_algo_port_db_flexe_phy_master_logical_port_cbs;

/**
 * This structure holds the access functions for the variable logical_phy_id
 */
typedef struct {
    dnx_algo_port_db_flexe_phy_logical_phy_id_set_cb set;
    dnx_algo_port_db_flexe_phy_logical_phy_id_get_cb get;
} dnx_algo_port_db_flexe_phy_logical_phy_id_cbs;

/**
 * This structure holds the access functions for the variable core_port
 */
typedef struct {
    dnx_algo_port_db_flexe_phy_core_port_set_cb set;
    dnx_algo_port_db_flexe_phy_core_port_get_cb get;
} dnx_algo_port_db_flexe_phy_core_port_cbs;

/**
 * This structure holds the access functions for the variable instance_base
 */
typedef struct {
    dnx_algo_port_db_flexe_phy_instance_base_set_cb set;
    dnx_algo_port_db_flexe_phy_instance_base_get_cb get;
} dnx_algo_port_db_flexe_phy_instance_base_cbs;

/**
 * This structure holds the access functions for the variable lphy_bitmap
 */
typedef struct {
    dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_set_cb bit_set;
    dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_clear_cb bit_clear;
    dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_get_cb bit_get;
    dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_read_cb bit_range_read;
    dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_write_cb bit_range_write;
    dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_and_cb bit_range_and;
    dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_or_cb bit_range_or;
    dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_xor_cb bit_range_xor;
    dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_remove_cb bit_range_remove;
    dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_negate_cb bit_range_negate;
    dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_clear_cb bit_range_clear;
    dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_set_cb bit_range_set;
    dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_null_cb bit_range_null;
    dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_test_cb bit_range_test;
    dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_eq_cb bit_range_eq;
    dnx_algo_port_db_flexe_phy_lphy_bitmap_bit_range_count_cb bit_range_count;
} dnx_algo_port_db_flexe_phy_lphy_bitmap_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_port_db_flexe_phy_t
 */
typedef struct {
    dnx_algo_port_db_flexe_phy_set_cb set;
    dnx_algo_port_db_flexe_phy_get_cb get;
    dnx_algo_port_db_flexe_phy_alloc_cb alloc;
    /**
     * Access struct for valid
     */
    dnx_algo_port_db_flexe_phy_valid_cbs valid;
    /**
     * Access struct for master_logical_port
     */
    dnx_algo_port_db_flexe_phy_master_logical_port_cbs master_logical_port;
    /**
     * Access struct for logical_phy_id
     */
    dnx_algo_port_db_flexe_phy_logical_phy_id_cbs logical_phy_id;
    /**
     * Access struct for core_port
     */
    dnx_algo_port_db_flexe_phy_core_port_cbs core_port;
    /**
     * Access struct for instance_base
     */
    dnx_algo_port_db_flexe_phy_instance_base_cbs instance_base;
    /**
     * Access struct for lphy_bitmap
     */
    dnx_algo_port_db_flexe_phy_lphy_bitmap_cbs lphy_bitmap;
} dnx_algo_port_db_flexe_phy_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_port_db_flexe_t
 */
typedef struct {
    /**
     * Access struct for client
     */
    dnx_algo_port_db_flexe_client_cbs client;
    /**
     * Access struct for mac
     */
    dnx_algo_port_db_flexe_mac_cbs mac;
    /**
     * Access struct for sar
     */
    dnx_algo_port_db_flexe_sar_cbs sar;
    /**
     * Access struct for phy
     */
    dnx_algo_port_db_flexe_phy_cbs phy;
} dnx_algo_port_db_flexe_cbs;

/**
 * This structure holds the access functions for the variable valid
 */
typedef struct {
    dnx_algo_port_db_fabric_valid_set_cb set;
    dnx_algo_port_db_fabric_valid_get_cb get;
} dnx_algo_port_db_fabric_valid_cbs;

/**
 * This structure holds the access functions for the variable link
 */
typedef struct {
    dnx_algo_port_db_fabric_link_set_cb set;
    dnx_algo_port_db_fabric_link_get_cb get;
} dnx_algo_port_db_fabric_link_cbs;

/**
 * This structure holds the access functions for the variable master_logical_port
 */
typedef struct {
    dnx_algo_port_db_fabric_master_logical_port_set_cb set;
    dnx_algo_port_db_fabric_master_logical_port_get_cb get;
} dnx_algo_port_db_fabric_master_logical_port_cbs;

/**
 * This structure holds the access functions for the variable prbs_mode
 */
typedef struct {
    dnx_algo_port_db_fabric_prbs_mode_set_cb set;
    dnx_algo_port_db_fabric_prbs_mode_get_cb get;
} dnx_algo_port_db_fabric_prbs_mode_cbs;

/**
 * This structure holds the access functions for the variable speed
 */
typedef struct {
    dnx_algo_port_db_fabric_speed_set_cb set;
    dnx_algo_port_db_fabric_speed_get_cb get;
} dnx_algo_port_db_fabric_speed_cbs;

/**
 * This structure holds the access functions for the variable loopback_original_link_training
 */
typedef struct {
    dnx_algo_port_db_fabric_loopback_original_link_training_set_cb set;
    dnx_algo_port_db_fabric_loopback_original_link_training_get_cb get;
} dnx_algo_port_db_fabric_loopback_original_link_training_cbs;

/**
 * This structure holds the access functions for the variable loopback_original_phy_lane_config
 */
typedef struct {
    dnx_algo_port_db_fabric_loopback_original_phy_lane_config_set_cb set;
    dnx_algo_port_db_fabric_loopback_original_phy_lane_config_get_cb get;
} dnx_algo_port_db_fabric_loopback_original_phy_lane_config_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_port_db_fabric_t
 */
typedef struct {
    dnx_algo_port_db_fabric_set_cb set;
    dnx_algo_port_db_fabric_get_cb get;
    dnx_algo_port_db_fabric_alloc_cb alloc;
    /**
     * Access struct for valid
     */
    dnx_algo_port_db_fabric_valid_cbs valid;
    /**
     * Access struct for link
     */
    dnx_algo_port_db_fabric_link_cbs link;
    /**
     * Access struct for master_logical_port
     */
    dnx_algo_port_db_fabric_master_logical_port_cbs master_logical_port;
    /**
     * Access struct for prbs_mode
     */
    dnx_algo_port_db_fabric_prbs_mode_cbs prbs_mode;
    /**
     * Access struct for speed
     */
    dnx_algo_port_db_fabric_speed_cbs speed;
    /**
     * Access struct for loopback_original_link_training
     */
    dnx_algo_port_db_fabric_loopback_original_link_training_cbs loopback_original_link_training;
    /**
     * Access struct for loopback_original_phy_lane_config
     */
    dnx_algo_port_db_fabric_loopback_original_phy_lane_config_cbs loopback_original_phy_lane_config;
} dnx_algo_port_db_fabric_cbs;

/**
 * This structure holds the access functions for the variable valid
 */
typedef struct {
    dnx_algo_port_db_tm_interface_valid_set_cb set;
    dnx_algo_port_db_tm_interface_valid_get_cb get;
} dnx_algo_port_db_tm_interface_valid_cbs;

/**
 * This structure holds the access functions for the variable is_channelized
 */
typedef struct {
    dnx_algo_port_db_tm_interface_is_channelized_set_cb set;
    dnx_algo_port_db_tm_interface_is_channelized_get_cb get;
} dnx_algo_port_db_tm_interface_is_channelized_cbs;

/**
 * This structure holds the access functions for the variable is_ingress_interleave
 */
typedef struct {
    dnx_algo_port_db_tm_interface_is_ingress_interleave_set_cb set;
    dnx_algo_port_db_tm_interface_is_ingress_interleave_get_cb get;
} dnx_algo_port_db_tm_interface_is_ingress_interleave_cbs;

/**
 * This structure holds the access functions for the variable is_egress_interleave
 */
typedef struct {
    dnx_algo_port_db_tm_interface_is_egress_interleave_set_cb set;
    dnx_algo_port_db_tm_interface_is_egress_interleave_get_cb get;
} dnx_algo_port_db_tm_interface_is_egress_interleave_cbs;

/**
 * This structure holds the access functions for the variable egr_if
 */
typedef struct {
    dnx_algo_port_db_tm_interface_egr_if_set_cb set;
    dnx_algo_port_db_tm_interface_egr_if_get_cb get;
} dnx_algo_port_db_tm_interface_egr_if_cbs;

/**
 * This structure holds the access functions for the variable tdm_mode
 */
typedef struct {
    dnx_algo_port_db_tm_interface_tdm_mode_set_cb set;
    dnx_algo_port_db_tm_interface_tdm_mode_get_cb get;
} dnx_algo_port_db_tm_interface_tdm_mode_cbs;

/**
 * This structure holds the access functions for the variable master_tdm_logical_port
 */
typedef struct {
    dnx_algo_port_db_tm_interface_master_tdm_logical_port_set_cb set;
    dnx_algo_port_db_tm_interface_master_tdm_logical_port_get_cb get;
} dnx_algo_port_db_tm_interface_master_tdm_logical_port_cbs;

/**
 * This structure holds the access functions for the variable master_non_tdm_logical_port
 */
typedef struct {
    dnx_algo_port_db_tm_interface_master_non_tdm_logical_port_set_cb set;
    dnx_algo_port_db_tm_interface_master_non_tdm_logical_port_get_cb get;
} dnx_algo_port_db_tm_interface_master_non_tdm_logical_port_cbs;

/**
 * This structure holds the access functions for the variable master_logical_port
 */
typedef struct {
    dnx_algo_port_db_tm_interface_master_logical_port_set_cb set;
    dnx_algo_port_db_tm_interface_master_logical_port_get_cb get;
} dnx_algo_port_db_tm_interface_master_logical_port_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_port_db_tm_interface_t
 */
typedef struct {
    dnx_algo_port_db_tm_interface_set_cb set;
    dnx_algo_port_db_tm_interface_get_cb get;
    dnx_algo_port_db_tm_interface_alloc_cb alloc;
    /**
     * Access struct for valid
     */
    dnx_algo_port_db_tm_interface_valid_cbs valid;
    /**
     * Access struct for is_channelized
     */
    dnx_algo_port_db_tm_interface_is_channelized_cbs is_channelized;
    /**
     * Access struct for is_ingress_interleave
     */
    dnx_algo_port_db_tm_interface_is_ingress_interleave_cbs is_ingress_interleave;
    /**
     * Access struct for is_egress_interleave
     */
    dnx_algo_port_db_tm_interface_is_egress_interleave_cbs is_egress_interleave;
    /**
     * Access struct for egr_if
     */
    dnx_algo_port_db_tm_interface_egr_if_cbs egr_if;
    /**
     * Access struct for tdm_mode
     */
    dnx_algo_port_db_tm_interface_tdm_mode_cbs tdm_mode;
    /**
     * Access struct for master_tdm_logical_port
     */
    dnx_algo_port_db_tm_interface_master_tdm_logical_port_cbs master_tdm_logical_port;
    /**
     * Access struct for master_non_tdm_logical_port
     */
    dnx_algo_port_db_tm_interface_master_non_tdm_logical_port_cbs master_non_tdm_logical_port;
    /**
     * Access struct for master_logical_port
     */
    dnx_algo_port_db_tm_interface_master_logical_port_cbs master_logical_port;
} dnx_algo_port_db_tm_interface_cbs;

/**
 * This structure holds the access functions for the variable valid
 */
typedef struct {
    dnx_algo_port_db_interface_valid_set_cb set;
    dnx_algo_port_db_interface_valid_get_cb get;
} dnx_algo_port_db_interface_valid_cbs;

/**
 * This structure holds the access functions for the variable core
 */
typedef struct {
    dnx_algo_port_db_interface_core_set_cb set;
    dnx_algo_port_db_interface_core_get_cb get;
} dnx_algo_port_db_interface_core_cbs;

/**
 * This structure holds the access functions for the variable rx_speed
 */
typedef struct {
    dnx_algo_port_db_interface_rx_speed_set_cb set;
    dnx_algo_port_db_interface_rx_speed_get_cb get;
} dnx_algo_port_db_interface_rx_speed_cbs;

/**
 * This structure holds the access functions for the variable tx_speed
 */
typedef struct {
    dnx_algo_port_db_interface_tx_speed_set_cb set;
    dnx_algo_port_db_interface_tx_speed_get_cb get;
} dnx_algo_port_db_interface_tx_speed_cbs;

/**
 * This structure holds the access functions for the variable master_logical_port
 */
typedef struct {
    dnx_algo_port_db_interface_master_logical_port_set_cb set;
    dnx_algo_port_db_interface_master_logical_port_get_cb get;
} dnx_algo_port_db_interface_master_logical_port_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_port_db_interface_t
 */
typedef struct {
    dnx_algo_port_db_interface_set_cb set;
    dnx_algo_port_db_interface_get_cb get;
    dnx_algo_port_db_interface_alloc_cb alloc;
    /**
     * Access struct for valid
     */
    dnx_algo_port_db_interface_valid_cbs valid;
    /**
     * Access struct for core
     */
    dnx_algo_port_db_interface_core_cbs core;
    /**
     * Access struct for rx_speed
     */
    dnx_algo_port_db_interface_rx_speed_cbs rx_speed;
    /**
     * Access struct for tx_speed
     */
    dnx_algo_port_db_interface_tx_speed_cbs tx_speed;
    /**
     * Access struct for master_logical_port
     */
    dnx_algo_port_db_interface_master_logical_port_cbs master_logical_port;
} dnx_algo_port_db_interface_cbs;

/**
 * This structure holds the access functions for the variable valid
 */
typedef struct {
    dnx_algo_port_db_sch_interface_valid_set_cb set;
    dnx_algo_port_db_sch_interface_valid_get_cb get;
} dnx_algo_port_db_sch_interface_valid_cbs;

/**
 * This structure holds the access functions for the variable sch_if
 */
typedef struct {
    dnx_algo_port_db_sch_interface_sch_if_set_cb set;
    dnx_algo_port_db_sch_interface_sch_if_get_cb get;
} dnx_algo_port_db_sch_interface_sch_if_cbs;

/**
 * This structure holds the access functions for the variable priority_propagation_enable
 */
typedef struct {
    dnx_algo_port_db_sch_interface_priority_propagation_enable_set_cb set;
    dnx_algo_port_db_sch_interface_priority_propagation_enable_get_cb get;
} dnx_algo_port_db_sch_interface_priority_propagation_enable_cbs;

/**
 * This structure holds the access functions for the variable master_logical_port
 */
typedef struct {
    dnx_algo_port_db_sch_interface_master_logical_port_set_cb set;
    dnx_algo_port_db_sch_interface_master_logical_port_get_cb get;
} dnx_algo_port_db_sch_interface_master_logical_port_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_port_db_sch_if_t
 */
typedef struct {
    dnx_algo_port_db_sch_interface_set_cb set;
    dnx_algo_port_db_sch_interface_get_cb get;
    dnx_algo_port_db_sch_interface_alloc_cb alloc;
    /**
     * Access struct for valid
     */
    dnx_algo_port_db_sch_interface_valid_cbs valid;
    /**
     * Access struct for sch_if
     */
    dnx_algo_port_db_sch_interface_sch_if_cbs sch_if;
    /**
     * Access struct for priority_propagation_enable
     */
    dnx_algo_port_db_sch_interface_priority_propagation_enable_cbs priority_propagation_enable;
    /**
     * Access struct for master_logical_port
     */
    dnx_algo_port_db_sch_interface_master_logical_port_cbs master_logical_port;
} dnx_algo_port_db_sch_interface_cbs;

/**
 * This structure holds the access functions for the variable skip_first_user_defined_header_size_profile_data
 */
typedef struct {
    dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_set_cb set;
    dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_get_cb get;
    dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_create_cb create;
    dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_exchange_cb exchange;
    dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_profile_data_get_cb profile_data_get;
    dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_profile_get_cb profile_get;
} dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_cbs;

/**
 * This structure holds the access functions for the variable port_to_profile_map
 */
typedef struct {
    dnx_algo_port_db_prd_port_to_profile_map_set_cb set;
    dnx_algo_port_db_prd_port_to_profile_map_get_cb get;
} dnx_algo_port_db_prd_port_to_profile_map_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_prd_info_t
 */
typedef struct {
    dnx_algo_port_db_prd_set_cb set;
    dnx_algo_port_db_prd_get_cb get;
    /**
     * Access struct for port_to_profile_map
     */
    dnx_algo_port_db_prd_port_to_profile_map_cbs port_to_profile_map;
} dnx_algo_port_db_prd_cbs;

/**
 * This structure holds the access functions for the variable dnx_algo_port_db_t
 */
typedef struct {
    dnx_algo_port_db_is_init_cb is_init;
    dnx_algo_port_db_init_cb init;
    /**
     * Access struct for general
     */
    dnx_algo_port_db_general_cbs general;
    /**
     * Access struct for logical
     */
    dnx_algo_port_db_logical_cbs logical;
    /**
     * Access struct for nif
     */
    dnx_algo_port_db_nif_cbs nif;
    /**
     * Access struct for tm
     */
    dnx_algo_port_db_tm_cbs tm;
    /**
     * Access struct for sch
     */
    dnx_algo_port_db_sch_cbs sch;
    /**
     * Access struct for pp
     */
    dnx_algo_port_db_pp_cbs pp;
    /**
     * Access struct for pp_alloc
     */
    dnx_algo_port_db_pp_alloc_cbs pp_alloc;
    /**
     * Access struct for ilkn
     */
    dnx_algo_port_db_ilkn_cbs ilkn;
    /**
     * Access struct for flexe
     */
    dnx_algo_port_db_flexe_cbs flexe;
    /**
     * Access struct for fabric
     */
    dnx_algo_port_db_fabric_cbs fabric;
    /**
     * Access struct for tm_interface
     */
    dnx_algo_port_db_tm_interface_cbs tm_interface;
    /**
     * Access struct for interface
     */
    dnx_algo_port_db_interface_cbs interface;
    /**
     * Access struct for sch_interface
     */
    dnx_algo_port_db_sch_interface_cbs sch_interface;
    /**
     * Access struct for skip_first_user_defined_header_size_profile_data
     */
    dnx_algo_port_db_skip_first_user_defined_header_size_profile_data_cbs skip_first_user_defined_header_size_profile_data;
    /**
     * Access struct for prd
     */
    dnx_algo_port_db_prd_cbs prd;
} dnx_algo_port_db_cbs;

/*
 * Global Variables
 */

/*
 * FUNCTIONs
 */

/*
 *
 * get_name function for enum type dnx_algo_port_state_e
 * AUTO-GENERATED - DO NOT MODIFY
 */
const char *
dnx_algo_port_state_e_get_name(dnx_algo_port_state_e value);


/*
 * Global Variables
 */

extern dnx_algo_port_db_cbs dnx_algo_port_db;

#endif /* __DNX_ALGO_PORT_ACCESS_H__ */
