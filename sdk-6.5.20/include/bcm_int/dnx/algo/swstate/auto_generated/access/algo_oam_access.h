/** \file algo/swstate/auto_generated/access/algo_oam_access.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef __ALGO_OAM_ACCESS_H__
#define __ALGO_OAM_ACCESS_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <bcm_int/dnx/algo/swstate/auto_generated/types/algo_oam_types.h>
#include <bcm_int/dnx/algo/oam/algo_oam.h>
#include <bcm_int/dnx/algo/oamp/algo_oamp.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr_internal.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr_internal.h>
#include <src/bcm/dnx/oam/oam_oamp.h>
/*
 * TYPEDEFs
 */

/**
 * implemented by: algo_oam_db_is_init
 */
typedef int (*algo_oam_db_is_init_cb)(
    int unit, uint8 *is_init);

/**
 * implemented by: algo_oam_db_init
 */
typedef int (*algo_oam_db_init_cb)(
    int unit);

/**
 * implemented by: algo_oam_db_oam_group_id_set
 */
typedef int (*algo_oam_db_oam_group_id_set_cb)(
    int unit, dnx_algo_res_t oam_group_id);

/**
 * implemented by: algo_oam_db_oam_group_id_get
 */
typedef int (*algo_oam_db_oam_group_id_get_cb)(
    int unit, dnx_algo_res_t *oam_group_id);

/**
 * implemented by: algo_oam_db_oam_group_id_create
 */
typedef int (*algo_oam_db_oam_group_id_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_oam_db_oam_group_id_allocate_single
 */
typedef int (*algo_oam_db_oam_group_id_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_oam_db_oam_group_id_free_single
 */
typedef int (*algo_oam_db_oam_group_id_free_single_cb)(
    int unit, int element);

/**
 * implemented by: algo_oam_db_oam_group_id_is_allocated
 */
typedef int (*algo_oam_db_oam_group_id_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: algo_oam_db_oam_profile_id_ing_set
 */
typedef int (*algo_oam_db_oam_profile_id_ing_set_cb)(
    int unit, dnx_algo_res_t oam_profile_id_ing);

/**
 * implemented by: algo_oam_db_oam_profile_id_ing_get
 */
typedef int (*algo_oam_db_oam_profile_id_ing_get_cb)(
    int unit, dnx_algo_res_t *oam_profile_id_ing);

/**
 * implemented by: algo_oam_db_oam_profile_id_ing_create
 */
typedef int (*algo_oam_db_oam_profile_id_ing_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_oam_db_oam_profile_id_ing_allocate_single
 */
typedef int (*algo_oam_db_oam_profile_id_ing_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_oam_db_oam_profile_id_ing_free_single
 */
typedef int (*algo_oam_db_oam_profile_id_ing_free_single_cb)(
    int unit, int element);

/**
 * implemented by: algo_oam_db_oam_profile_id_ing_is_allocated
 */
typedef int (*algo_oam_db_oam_profile_id_ing_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: algo_oam_db_oam_profile_id_eg_set
 */
typedef int (*algo_oam_db_oam_profile_id_eg_set_cb)(
    int unit, dnx_algo_res_t oam_profile_id_eg);

/**
 * implemented by: algo_oam_db_oam_profile_id_eg_get
 */
typedef int (*algo_oam_db_oam_profile_id_eg_get_cb)(
    int unit, dnx_algo_res_t *oam_profile_id_eg);

/**
 * implemented by: algo_oam_db_oam_profile_id_eg_create
 */
typedef int (*algo_oam_db_oam_profile_id_eg_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_oam_db_oam_profile_id_eg_allocate_single
 */
typedef int (*algo_oam_db_oam_profile_id_eg_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_oam_db_oam_profile_id_eg_free_single
 */
typedef int (*algo_oam_db_oam_profile_id_eg_free_single_cb)(
    int unit, int element);

/**
 * implemented by: algo_oam_db_oam_profile_id_eg_is_allocated
 */
typedef int (*algo_oam_db_oam_profile_id_eg_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: algo_oam_db_oam_profile_id_ing_acc_set
 */
typedef int (*algo_oam_db_oam_profile_id_ing_acc_set_cb)(
    int unit, dnx_algo_res_t oam_profile_id_ing_acc);

/**
 * implemented by: algo_oam_db_oam_profile_id_ing_acc_get
 */
typedef int (*algo_oam_db_oam_profile_id_ing_acc_get_cb)(
    int unit, dnx_algo_res_t *oam_profile_id_ing_acc);

/**
 * implemented by: algo_oam_db_oam_profile_id_ing_acc_create
 */
typedef int (*algo_oam_db_oam_profile_id_ing_acc_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_oam_db_oam_profile_id_ing_acc_allocate_single
 */
typedef int (*algo_oam_db_oam_profile_id_ing_acc_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_oam_db_oam_profile_id_ing_acc_free_single
 */
typedef int (*algo_oam_db_oam_profile_id_ing_acc_free_single_cb)(
    int unit, int element);

/**
 * implemented by: algo_oam_db_oam_profile_id_ing_acc_is_allocated
 */
typedef int (*algo_oam_db_oam_profile_id_ing_acc_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: algo_oam_db_oam_profile_id_eg_acc_set
 */
typedef int (*algo_oam_db_oam_profile_id_eg_acc_set_cb)(
    int unit, dnx_algo_res_t oam_profile_id_eg_acc);

/**
 * implemented by: algo_oam_db_oam_profile_id_eg_acc_get
 */
typedef int (*algo_oam_db_oam_profile_id_eg_acc_get_cb)(
    int unit, dnx_algo_res_t *oam_profile_id_eg_acc);

/**
 * implemented by: algo_oam_db_oam_profile_id_eg_acc_create
 */
typedef int (*algo_oam_db_oam_profile_id_eg_acc_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_oam_db_oam_profile_id_eg_acc_allocate_single
 */
typedef int (*algo_oam_db_oam_profile_id_eg_acc_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_oam_db_oam_profile_id_eg_acc_free_single
 */
typedef int (*algo_oam_db_oam_profile_id_eg_acc_free_single_cb)(
    int unit, int element);

/**
 * implemented by: algo_oam_db_oam_profile_id_eg_acc_is_allocated
 */
typedef int (*algo_oam_db_oam_profile_id_eg_acc_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: algo_oam_db_oam_rmep_id_below_threshold_set
 */
typedef int (*algo_oam_db_oam_rmep_id_below_threshold_set_cb)(
    int unit, dnx_algo_res_t oam_rmep_id_below_threshold);

/**
 * implemented by: algo_oam_db_oam_rmep_id_below_threshold_get
 */
typedef int (*algo_oam_db_oam_rmep_id_below_threshold_get_cb)(
    int unit, dnx_algo_res_t *oam_rmep_id_below_threshold);

/**
 * implemented by: algo_oam_db_oam_rmep_id_below_threshold_create
 */
typedef int (*algo_oam_db_oam_rmep_id_below_threshold_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_oam_db_oam_rmep_id_below_threshold_allocate_single
 */
typedef int (*algo_oam_db_oam_rmep_id_below_threshold_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_oam_db_oam_rmep_id_below_threshold_free_single
 */
typedef int (*algo_oam_db_oam_rmep_id_below_threshold_free_single_cb)(
    int unit, int element);

/**
 * implemented by: algo_oam_db_oam_rmep_id_below_threshold_is_allocated
 */
typedef int (*algo_oam_db_oam_rmep_id_below_threshold_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: algo_oam_db_oam_rmep_id_below_threshold_get_next
 */
typedef int (*algo_oam_db_oam_rmep_id_below_threshold_get_next_cb)(
    int unit, int *element);

/**
 * implemented by: algo_oam_db_oam_rmep_id_above_threshold_set
 */
typedef int (*algo_oam_db_oam_rmep_id_above_threshold_set_cb)(
    int unit, dnx_algo_res_t oam_rmep_id_above_threshold);

/**
 * implemented by: algo_oam_db_oam_rmep_id_above_threshold_get
 */
typedef int (*algo_oam_db_oam_rmep_id_above_threshold_get_cb)(
    int unit, dnx_algo_res_t *oam_rmep_id_above_threshold);

/**
 * implemented by: algo_oam_db_oam_rmep_id_above_threshold_create
 */
typedef int (*algo_oam_db_oam_rmep_id_above_threshold_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_oam_db_oam_rmep_id_above_threshold_allocate_single
 */
typedef int (*algo_oam_db_oam_rmep_id_above_threshold_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_oam_db_oam_rmep_id_above_threshold_free_single
 */
typedef int (*algo_oam_db_oam_rmep_id_above_threshold_free_single_cb)(
    int unit, int element);

/**
 * implemented by: algo_oam_db_oam_rmep_id_above_threshold_is_allocated
 */
typedef int (*algo_oam_db_oam_rmep_id_above_threshold_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: algo_oam_db_oam_rmep_id_above_threshold_get_next
 */
typedef int (*algo_oam_db_oam_rmep_id_above_threshold_get_next_cb)(
    int unit, int *element);

/**
 * implemented by: algo_oam_db_oam_itmh_priority_profile_set
 */
typedef int (*algo_oam_db_oam_itmh_priority_profile_set_cb)(
    int unit, dnx_algo_template_t oam_itmh_priority_profile);

/**
 * implemented by: algo_oam_db_oam_itmh_priority_profile_get
 */
typedef int (*algo_oam_db_oam_itmh_priority_profile_get_cb)(
    int unit, dnx_algo_template_t *oam_itmh_priority_profile);

/**
 * implemented by: algo_oam_db_oam_itmh_priority_profile_create
 */
typedef int (*algo_oam_db_oam_itmh_priority_profile_create_cb)(
    int unit, dnx_algo_template_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_oam_db_oam_itmh_priority_profile_allocate_single
 */
typedef int (*algo_oam_db_oam_itmh_priority_profile_allocate_single_cb)(
    int unit, uint32 flags, dnx_oam_itmh_priority_t *profile_data, void *extra_arguments, int *profile, uint8 *first_reference);

/**
 * implemented by: algo_oam_db_oam_itmh_priority_profile_free_single
 */
typedef int (*algo_oam_db_oam_itmh_priority_profile_free_single_cb)(
    int unit, int profile, uint8 *last_reference);

/**
 * implemented by: algo_oam_db_oam_itmh_priority_profile_profile_data_get
 */
typedef int (*algo_oam_db_oam_itmh_priority_profile_profile_data_get_cb)(
    int unit, int profile, int *ref_count, dnx_oam_itmh_priority_t *profile_data);

/**
 * implemented by: algo_oam_db_oam_mpls_pwe_exp_ttl_profile_set
 */
typedef int (*algo_oam_db_oam_mpls_pwe_exp_ttl_profile_set_cb)(
    int unit, dnx_algo_template_t oam_mpls_pwe_exp_ttl_profile);

/**
 * implemented by: algo_oam_db_oam_mpls_pwe_exp_ttl_profile_get
 */
typedef int (*algo_oam_db_oam_mpls_pwe_exp_ttl_profile_get_cb)(
    int unit, dnx_algo_template_t *oam_mpls_pwe_exp_ttl_profile);

/**
 * implemented by: algo_oam_db_oam_mpls_pwe_exp_ttl_profile_create
 */
typedef int (*algo_oam_db_oam_mpls_pwe_exp_ttl_profile_create_cb)(
    int unit, dnx_algo_template_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_oam_db_oam_mpls_pwe_exp_ttl_profile_allocate_single
 */
typedef int (*algo_oam_db_oam_mpls_pwe_exp_ttl_profile_allocate_single_cb)(
    int unit, uint32 flags, dnx_oam_ttl_exp_profile_t *profile_data, void *extra_arguments, int *profile, uint8 *first_reference);

/**
 * implemented by: algo_oam_db_oam_mpls_pwe_exp_ttl_profile_free_single
 */
typedef int (*algo_oam_db_oam_mpls_pwe_exp_ttl_profile_free_single_cb)(
    int unit, int profile, uint8 *last_reference);

/**
 * implemented by: algo_oam_db_oam_mpls_pwe_exp_ttl_profile_profile_data_get
 */
typedef int (*algo_oam_db_oam_mpls_pwe_exp_ttl_profile_profile_data_get_cb)(
    int unit, int profile, int *ref_count, dnx_oam_ttl_exp_profile_t *profile_data);

/**
 * implemented by: algo_oam_db_oamp_punt_event_prof_template_set
 */
typedef int (*algo_oam_db_oamp_punt_event_prof_template_set_cb)(
    int unit, dnx_algo_template_t oamp_punt_event_prof_template);

/**
 * implemented by: algo_oam_db_oamp_punt_event_prof_template_get
 */
typedef int (*algo_oam_db_oamp_punt_event_prof_template_get_cb)(
    int unit, dnx_algo_template_t *oamp_punt_event_prof_template);

/**
 * implemented by: algo_oam_db_oamp_punt_event_prof_template_create
 */
typedef int (*algo_oam_db_oamp_punt_event_prof_template_create_cb)(
    int unit, dnx_algo_template_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_oam_db_oamp_punt_event_prof_template_allocate_single
 */
typedef int (*algo_oam_db_oamp_punt_event_prof_template_allocate_single_cb)(
    int unit, uint32 flags, dnx_oam_oamp_punt_event_profile_t *profile_data, void *extra_arguments, int *profile, uint8 *first_reference);

/**
 * implemented by: algo_oam_db_oamp_punt_event_prof_template_free_single
 */
typedef int (*algo_oam_db_oamp_punt_event_prof_template_free_single_cb)(
    int unit, int profile, uint8 *last_reference);

/**
 * implemented by: algo_oam_db_oamp_punt_event_prof_template_exchange
 */
typedef int (*algo_oam_db_oamp_punt_event_prof_template_exchange_cb)(
    int unit, uint32 flags, const dnx_oam_oamp_punt_event_profile_t *profile_data, int old_profile, const void *extra_arguments, int *new_profile, uint8 *first_reference, uint8 *last_reference);

/**
 * implemented by: algo_oam_db_oamp_punt_event_prof_template_profile_data_get
 */
typedef int (*algo_oam_db_oamp_punt_event_prof_template_profile_data_get_cb)(
    int unit, int profile, int *ref_count, dnx_oam_oamp_punt_event_profile_t *profile_data);

/**
 * implemented by: algo_oam_db_oam_sa_mac_msb_profile_template_set
 */
typedef int (*algo_oam_db_oam_sa_mac_msb_profile_template_set_cb)(
    int unit, dnx_algo_template_t oam_sa_mac_msb_profile_template);

/**
 * implemented by: algo_oam_db_oam_sa_mac_msb_profile_template_get
 */
typedef int (*algo_oam_db_oam_sa_mac_msb_profile_template_get_cb)(
    int unit, dnx_algo_template_t *oam_sa_mac_msb_profile_template);

/**
 * implemented by: algo_oam_db_oam_sa_mac_msb_profile_template_create
 */
typedef int (*algo_oam_db_oam_sa_mac_msb_profile_template_create_cb)(
    int unit, dnx_algo_template_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_oam_db_oam_sa_mac_msb_profile_template_allocate_single
 */
typedef int (*algo_oam_db_oam_sa_mac_msb_profile_template_allocate_single_cb)(
    int unit, uint32 flags, uint8 *profile_data, void *extra_arguments, int *profile, uint8 *first_reference);

/**
 * implemented by: algo_oam_db_oam_sa_mac_msb_profile_template_free_single
 */
typedef int (*algo_oam_db_oam_sa_mac_msb_profile_template_free_single_cb)(
    int unit, int profile, uint8 *last_reference);

/**
 * implemented by: algo_oam_db_eth_oam_tpid_profile_set
 */
typedef int (*algo_oam_db_eth_oam_tpid_profile_set_cb)(
    int unit, dnx_algo_template_t eth_oam_tpid_profile);

/**
 * implemented by: algo_oam_db_eth_oam_tpid_profile_get
 */
typedef int (*algo_oam_db_eth_oam_tpid_profile_get_cb)(
    int unit, dnx_algo_template_t *eth_oam_tpid_profile);

/**
 * implemented by: algo_oam_db_eth_oam_tpid_profile_create
 */
typedef int (*algo_oam_db_eth_oam_tpid_profile_create_cb)(
    int unit, dnx_algo_template_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_oam_db_eth_oam_tpid_profile_allocate_single
 */
typedef int (*algo_oam_db_eth_oam_tpid_profile_allocate_single_cb)(
    int unit, uint32 flags, uint16 *profile_data, void *extra_arguments, int *profile, uint8 *first_reference);

/**
 * implemented by: algo_oam_db_eth_oam_tpid_profile_free_single
 */
typedef int (*algo_oam_db_eth_oam_tpid_profile_free_single_cb)(
    int unit, int profile, uint8 *last_reference);

/**
 * implemented by: algo_oam_db_oam_group_icc_profile_set
 */
typedef int (*algo_oam_db_oam_group_icc_profile_set_cb)(
    int unit, dnx_algo_template_t oam_group_icc_profile);

/**
 * implemented by: algo_oam_db_oam_group_icc_profile_get
 */
typedef int (*algo_oam_db_oam_group_icc_profile_get_cb)(
    int unit, dnx_algo_template_t *oam_group_icc_profile);

/**
 * implemented by: algo_oam_db_oam_group_icc_profile_create
 */
typedef int (*algo_oam_db_oam_group_icc_profile_create_cb)(
    int unit, dnx_algo_template_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_oam_db_oam_group_icc_profile_allocate_single
 */
typedef int (*algo_oam_db_oam_group_icc_profile_allocate_single_cb)(
    int unit, uint32 flags, uint8 *profile_data, void *extra_arguments, int *profile, uint8 *first_reference);

/**
 * implemented by: algo_oam_db_oam_group_icc_profile_free_single
 */
typedef int (*algo_oam_db_oam_group_icc_profile_free_single_cb)(
    int unit, int profile, uint8 *last_reference);

/**
 * implemented by: algo_oam_db_oam_group_icc_profile_profile_get
 */
typedef int (*algo_oam_db_oam_group_icc_profile_profile_get_cb)(
    int unit, const uint8 *profile_data, int *profile);

/**
 * implemented by: algo_oam_db_oam_mep_profile_set
 */
typedef int (*algo_oam_db_oam_mep_profile_set_cb)(
    int unit, dnx_algo_template_t oam_mep_profile);

/**
 * implemented by: algo_oam_db_oam_mep_profile_get
 */
typedef int (*algo_oam_db_oam_mep_profile_get_cb)(
    int unit, dnx_algo_template_t *oam_mep_profile);

/**
 * implemented by: algo_oam_db_oam_mep_profile_create
 */
typedef int (*algo_oam_db_oam_mep_profile_create_cb)(
    int unit, dnx_algo_template_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_oam_db_oam_mep_profile_allocate_single
 */
typedef int (*algo_oam_db_oam_mep_profile_allocate_single_cb)(
    int unit, uint32 flags, dnx_oam_mep_profile_t *profile_data, void *extra_arguments, int *profile, uint8 *first_reference);

/**
 * implemented by: algo_oam_db_oam_mep_profile_free_single
 */
typedef int (*algo_oam_db_oam_mep_profile_free_single_cb)(
    int unit, int profile, uint8 *last_reference);

/**
 * implemented by: algo_oam_db_oam_mep_profile_exchange
 */
typedef int (*algo_oam_db_oam_mep_profile_exchange_cb)(
    int unit, uint32 flags, const dnx_oam_mep_profile_t *profile_data, int old_profile, const void *extra_arguments, int *new_profile, uint8 *first_reference, uint8 *last_reference);

/**
 * implemented by: algo_oam_db_oam_mep_profile_replace_data
 */
typedef int (*algo_oam_db_oam_mep_profile_replace_data_cb)(
    int unit, int profile,  const dnx_oam_mep_profile_t *new_profile_data);

/**
 * implemented by: algo_oam_db_oam_mep_profile_profile_data_get
 */
typedef int (*algo_oam_db_oam_mep_profile_profile_data_get_cb)(
    int unit, int profile, int *ref_count, dnx_oam_mep_profile_t *profile_data);

/**
 * implemented by: algo_oam_db_oam_da_mac_msb_profile_template_set
 */
typedef int (*algo_oam_db_oam_da_mac_msb_profile_template_set_cb)(
    int unit, dnx_algo_template_t oam_da_mac_msb_profile_template);

/**
 * implemented by: algo_oam_db_oam_da_mac_msb_profile_template_get
 */
typedef int (*algo_oam_db_oam_da_mac_msb_profile_template_get_cb)(
    int unit, dnx_algo_template_t *oam_da_mac_msb_profile_template);

/**
 * implemented by: algo_oam_db_oam_da_mac_msb_profile_template_create
 */
typedef int (*algo_oam_db_oam_da_mac_msb_profile_template_create_cb)(
    int unit, dnx_algo_template_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_oam_db_oam_da_mac_msb_profile_template_allocate_single
 */
typedef int (*algo_oam_db_oam_da_mac_msb_profile_template_allocate_single_cb)(
    int unit, uint32 flags, void *profile_data, void *extra_arguments, int *profile, uint8 *first_reference);

/**
 * implemented by: algo_oam_db_oam_da_mac_msb_profile_template_free_single
 */
typedef int (*algo_oam_db_oam_da_mac_msb_profile_template_free_single_cb)(
    int unit, int profile, uint8 *last_reference);

/**
 * implemented by: algo_oam_db_oam_da_mac_msb_profile_template_exchange
 */
typedef int (*algo_oam_db_oam_da_mac_msb_profile_template_exchange_cb)(
    int unit, uint32 flags, const void *profile_data, int old_profile, const void *extra_arguments, int *new_profile, uint8 *first_reference, uint8 *last_reference);

/**
 * implemented by: algo_oam_db_oam_da_mac_msb_profile_template_profile_data_get
 */
typedef int (*algo_oam_db_oam_da_mac_msb_profile_template_profile_data_get_cb)(
    int unit, int profile, int *ref_count, void *profile_data);

/**
 * implemented by: algo_oam_db_oam_da_mac_lsb_profile_template_set
 */
typedef int (*algo_oam_db_oam_da_mac_lsb_profile_template_set_cb)(
    int unit, dnx_algo_template_t oam_da_mac_lsb_profile_template);

/**
 * implemented by: algo_oam_db_oam_da_mac_lsb_profile_template_get
 */
typedef int (*algo_oam_db_oam_da_mac_lsb_profile_template_get_cb)(
    int unit, dnx_algo_template_t *oam_da_mac_lsb_profile_template);

/**
 * implemented by: algo_oam_db_oam_da_mac_lsb_profile_template_create
 */
typedef int (*algo_oam_db_oam_da_mac_lsb_profile_template_create_cb)(
    int unit, dnx_algo_template_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_oam_db_oam_da_mac_lsb_profile_template_allocate_single
 */
typedef int (*algo_oam_db_oam_da_mac_lsb_profile_template_allocate_single_cb)(
    int unit, uint32 flags, void *profile_data, void *extra_arguments, int *profile, uint8 *first_reference);

/**
 * implemented by: algo_oam_db_oam_da_mac_lsb_profile_template_free_single
 */
typedef int (*algo_oam_db_oam_da_mac_lsb_profile_template_free_single_cb)(
    int unit, int profile, uint8 *last_reference);

/**
 * implemented by: algo_oam_db_oam_da_mac_lsb_profile_template_exchange
 */
typedef int (*algo_oam_db_oam_da_mac_lsb_profile_template_exchange_cb)(
    int unit, uint32 flags, const void *profile_data, int old_profile, const void *extra_arguments, int *new_profile, uint8 *first_reference, uint8 *last_reference);

/**
 * implemented by: algo_oam_db_oam_da_mac_lsb_profile_template_profile_data_get
 */
typedef int (*algo_oam_db_oam_da_mac_lsb_profile_template_profile_data_get_cb)(
    int unit, int profile, int *ref_count, void *profile_data);

/**
 * implemented by: algo_oam_db_oam_default_mep_profiles_set
 */
typedef int (*algo_oam_db_oam_default_mep_profiles_set_cb)(
    int unit, dnx_algo_res_t oam_default_mep_profiles);

/**
 * implemented by: algo_oam_db_oam_default_mep_profiles_get
 */
typedef int (*algo_oam_db_oam_default_mep_profiles_get_cb)(
    int unit, dnx_algo_res_t *oam_default_mep_profiles);

/**
 * implemented by: algo_oam_db_oam_default_mep_profiles_create
 */
typedef int (*algo_oam_db_oam_default_mep_profiles_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_oam_db_oam_default_mep_profiles_allocate_single
 */
typedef int (*algo_oam_db_oam_default_mep_profiles_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: algo_oam_db_oam_default_mep_profiles_free_single
 */
typedef int (*algo_oam_db_oam_default_mep_profiles_free_single_cb)(
    int unit, int element);

/**
 * implemented by: algo_oam_db_oam_default_mep_profiles_is_allocated
 */
typedef int (*algo_oam_db_oam_default_mep_profiles_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: algo_oam_db_oam_default_mep_profiles_get_next
 */
typedef int (*algo_oam_db_oam_default_mep_profiles_get_next_cb)(
    int unit, int *element);

/**
 * implemented by: algo_oam_db_oam_trap_tcam_index_set
 */
typedef int (*algo_oam_db_oam_trap_tcam_index_set_cb)(
    int unit, dnx_algo_template_t oam_trap_tcam_index);

/**
 * implemented by: algo_oam_db_oam_trap_tcam_index_get
 */
typedef int (*algo_oam_db_oam_trap_tcam_index_get_cb)(
    int unit, dnx_algo_template_t *oam_trap_tcam_index);

/**
 * implemented by: algo_oam_db_oam_trap_tcam_index_create
 */
typedef int (*algo_oam_db_oam_trap_tcam_index_create_cb)(
    int unit, dnx_algo_template_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_oam_db_oam_trap_tcam_index_allocate_single
 */
typedef int (*algo_oam_db_oam_trap_tcam_index_allocate_single_cb)(
    int unit, uint32 flags, dnx_oam_oamp_trap_tcam_entry_t *profile_data, void *extra_arguments, int *profile, uint8 *first_reference);

/**
 * implemented by: algo_oam_db_oam_trap_tcam_index_free_single
 */
typedef int (*algo_oam_db_oam_trap_tcam_index_free_single_cb)(
    int unit, int profile, uint8 *last_reference);

/**
 * implemented by: algo_oam_db_oam_trap_tcam_index_exchange
 */
typedef int (*algo_oam_db_oam_trap_tcam_index_exchange_cb)(
    int unit, uint32 flags, const dnx_oam_oamp_trap_tcam_entry_t *profile_data, int old_profile, const void *extra_arguments, int *new_profile, uint8 *first_reference, uint8 *last_reference);

/**
 * implemented by: algo_oam_db_oam_trap_tcam_index_replace_data
 */
typedef int (*algo_oam_db_oam_trap_tcam_index_replace_data_cb)(
    int unit, int profile,  const dnx_oam_oamp_trap_tcam_entry_t *new_profile_data);

/**
 * implemented by: algo_oam_db_oam_trap_tcam_index_profile_data_get
 */
typedef int (*algo_oam_db_oam_trap_tcam_index_profile_data_get_cb)(
    int unit, int profile, int *ref_count, dnx_oam_oamp_trap_tcam_entry_t *profile_data);

/**
 * implemented by: algo_oam_db_slm_oamp_measurement_period_set
 */
typedef int (*algo_oam_db_slm_oamp_measurement_period_set_cb)(
    int unit, dnx_algo_template_t slm_oamp_measurement_period);

/**
 * implemented by: algo_oam_db_slm_oamp_measurement_period_get
 */
typedef int (*algo_oam_db_slm_oamp_measurement_period_get_cb)(
    int unit, dnx_algo_template_t *slm_oamp_measurement_period);

/**
 * implemented by: algo_oam_db_slm_oamp_measurement_period_create
 */
typedef int (*algo_oam_db_slm_oamp_measurement_period_create_cb)(
    int unit, dnx_algo_template_create_data_t * data, void *extra_arguments);

/**
 * implemented by: algo_oam_db_slm_oamp_measurement_period_allocate_single
 */
typedef int (*algo_oam_db_slm_oamp_measurement_period_allocate_single_cb)(
    int unit, uint32 flags, uint32 *profile_data, void *extra_arguments, int *profile, uint8 *first_reference);

/**
 * implemented by: algo_oam_db_slm_oamp_measurement_period_free_single
 */
typedef int (*algo_oam_db_slm_oamp_measurement_period_free_single_cb)(
    int unit, int profile, uint8 *last_reference);

/**
 * implemented by: algo_oam_db_slm_oamp_measurement_period_profile_data_get
 */
typedef int (*algo_oam_db_slm_oamp_measurement_period_profile_data_get_cb)(
    int unit, int profile, int *ref_count, uint32 *profile_data);

/**
 * implemented by: algo_oam_db_slm_oamp_measurement_period_profile_get
 */
typedef int (*algo_oam_db_slm_oamp_measurement_period_profile_get_cb)(
    int unit, const uint32 *profile_data, int *profile);

/**
 * implemented by: algo_oam_db_mpls_tp_mdl_ignore_set
 */
typedef int (*algo_oam_db_mpls_tp_mdl_ignore_set_cb)(
    int unit, uint32 mpls_tp_mdl_ignore);

/**
 * implemented by: algo_oam_db_mpls_tp_mdl_ignore_get
 */
typedef int (*algo_oam_db_mpls_tp_mdl_ignore_get_cb)(
    int unit, uint32 *mpls_tp_mdl_ignore);

/*
 * STRUCTs
 */

/**
 * This structure holds the access functions for the variable oam_group_id
 */
typedef struct {
    algo_oam_db_oam_group_id_set_cb set;
    algo_oam_db_oam_group_id_get_cb get;
    algo_oam_db_oam_group_id_create_cb create;
    algo_oam_db_oam_group_id_allocate_single_cb allocate_single;
    algo_oam_db_oam_group_id_free_single_cb free_single;
    algo_oam_db_oam_group_id_is_allocated_cb is_allocated;
} algo_oam_db_oam_group_id_cbs;

/**
 * This structure holds the access functions for the variable oam_profile_id_ing
 */
typedef struct {
    algo_oam_db_oam_profile_id_ing_set_cb set;
    algo_oam_db_oam_profile_id_ing_get_cb get;
    algo_oam_db_oam_profile_id_ing_create_cb create;
    algo_oam_db_oam_profile_id_ing_allocate_single_cb allocate_single;
    algo_oam_db_oam_profile_id_ing_free_single_cb free_single;
    algo_oam_db_oam_profile_id_ing_is_allocated_cb is_allocated;
} algo_oam_db_oam_profile_id_ing_cbs;

/**
 * This structure holds the access functions for the variable oam_profile_id_eg
 */
typedef struct {
    algo_oam_db_oam_profile_id_eg_set_cb set;
    algo_oam_db_oam_profile_id_eg_get_cb get;
    algo_oam_db_oam_profile_id_eg_create_cb create;
    algo_oam_db_oam_profile_id_eg_allocate_single_cb allocate_single;
    algo_oam_db_oam_profile_id_eg_free_single_cb free_single;
    algo_oam_db_oam_profile_id_eg_is_allocated_cb is_allocated;
} algo_oam_db_oam_profile_id_eg_cbs;

/**
 * This structure holds the access functions for the variable oam_profile_id_ing_acc
 */
typedef struct {
    algo_oam_db_oam_profile_id_ing_acc_set_cb set;
    algo_oam_db_oam_profile_id_ing_acc_get_cb get;
    algo_oam_db_oam_profile_id_ing_acc_create_cb create;
    algo_oam_db_oam_profile_id_ing_acc_allocate_single_cb allocate_single;
    algo_oam_db_oam_profile_id_ing_acc_free_single_cb free_single;
    algo_oam_db_oam_profile_id_ing_acc_is_allocated_cb is_allocated;
} algo_oam_db_oam_profile_id_ing_acc_cbs;

/**
 * This structure holds the access functions for the variable oam_profile_id_eg_acc
 */
typedef struct {
    algo_oam_db_oam_profile_id_eg_acc_set_cb set;
    algo_oam_db_oam_profile_id_eg_acc_get_cb get;
    algo_oam_db_oam_profile_id_eg_acc_create_cb create;
    algo_oam_db_oam_profile_id_eg_acc_allocate_single_cb allocate_single;
    algo_oam_db_oam_profile_id_eg_acc_free_single_cb free_single;
    algo_oam_db_oam_profile_id_eg_acc_is_allocated_cb is_allocated;
} algo_oam_db_oam_profile_id_eg_acc_cbs;

/**
 * This structure holds the access functions for the variable oam_rmep_id_below_threshold
 */
typedef struct {
    algo_oam_db_oam_rmep_id_below_threshold_set_cb set;
    algo_oam_db_oam_rmep_id_below_threshold_get_cb get;
    algo_oam_db_oam_rmep_id_below_threshold_create_cb create;
    algo_oam_db_oam_rmep_id_below_threshold_allocate_single_cb allocate_single;
    algo_oam_db_oam_rmep_id_below_threshold_free_single_cb free_single;
    algo_oam_db_oam_rmep_id_below_threshold_is_allocated_cb is_allocated;
    algo_oam_db_oam_rmep_id_below_threshold_get_next_cb get_next;
} algo_oam_db_oam_rmep_id_below_threshold_cbs;

/**
 * This structure holds the access functions for the variable oam_rmep_id_above_threshold
 */
typedef struct {
    algo_oam_db_oam_rmep_id_above_threshold_set_cb set;
    algo_oam_db_oam_rmep_id_above_threshold_get_cb get;
    algo_oam_db_oam_rmep_id_above_threshold_create_cb create;
    algo_oam_db_oam_rmep_id_above_threshold_allocate_single_cb allocate_single;
    algo_oam_db_oam_rmep_id_above_threshold_free_single_cb free_single;
    algo_oam_db_oam_rmep_id_above_threshold_is_allocated_cb is_allocated;
    algo_oam_db_oam_rmep_id_above_threshold_get_next_cb get_next;
} algo_oam_db_oam_rmep_id_above_threshold_cbs;

/**
 * This structure holds the access functions for the variable oam_itmh_priority_profile
 */
typedef struct {
    algo_oam_db_oam_itmh_priority_profile_set_cb set;
    algo_oam_db_oam_itmh_priority_profile_get_cb get;
    algo_oam_db_oam_itmh_priority_profile_create_cb create;
    algo_oam_db_oam_itmh_priority_profile_allocate_single_cb allocate_single;
    algo_oam_db_oam_itmh_priority_profile_free_single_cb free_single;
    algo_oam_db_oam_itmh_priority_profile_profile_data_get_cb profile_data_get;
} algo_oam_db_oam_itmh_priority_profile_cbs;

/**
 * This structure holds the access functions for the variable oam_mpls_pwe_exp_ttl_profile
 */
typedef struct {
    algo_oam_db_oam_mpls_pwe_exp_ttl_profile_set_cb set;
    algo_oam_db_oam_mpls_pwe_exp_ttl_profile_get_cb get;
    algo_oam_db_oam_mpls_pwe_exp_ttl_profile_create_cb create;
    algo_oam_db_oam_mpls_pwe_exp_ttl_profile_allocate_single_cb allocate_single;
    algo_oam_db_oam_mpls_pwe_exp_ttl_profile_free_single_cb free_single;
    algo_oam_db_oam_mpls_pwe_exp_ttl_profile_profile_data_get_cb profile_data_get;
} algo_oam_db_oam_mpls_pwe_exp_ttl_profile_cbs;

/**
 * This structure holds the access functions for the variable oamp_punt_event_prof_template
 */
typedef struct {
    algo_oam_db_oamp_punt_event_prof_template_set_cb set;
    algo_oam_db_oamp_punt_event_prof_template_get_cb get;
    algo_oam_db_oamp_punt_event_prof_template_create_cb create;
    algo_oam_db_oamp_punt_event_prof_template_allocate_single_cb allocate_single;
    algo_oam_db_oamp_punt_event_prof_template_free_single_cb free_single;
    algo_oam_db_oamp_punt_event_prof_template_exchange_cb exchange;
    algo_oam_db_oamp_punt_event_prof_template_profile_data_get_cb profile_data_get;
} algo_oam_db_oamp_punt_event_prof_template_cbs;

/**
 * This structure holds the access functions for the variable oam_sa_mac_msb_profile_template
 */
typedef struct {
    algo_oam_db_oam_sa_mac_msb_profile_template_set_cb set;
    algo_oam_db_oam_sa_mac_msb_profile_template_get_cb get;
    algo_oam_db_oam_sa_mac_msb_profile_template_create_cb create;
    algo_oam_db_oam_sa_mac_msb_profile_template_allocate_single_cb allocate_single;
    algo_oam_db_oam_sa_mac_msb_profile_template_free_single_cb free_single;
} algo_oam_db_oam_sa_mac_msb_profile_template_cbs;

/**
 * This structure holds the access functions for the variable eth_oam_tpid_profile
 */
typedef struct {
    algo_oam_db_eth_oam_tpid_profile_set_cb set;
    algo_oam_db_eth_oam_tpid_profile_get_cb get;
    algo_oam_db_eth_oam_tpid_profile_create_cb create;
    algo_oam_db_eth_oam_tpid_profile_allocate_single_cb allocate_single;
    algo_oam_db_eth_oam_tpid_profile_free_single_cb free_single;
} algo_oam_db_eth_oam_tpid_profile_cbs;

/**
 * This structure holds the access functions for the variable oam_group_icc_profile
 */
typedef struct {
    algo_oam_db_oam_group_icc_profile_set_cb set;
    algo_oam_db_oam_group_icc_profile_get_cb get;
    algo_oam_db_oam_group_icc_profile_create_cb create;
    algo_oam_db_oam_group_icc_profile_allocate_single_cb allocate_single;
    algo_oam_db_oam_group_icc_profile_free_single_cb free_single;
    algo_oam_db_oam_group_icc_profile_profile_get_cb profile_get;
} algo_oam_db_oam_group_icc_profile_cbs;

/**
 * This structure holds the access functions for the variable oam_mep_profile
 */
typedef struct {
    algo_oam_db_oam_mep_profile_set_cb set;
    algo_oam_db_oam_mep_profile_get_cb get;
    algo_oam_db_oam_mep_profile_create_cb create;
    algo_oam_db_oam_mep_profile_allocate_single_cb allocate_single;
    algo_oam_db_oam_mep_profile_free_single_cb free_single;
    algo_oam_db_oam_mep_profile_exchange_cb exchange;
    algo_oam_db_oam_mep_profile_replace_data_cb replace_data;
    algo_oam_db_oam_mep_profile_profile_data_get_cb profile_data_get;
} algo_oam_db_oam_mep_profile_cbs;

/**
 * This structure holds the access functions for the variable oam_da_mac_msb_profile_template
 */
typedef struct {
    algo_oam_db_oam_da_mac_msb_profile_template_set_cb set;
    algo_oam_db_oam_da_mac_msb_profile_template_get_cb get;
    algo_oam_db_oam_da_mac_msb_profile_template_create_cb create;
    algo_oam_db_oam_da_mac_msb_profile_template_allocate_single_cb allocate_single;
    algo_oam_db_oam_da_mac_msb_profile_template_free_single_cb free_single;
    algo_oam_db_oam_da_mac_msb_profile_template_exchange_cb exchange;
    algo_oam_db_oam_da_mac_msb_profile_template_profile_data_get_cb profile_data_get;
} algo_oam_db_oam_da_mac_msb_profile_template_cbs;

/**
 * This structure holds the access functions for the variable oam_da_mac_lsb_profile_template
 */
typedef struct {
    algo_oam_db_oam_da_mac_lsb_profile_template_set_cb set;
    algo_oam_db_oam_da_mac_lsb_profile_template_get_cb get;
    algo_oam_db_oam_da_mac_lsb_profile_template_create_cb create;
    algo_oam_db_oam_da_mac_lsb_profile_template_allocate_single_cb allocate_single;
    algo_oam_db_oam_da_mac_lsb_profile_template_free_single_cb free_single;
    algo_oam_db_oam_da_mac_lsb_profile_template_exchange_cb exchange;
    algo_oam_db_oam_da_mac_lsb_profile_template_profile_data_get_cb profile_data_get;
} algo_oam_db_oam_da_mac_lsb_profile_template_cbs;

/**
 * This structure holds the access functions for the variable oam_default_mep_profiles
 */
typedef struct {
    algo_oam_db_oam_default_mep_profiles_set_cb set;
    algo_oam_db_oam_default_mep_profiles_get_cb get;
    algo_oam_db_oam_default_mep_profiles_create_cb create;
    algo_oam_db_oam_default_mep_profiles_allocate_single_cb allocate_single;
    algo_oam_db_oam_default_mep_profiles_free_single_cb free_single;
    algo_oam_db_oam_default_mep_profiles_is_allocated_cb is_allocated;
    algo_oam_db_oam_default_mep_profiles_get_next_cb get_next;
} algo_oam_db_oam_default_mep_profiles_cbs;

/**
 * This structure holds the access functions for the variable oam_trap_tcam_index
 */
typedef struct {
    algo_oam_db_oam_trap_tcam_index_set_cb set;
    algo_oam_db_oam_trap_tcam_index_get_cb get;
    algo_oam_db_oam_trap_tcam_index_create_cb create;
    algo_oam_db_oam_trap_tcam_index_allocate_single_cb allocate_single;
    algo_oam_db_oam_trap_tcam_index_free_single_cb free_single;
    algo_oam_db_oam_trap_tcam_index_exchange_cb exchange;
    algo_oam_db_oam_trap_tcam_index_replace_data_cb replace_data;
    algo_oam_db_oam_trap_tcam_index_profile_data_get_cb profile_data_get;
} algo_oam_db_oam_trap_tcam_index_cbs;

/**
 * This structure holds the access functions for the variable slm_oamp_measurement_period
 */
typedef struct {
    algo_oam_db_slm_oamp_measurement_period_set_cb set;
    algo_oam_db_slm_oamp_measurement_period_get_cb get;
    algo_oam_db_slm_oamp_measurement_period_create_cb create;
    algo_oam_db_slm_oamp_measurement_period_allocate_single_cb allocate_single;
    algo_oam_db_slm_oamp_measurement_period_free_single_cb free_single;
    algo_oam_db_slm_oamp_measurement_period_profile_data_get_cb profile_data_get;
    algo_oam_db_slm_oamp_measurement_period_profile_get_cb profile_get;
} algo_oam_db_slm_oamp_measurement_period_cbs;

/**
 * This structure holds the access functions for the variable mpls_tp_mdl_ignore
 */
typedef struct {
    algo_oam_db_mpls_tp_mdl_ignore_set_cb set;
    algo_oam_db_mpls_tp_mdl_ignore_get_cb get;
} algo_oam_db_mpls_tp_mdl_ignore_cbs;

/**
 * This structure holds the access functions for the variable algo_oam_sw_state_t
 */
typedef struct {
    algo_oam_db_is_init_cb is_init;
    algo_oam_db_init_cb init;
    /**
     * Access struct for oam_group_id
     */
    algo_oam_db_oam_group_id_cbs oam_group_id;
    /**
     * Access struct for oam_profile_id_ing
     */
    algo_oam_db_oam_profile_id_ing_cbs oam_profile_id_ing;
    /**
     * Access struct for oam_profile_id_eg
     */
    algo_oam_db_oam_profile_id_eg_cbs oam_profile_id_eg;
    /**
     * Access struct for oam_profile_id_ing_acc
     */
    algo_oam_db_oam_profile_id_ing_acc_cbs oam_profile_id_ing_acc;
    /**
     * Access struct for oam_profile_id_eg_acc
     */
    algo_oam_db_oam_profile_id_eg_acc_cbs oam_profile_id_eg_acc;
    /**
     * Access struct for oam_rmep_id_below_threshold
     */
    algo_oam_db_oam_rmep_id_below_threshold_cbs oam_rmep_id_below_threshold;
    /**
     * Access struct for oam_rmep_id_above_threshold
     */
    algo_oam_db_oam_rmep_id_above_threshold_cbs oam_rmep_id_above_threshold;
    /**
     * Access struct for oam_itmh_priority_profile
     */
    algo_oam_db_oam_itmh_priority_profile_cbs oam_itmh_priority_profile;
    /**
     * Access struct for oam_mpls_pwe_exp_ttl_profile
     */
    algo_oam_db_oam_mpls_pwe_exp_ttl_profile_cbs oam_mpls_pwe_exp_ttl_profile;
    /**
     * Access struct for oamp_punt_event_prof_template
     */
    algo_oam_db_oamp_punt_event_prof_template_cbs oamp_punt_event_prof_template;
    /**
     * Access struct for oam_sa_mac_msb_profile_template
     */
    algo_oam_db_oam_sa_mac_msb_profile_template_cbs oam_sa_mac_msb_profile_template;
    /**
     * Access struct for eth_oam_tpid_profile
     */
    algo_oam_db_eth_oam_tpid_profile_cbs eth_oam_tpid_profile;
    /**
     * Access struct for oam_group_icc_profile
     */
    algo_oam_db_oam_group_icc_profile_cbs oam_group_icc_profile;
    /**
     * Access struct for oam_mep_profile
     */
    algo_oam_db_oam_mep_profile_cbs oam_mep_profile;
    /**
     * Access struct for oam_da_mac_msb_profile_template
     */
    algo_oam_db_oam_da_mac_msb_profile_template_cbs oam_da_mac_msb_profile_template;
    /**
     * Access struct for oam_da_mac_lsb_profile_template
     */
    algo_oam_db_oam_da_mac_lsb_profile_template_cbs oam_da_mac_lsb_profile_template;
    /**
     * Access struct for oam_default_mep_profiles
     */
    algo_oam_db_oam_default_mep_profiles_cbs oam_default_mep_profiles;
    /**
     * Access struct for oam_trap_tcam_index
     */
    algo_oam_db_oam_trap_tcam_index_cbs oam_trap_tcam_index;
    /**
     * Access struct for slm_oamp_measurement_period
     */
    algo_oam_db_slm_oamp_measurement_period_cbs slm_oamp_measurement_period;
    /**
     * Access struct for mpls_tp_mdl_ignore
     */
    algo_oam_db_mpls_tp_mdl_ignore_cbs mpls_tp_mdl_ignore;
} algo_oam_db_cbs;

/*
 * Global Variables
 */

/*
 * Global Variables
 */

extern algo_oam_db_cbs algo_oam_db;

#endif /* __ALGO_OAM_ACCESS_H__ */
