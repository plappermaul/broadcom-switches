/** \file algo/swstate/auto_generated/access/ppmc_access.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef __PPMC_ACCESS_H__
#define __PPMC_ACCESS_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <bcm_int/dnx/algo/swstate/auto_generated/types/ppmc_types.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr_internal.h>
/*
 * TYPEDEFs
 */

/**
 * implemented by: ppmc_db_is_init
 */
typedef int (*ppmc_db_is_init_cb)(
    int unit, uint8 *is_init);

/**
 * implemented by: ppmc_db_init
 */
typedef int (*ppmc_db_init_cb)(
    int unit);

/**
 * implemented by: ppmc_db_ppmc_res_manager_set
 */
typedef int (*ppmc_db_ppmc_res_manager_set_cb)(
    int unit, dnx_algo_res_t ppmc_res_manager);

/**
 * implemented by: ppmc_db_ppmc_res_manager_get
 */
typedef int (*ppmc_db_ppmc_res_manager_get_cb)(
    int unit, dnx_algo_res_t *ppmc_res_manager);

/**
 * implemented by: ppmc_db_ppmc_res_manager_create
 */
typedef int (*ppmc_db_ppmc_res_manager_create_cb)(
    int unit, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: ppmc_db_ppmc_res_manager_allocate_single
 */
typedef int (*ppmc_db_ppmc_res_manager_allocate_single_cb)(
    int unit, uint32 flags, void *extra_arguments, int *element);

/**
 * implemented by: ppmc_db_ppmc_res_manager_free_single
 */
typedef int (*ppmc_db_ppmc_res_manager_free_single_cb)(
    int unit, int element);

/**
 * implemented by: ppmc_db_ppmc_res_manager_is_allocated
 */
typedef int (*ppmc_db_ppmc_res_manager_is_allocated_cb)(
    int unit, int element, uint8 *is_allocated);

/**
 * implemented by: ppmc_db_ppmc_res_manager_clear
 */
typedef int (*ppmc_db_ppmc_res_manager_clear_cb)(
    int unit);

/**
 * implemented by: ppmc_db_ppmc_res_manager_nof_free_elements_get
 */
typedef int (*ppmc_db_ppmc_res_manager_nof_free_elements_get_cb)(
    int unit, int *nof_free_elements);

/**
 * implemented by: ppmc_db_ppmc_res_manager_get_next
 */
typedef int (*ppmc_db_ppmc_res_manager_get_next_cb)(
    int unit, int *element);

/*
 * STRUCTs
 */

/**
 * This structure holds the access functions for the variable ppmc_res_manager
 */
typedef struct {
    ppmc_db_ppmc_res_manager_set_cb set;
    ppmc_db_ppmc_res_manager_get_cb get;
    ppmc_db_ppmc_res_manager_create_cb create;
    ppmc_db_ppmc_res_manager_allocate_single_cb allocate_single;
    ppmc_db_ppmc_res_manager_free_single_cb free_single;
    ppmc_db_ppmc_res_manager_is_allocated_cb is_allocated;
    ppmc_db_ppmc_res_manager_clear_cb clear;
    ppmc_db_ppmc_res_manager_nof_free_elements_get_cb nof_free_elements_get;
    ppmc_db_ppmc_res_manager_get_next_cb get_next;
} ppmc_db_ppmc_res_manager_cbs;

/**
 * This structure holds the access functions for the variable ppmc_sw_state_t
 */
typedef struct {
    ppmc_db_is_init_cb is_init;
    ppmc_db_init_cb init;
    /**
     * Access struct for ppmc_res_manager
     */
    ppmc_db_ppmc_res_manager_cbs ppmc_res_manager;
} ppmc_db_cbs;

/*
 * Global Variables
 */

/*
 * Global Variables
 */

extern ppmc_db_cbs ppmc_db;

#endif /* __PPMC_ACCESS_H__ */
