/** \file algo/swstate/auto_generated/access/dnx_algo_field_key_alloc_access.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef __DNX_ALGO_FIELD_KEY_ALLOC_ACCESS_H__
#define __DNX_ALGO_FIELD_KEY_ALLOC_ACCESS_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <bcm_int/dnx/algo/swstate/auto_generated/types/dnx_algo_field_key_alloc_types.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr_internal.h>
#include <soc/dnx/swstate/auto_generated/types/dnx_field_types.h>
#include <soc/dnx/swstate/auto_generated/types/dnx_field_key_types.h>
/*
 * TYPEDEFs
 */

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_is_init
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_is_init_cb)(
    int unit, uint8 *is_init);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_init
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_init_cb)(
    int unit);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_alloc
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_alloc_cb)(
    int unit, uint32 key_stage_prog_occupation_idx_0, uint32 key_stage_prog_occupation_idx_1, uint32 nof_instances_to_alloc_0);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_key_occupation_state_set
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_key_occupation_state_set_cb)(
    int unit, uint32 key_stage_prog_occupation_idx_0, uint32 key_stage_prog_occupation_idx_1, uint32 key_occupation_idx_0, dnx_field_key_half_occupation_state_e key_occupation_state);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_key_occupation_state_get
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_key_occupation_state_get_cb)(
    int unit, uint32 key_stage_prog_occupation_idx_0, uint32 key_stage_prog_occupation_idx_1, uint32 key_occupation_idx_0, dnx_field_key_half_occupation_state_e *key_occupation_state);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_key_field_group_type_set
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_key_field_group_type_set_cb)(
    int unit, uint32 key_stage_prog_occupation_idx_0, uint32 key_stage_prog_occupation_idx_1, uint32 key_occupation_idx_0, dnx_field_group_type_e key_field_group_type);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_key_field_group_type_get
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_key_field_group_type_get_cb)(
    int unit, uint32 key_stage_prog_occupation_idx_0, uint32 key_stage_prog_occupation_idx_1, uint32 key_occupation_idx_0, dnx_field_group_type_e *key_field_group_type);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_key_allocation_id_set
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_key_allocation_id_set_cb)(
    int unit, uint32 key_stage_prog_occupation_idx_0, uint32 key_stage_prog_occupation_idx_1, uint32 key_occupation_idx_0, uint32 key_allocation_id);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_key_allocation_id_get
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_key_allocation_id_get_cb)(
    int unit, uint32 key_stage_prog_occupation_idx_0, uint32 key_stage_prog_occupation_idx_1, uint32 key_occupation_idx_0, uint32 *key_allocation_id);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_key_occ_bmp_set
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_key_occ_bmp_set_cb)(
    int unit, uint32 key_stage_prog_occupation_idx_0, uint32 key_stage_prog_occupation_idx_1, uint32 key_occupation_idx_0, uint32 bit_range_key_occ_bmp_idx_0, dnx_algo_res_t bit_range_key_occ_bmp);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_key_occ_bmp_get
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_key_occ_bmp_get_cb)(
    int unit, uint32 key_stage_prog_occupation_idx_0, uint32 key_stage_prog_occupation_idx_1, uint32 key_occupation_idx_0, uint32 bit_range_key_occ_bmp_idx_0, dnx_algo_res_t *bit_range_key_occ_bmp);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_key_occ_bmp_alloc
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_key_occ_bmp_alloc_cb)(
    int unit, uint32 key_stage_prog_occupation_idx_0, uint32 key_stage_prog_occupation_idx_1, uint32 key_occupation_idx_0, uint32 nof_instances_to_alloc_0);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_key_occ_bmp_create
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_key_occ_bmp_create_cb)(
    int unit, uint32 key_stage_prog_occupation_idx_0, uint32 key_stage_prog_occupation_idx_1, uint32 key_occupation_idx_0, uint32 bit_range_key_occ_bmp_idx_0, dnx_algo_res_create_data_t * data, void *extra_arguments);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_key_occ_bmp_allocate_several
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_key_occ_bmp_allocate_several_cb)(
    int unit, uint32 key_stage_prog_occupation_idx_0, uint32 key_stage_prog_occupation_idx_1, uint32 key_occupation_idx_0, uint32 bit_range_key_occ_bmp_idx_0, uint32 flags, uint32 nof_elements, void *extra_arguments, int *element);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_key_occ_bmp_free_several
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_key_occ_bmp_free_several_cb)(
    int unit, uint32 key_stage_prog_occupation_idx_0, uint32 key_stage_prog_occupation_idx_1, uint32 key_occupation_idx_0, uint32 bit_range_key_occ_bmp_idx_0, uint32 nof_elements, int element);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_num_bit_ranges_set
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_num_bit_ranges_set_cb)(
    int unit, uint32 key_stage_prog_occupation_idx_0, uint32 key_stage_prog_occupation_idx_1, uint32 key_occupation_idx_0, uint8 num_bit_ranges);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_num_bit_ranges_get
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_num_bit_ranges_get_cb)(
    int unit, uint32 key_stage_prog_occupation_idx_0, uint32 key_stage_prog_occupation_idx_1, uint32 key_occupation_idx_0, uint8 *num_bit_ranges);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_is_half_key_range_occupied_set
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_is_half_key_range_occupied_set_cb)(
    int unit, uint32 key_stage_prog_occupation_idx_0, uint32 key_stage_prog_occupation_idx_1, uint32 key_occupation_idx_0, uint8 is_half_key_range_occupied);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_is_half_key_range_occupied_get
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_is_half_key_range_occupied_get_cb)(
    int unit, uint32 key_stage_prog_occupation_idx_0, uint32 key_stage_prog_occupation_idx_1, uint32 key_occupation_idx_0, uint8 *is_half_key_range_occupied);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_desc_range_read
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_desc_range_read_cb)(
    int unit, uint32 key_stage_prog_occupation_idx_0, uint32 key_stage_prog_occupation_idx_1, uint32 key_occupation_idx_0, uint32 nof_elements, dnx_field_key_bit_range_detail_t *dest);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_desc_range_write
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_desc_range_write_cb)(
    int unit, uint32 key_stage_prog_occupation_idx_0, uint32 key_stage_prog_occupation_idx_1, uint32 key_occupation_idx_0, uint32 nof_elements, const dnx_field_key_bit_range_detail_t *source);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_desc_range_fill
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_desc_range_fill_cb)(
    int unit, uint32 key_stage_prog_occupation_idx_0, uint32 key_stage_prog_occupation_idx_1, uint32 key_occupation_idx_0, uint32 from_idx, uint32 nof_elements, dnx_field_key_bit_range_detail_t value);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_desc_alloc
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_desc_alloc_cb)(
    int unit, uint32 key_stage_prog_occupation_idx_0, uint32 key_stage_prog_occupation_idx_1, uint32 key_occupation_idx_0, uint32 nof_instances_to_alloc_0);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_desc_bit_range_size_set
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_desc_bit_range_size_set_cb)(
    int unit, uint32 key_stage_prog_occupation_idx_0, uint32 key_stage_prog_occupation_idx_1, uint32 key_occupation_idx_0, uint32 bit_range_desc_idx_0, uint8 bit_range_size);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_desc_bit_range_size_get
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_desc_bit_range_size_get_cb)(
    int unit, uint32 key_stage_prog_occupation_idx_0, uint32 key_stage_prog_occupation_idx_1, uint32 key_occupation_idx_0, uint32 bit_range_desc_idx_0, uint8 *bit_range_size);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_desc_fg_type_set
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_desc_fg_type_set_cb)(
    int unit, uint32 key_stage_prog_occupation_idx_0, uint32 key_stage_prog_occupation_idx_1, uint32 key_occupation_idx_0, uint32 bit_range_desc_idx_0, uint8 fg_type);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_desc_fg_type_get
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_desc_fg_type_get_cb)(
    int unit, uint32 key_stage_prog_occupation_idx_0, uint32 key_stage_prog_occupation_idx_1, uint32 key_occupation_idx_0, uint32 bit_range_desc_idx_0, uint8 *fg_type);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_nof_set
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_nof_set_cb)(
    int unit, uint32 key_stage_prog_occupation_idx_0, uint32 key_stage_prog_occupation_idx_1, uint8 key_occupation_nof);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_nof_get
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_nof_get_cb)(
    int unit, uint32 key_stage_prog_occupation_idx_0, uint32 key_stage_prog_occupation_idx_1, uint8 *key_occupation_nof);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_on_stage_supports_bitmap_allocation_set
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_on_stage_supports_bitmap_allocation_set_cb)(
    int unit, uint32 key_on_stage_supports_bitmap_allocation_idx_0, uint32 key_on_stage_supports_bitmap_allocation_idx_1, uint8 key_on_stage_supports_bitmap_allocation);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_on_stage_supports_bitmap_allocation_get
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_on_stage_supports_bitmap_allocation_get_cb)(
    int unit, uint32 key_on_stage_supports_bitmap_allocation_idx_0, uint32 key_on_stage_supports_bitmap_allocation_idx_1, uint8 *key_on_stage_supports_bitmap_allocation);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_range_read
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_range_read_cb)(
    int unit, uint32 nof_elements, dnx_field_key_alloc_group_instruction_t *dest);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_range_write
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_range_write_cb)(
    int unit, uint32 nof_elements, const dnx_field_key_alloc_group_instruction_t *source);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_range_fill
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_range_fill_cb)(
    int unit, uint32 from_idx, uint32 nof_elements, dnx_field_key_alloc_group_instruction_t value);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_set
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_set_cb)(
    int unit, uint32 keys_availability_stage_info_idx_0, uint32 keys_availability_group_info_idx_0, CONST dnx_field_key_alloc_instruction_t *keys_availability_group_info);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_get
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_get_cb)(
    int unit, uint32 keys_availability_stage_info_idx_0, uint32 keys_availability_group_info_idx_0, dnx_field_key_alloc_instruction_t *keys_availability_group_info);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_range_read
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_range_read_cb)(
    int unit, uint32 keys_availability_stage_info_idx_0, uint32 nof_elements, dnx_field_key_alloc_instruction_t *dest);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_range_write
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_range_write_cb)(
    int unit, uint32 keys_availability_stage_info_idx_0, uint32 nof_elements, const dnx_field_key_alloc_instruction_t *source);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_range_fill
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_range_fill_cb)(
    int unit, uint32 keys_availability_stage_info_idx_0, uint32 from_idx, uint32 nof_elements, dnx_field_key_alloc_instruction_t value);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_structure_is_valid_set
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_structure_is_valid_set_cb)(
    int unit, uint32 keys_availability_stage_info_idx_0, uint32 keys_availability_group_info_idx_0, uint8 structure_is_valid);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_structure_is_valid_get
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_structure_is_valid_get_cb)(
    int unit, uint32 keys_availability_stage_info_idx_0, uint32 keys_availability_group_info_idx_0, uint8 *structure_is_valid);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_nof_available_keys_set
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_nof_available_keys_set_cb)(
    int unit, uint32 keys_availability_stage_info_idx_0, uint32 keys_availability_group_info_idx_0, uint8 nof_available_keys);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_nof_available_keys_get
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_nof_available_keys_get_cb)(
    int unit, uint32 keys_availability_stage_info_idx_0, uint32 keys_availability_group_info_idx_0, uint8 *nof_available_keys);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_first_available_key_set
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_first_available_key_set_cb)(
    int unit, uint32 keys_availability_stage_info_idx_0, uint32 keys_availability_group_info_idx_0, uint8 first_available_key);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_first_available_key_get
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_first_available_key_get_cb)(
    int unit, uint32 keys_availability_stage_info_idx_0, uint32 keys_availability_group_info_idx_0, uint8 *first_available_key);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_supports_bitmap_allocation_set
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_supports_bitmap_allocation_set_cb)(
    int unit, uint32 keys_availability_stage_info_idx_0, uint32 keys_availability_group_info_idx_0, uint8 supports_bitmap_allocation);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_supports_bitmap_allocation_get
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_supports_bitmap_allocation_get_cb)(
    int unit, uint32 keys_availability_stage_info_idx_0, uint32 keys_availability_group_info_idx_0, uint8 *supports_bitmap_allocation);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_nof_available_keys_on_stage_set
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_nof_available_keys_on_stage_set_cb)(
    int unit, uint32 keys_availability_stage_info_idx_0, uint8 nof_available_keys_on_stage);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_nof_available_keys_on_stage_get
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_nof_available_keys_on_stage_get_cb)(
    int unit, uint32 keys_availability_stage_info_idx_0, uint8 *nof_available_keys_on_stage);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_first_available_key_on_stage_set
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_first_available_key_on_stage_set_cb)(
    int unit, uint32 keys_availability_stage_info_idx_0, uint8 first_available_key_on_stage);

/**
 * implemented by: dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_first_available_key_on_stage_get
 */
typedef int (*dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_first_available_key_on_stage_get_cb)(
    int unit, uint32 keys_availability_stage_info_idx_0, uint8 *first_available_key_on_stage);

/*
 * STRUCTs
 */

/**
 * This structure holds the access functions for the variable key_occupation_state
 */
typedef struct {
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_key_occupation_state_set_cb set;
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_key_occupation_state_get_cb get;
} dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_key_occupation_state_cbs;

/**
 * This structure holds the access functions for the variable key_field_group_type
 */
typedef struct {
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_key_field_group_type_set_cb set;
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_key_field_group_type_get_cb get;
} dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_key_field_group_type_cbs;

/**
 * This structure holds the access functions for the variable key_allocation_id
 */
typedef struct {
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_key_allocation_id_set_cb set;
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_key_allocation_id_get_cb get;
} dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_key_allocation_id_cbs;

/**
 * This structure holds the access functions for the variable bit_range_key_occ_bmp
 */
typedef struct {
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_key_occ_bmp_set_cb set;
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_key_occ_bmp_get_cb get;
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_key_occ_bmp_alloc_cb alloc;
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_key_occ_bmp_create_cb create;
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_key_occ_bmp_allocate_several_cb allocate_several;
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_key_occ_bmp_free_several_cb free_several;
} dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_key_occ_bmp_cbs;

/**
 * This structure holds the access functions for the variable num_bit_ranges
 */
typedef struct {
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_num_bit_ranges_set_cb set;
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_num_bit_ranges_get_cb get;
} dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_num_bit_ranges_cbs;

/**
 * This structure holds the access functions for the variable is_half_key_range_occupied
 */
typedef struct {
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_is_half_key_range_occupied_set_cb set;
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_is_half_key_range_occupied_get_cb get;
} dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_is_half_key_range_occupied_cbs;

/**
 * This structure holds the access functions for the variable bit_range_size
 */
typedef struct {
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_desc_bit_range_size_set_cb set;
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_desc_bit_range_size_get_cb get;
} dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_desc_bit_range_size_cbs;

/**
 * This structure holds the access functions for the variable fg_type
 */
typedef struct {
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_desc_fg_type_set_cb set;
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_desc_fg_type_get_cb get;
} dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_desc_fg_type_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_key_bit_range_detail_t
 */
typedef struct {
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_desc_range_read_cb range_read;
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_desc_range_write_cb range_write;
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_desc_range_fill_cb range_fill;
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_desc_alloc_cb alloc;
    /**
     * Access struct for bit_range_size
     */
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_desc_bit_range_size_cbs bit_range_size;
    /**
     * Access struct for fg_type
     */
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_desc_fg_type_cbs fg_type;
} dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_desc_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_key_alloc_detail_t
 */
typedef struct {
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_alloc_cb alloc;
    /**
     * Access struct for key_occupation_state
     */
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_key_occupation_state_cbs key_occupation_state;
    /**
     * Access struct for key_field_group_type
     */
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_key_field_group_type_cbs key_field_group_type;
    /**
     * Access struct for key_allocation_id
     */
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_key_allocation_id_cbs key_allocation_id;
    /**
     * Access struct for bit_range_key_occ_bmp
     */
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_key_occ_bmp_cbs bit_range_key_occ_bmp;
    /**
     * Access struct for num_bit_ranges
     */
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_num_bit_ranges_cbs num_bit_ranges;
    /**
     * Access struct for is_half_key_range_occupied
     */
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_is_half_key_range_occupied_cbs is_half_key_range_occupied;
    /**
     * Access struct for bit_range_desc
     */
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_bit_range_desc_cbs bit_range_desc;
} dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_cbs;

/**
 * This structure holds the access functions for the variable key_occupation_nof
 */
typedef struct {
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_nof_set_cb set;
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_nof_get_cb get;
} dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_nof_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_key_alloc_info_t
 */
typedef struct {
    /**
     * Access struct for key_occupation
     */
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_cbs key_occupation;
    /**
     * Access struct for key_occupation_nof
     */
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_key_occupation_nof_cbs key_occupation_nof;
} dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_cbs;

/**
 * This structure holds the access functions for the variable key_on_stage_supports_bitmap_allocation
 */
typedef struct {
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_on_stage_supports_bitmap_allocation_set_cb set;
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_on_stage_supports_bitmap_allocation_get_cb get;
} dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_on_stage_supports_bitmap_allocation_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_key_in_stage_alloc_info_t
 */
typedef struct {
    /**
     * Access struct for key_stage_prog_occupation
     */
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_stage_prog_occupation_cbs key_stage_prog_occupation;
    /**
     * Access struct for key_on_stage_supports_bitmap_allocation
     */
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_key_on_stage_supports_bitmap_allocation_cbs key_on_stage_supports_bitmap_allocation;
} dnx_field_keys_per_stage_allocation_sw_keys_per_stage_cbs;

/**
 * This structure holds the access functions for the variable structure_is_valid
 */
typedef struct {
    dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_structure_is_valid_set_cb set;
    dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_structure_is_valid_get_cb get;
} dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_structure_is_valid_cbs;

/**
 * This structure holds the access functions for the variable nof_available_keys
 */
typedef struct {
    dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_nof_available_keys_set_cb set;
    dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_nof_available_keys_get_cb get;
} dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_nof_available_keys_cbs;

/**
 * This structure holds the access functions for the variable first_available_key
 */
typedef struct {
    dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_first_available_key_set_cb set;
    dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_first_available_key_get_cb get;
} dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_first_available_key_cbs;

/**
 * This structure holds the access functions for the variable supports_bitmap_allocation
 */
typedef struct {
    dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_supports_bitmap_allocation_set_cb set;
    dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_supports_bitmap_allocation_get_cb get;
} dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_supports_bitmap_allocation_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_key_alloc_instruction_t
 */
typedef struct {
    dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_set_cb set;
    dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_get_cb get;
    dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_range_read_cb range_read;
    dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_range_write_cb range_write;
    dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_range_fill_cb range_fill;
    /**
     * Access struct for structure_is_valid
     */
    dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_structure_is_valid_cbs structure_is_valid;
    /**
     * Access struct for nof_available_keys
     */
    dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_nof_available_keys_cbs nof_available_keys;
    /**
     * Access struct for first_available_key
     */
    dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_first_available_key_cbs first_available_key;
    /**
     * Access struct for supports_bitmap_allocation
     */
    dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_supports_bitmap_allocation_cbs supports_bitmap_allocation;
} dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_cbs;

/**
 * This structure holds the access functions for the variable nof_available_keys_on_stage
 */
typedef struct {
    dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_nof_available_keys_on_stage_set_cb set;
    dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_nof_available_keys_on_stage_get_cb get;
} dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_nof_available_keys_on_stage_cbs;

/**
 * This structure holds the access functions for the variable first_available_key_on_stage
 */
typedef struct {
    dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_first_available_key_on_stage_set_cb set;
    dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_first_available_key_on_stage_get_cb get;
} dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_first_available_key_on_stage_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_key_alloc_group_instruction_t
 */
typedef struct {
    dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_range_read_cb range_read;
    dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_range_write_cb range_write;
    dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_range_fill_cb range_fill;
    /**
     * Access struct for keys_availability_group_info
     */
    dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_keys_availability_group_info_cbs keys_availability_group_info;
    /**
     * Access struct for nof_available_keys_on_stage
     */
    dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_nof_available_keys_on_stage_cbs nof_available_keys_on_stage;
    /**
     * Access struct for first_available_key_on_stage
     */
    dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_first_available_key_on_stage_cbs first_available_key_on_stage;
} dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_key_alloc_stage_instruction_info_t
 */
typedef struct {
    /**
     * Access struct for keys_availability_stage_info
     */
    dnx_field_keys_per_stage_allocation_sw_keys_availability_keys_availability_stage_info_cbs keys_availability_stage_info;
} dnx_field_keys_per_stage_allocation_sw_keys_availability_cbs;

/**
 * This structure holds the access functions for the variable dnx_field_keys_per_stage_allocation_t
 */
typedef struct {
    dnx_field_keys_per_stage_allocation_sw_is_init_cb is_init;
    dnx_field_keys_per_stage_allocation_sw_init_cb init;
    /**
     * Access struct for keys_per_stage
     */
    dnx_field_keys_per_stage_allocation_sw_keys_per_stage_cbs keys_per_stage;
    /**
     * Access struct for keys_availability
     */
    dnx_field_keys_per_stage_allocation_sw_keys_availability_cbs keys_availability;
} dnx_field_keys_per_stage_allocation_sw_cbs;

/*
 * Global Variables
 */

/*
 * FUNCTIONs
 */

/*
 *
 * get_name function for enum type dnx_field_key_half_occupation_state_e
 * AUTO-GENERATED - DO NOT MODIFY
 */
const char *
dnx_field_key_half_occupation_state_e_get_name(dnx_field_key_half_occupation_state_e value);


/*
 * Global Variables
 */

extern dnx_field_keys_per_stage_allocation_sw_cbs dnx_field_keys_per_stage_allocation_sw;

#endif /* __DNX_ALGO_FIELD_KEY_ALLOC_ACCESS_H__ */
