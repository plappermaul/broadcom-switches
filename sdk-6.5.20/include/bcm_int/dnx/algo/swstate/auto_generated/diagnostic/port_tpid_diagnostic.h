/** \file algo/swstate/auto_generated/diagnostic/port_tpid_diagnostic.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef __PORT_TPID_DIAGNOSTIC_H__
#define __PORT_TPID_DIAGNOSTIC_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <soc/dnxc/swstate/dnx_sw_state_dump.h>
#include <soc/dnxc/swstate/dnx_sw_state_size.h>
#include <soc/dnxc/swstate/dnx_sw_state_diagnostic_operation_counters.h>
#include <bcm_int/dnx/algo/swstate/auto_generated/types/port_tpid_types.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr_internal.h>
#include <include/bcm/types.h>
#include <include/soc/dnx/dbal/auto_generated/dbal_defines_fields.h>
#include <include/soc/dnx/dnx_data/auto_generated/dnx_data_vlan.h>
#include <soc/dnxc/swstate/types/sw_state_bitmap.h>
#if defined(DNX_SW_STATE_DIAGNOSTIC)
typedef enum {
    PORT_TPID_DB_INFO,
    PORT_TPID_DB_NATIVE_AC_LLVP_TEMPLATES_INFO,
    PORT_TPID_DB_NATIVE_AC_LLVP_TEMPLATES_INGRESS_INFO,
    PORT_TPID_DB_NATIVE_AC_LLVP_TEMPLATES_INGRESS_LLVP_TEMPLATE_INFO,
    PORT_TPID_DB_NATIVE_AC_LLVP_TEMPLATES_EGRESS_INFO,
    PORT_TPID_DB_NATIVE_AC_LLVP_TEMPLATES_EGRESS_LLVP_TEMPLATE_INFO,
    PORT_TPID_DB_EGRESS_IP_TUNNEL_LLVP_TEMPLATE_INFO,
    PORT_TPID_DB_EGRESS_IP_TUNNEL_LLVP_TEMPLATE_LLVP_TEMPLATE_INFO,
    PORT_TPID_DB_TAG_STRUCT_ALLOCATION_INFO,
    PORT_TPID_DB_TAG_STRUCT_ALLOCATION_BCM_TAG_FORMAT_CLASS_ID_INGRESS_INFO,
    PORT_TPID_DB_TAG_STRUCT_ALLOCATION_BCM_TAG_FORMAT_CLASS_ID_EGRESS_INFO,
    PORT_TPID_DB_TAG_STRUCT_ALLOCATION_BCM_TAG_FORMAT_CLASS_ID_SYMMETRIC_INFO,
    PORT_TPID_DB_TAG_STRUCT_ALLOCATION_BCM_TAG_FORMAT_CLASS_ID_SYMMETRIC_INDICATION_INFO,
    PORT_TPID_DB_TAG_STRUCT_ALLOCATION_INCOMING_TAG_STRUCTURE_INGRESS_INFO,
    PORT_TPID_DB_TAG_STRUCT_ALLOCATION_INCOMING_TAG_STRUCTURE_EGRESS_INFO,
    PORT_TPID_DB_INFO_NOF_ENTRIES
} sw_state_port_tpid_db_layout_e;


extern dnx_sw_state_diagnostic_info_t port_tpid_db_info[SOC_MAX_NUM_DEVICES][PORT_TPID_DB_INFO_NOF_ENTRIES];

extern const char* port_tpid_db_layout_str[PORT_TPID_DB_INFO_NOF_ENTRIES];
int port_tpid_db_dump(
    int unit, dnx_sw_state_dump_filters_t filters);

int port_tpid_db_native_ac_llvp_templates_dump(
    int unit, dnx_sw_state_dump_filters_t filters);

int port_tpid_db_native_ac_llvp_templates_ingress_dump(
    int unit, dnx_sw_state_dump_filters_t filters);

int port_tpid_db_native_ac_llvp_templates_ingress_llvp_template_dump(
    int unit, int llvp_template_idx_0, dnx_sw_state_dump_filters_t filters);

int port_tpid_db_native_ac_llvp_templates_egress_dump(
    int unit, dnx_sw_state_dump_filters_t filters);

int port_tpid_db_native_ac_llvp_templates_egress_llvp_template_dump(
    int unit, int llvp_template_idx_0, dnx_sw_state_dump_filters_t filters);

int port_tpid_db_egress_ip_tunnel_llvp_template_dump(
    int unit, dnx_sw_state_dump_filters_t filters);

int port_tpid_db_egress_ip_tunnel_llvp_template_llvp_template_dump(
    int unit, int llvp_template_idx_0, dnx_sw_state_dump_filters_t filters);

int port_tpid_db_tag_struct_allocation_dump(
    int unit, dnx_sw_state_dump_filters_t filters);

int port_tpid_db_tag_struct_allocation_bcm_tag_format_class_id_ingress_dump(
    int unit, dnx_sw_state_dump_filters_t filters);

int port_tpid_db_tag_struct_allocation_bcm_tag_format_class_id_egress_dump(
    int unit, dnx_sw_state_dump_filters_t filters);

int port_tpid_db_tag_struct_allocation_bcm_tag_format_class_id_symmetric_dump(
    int unit, dnx_sw_state_dump_filters_t filters);

int port_tpid_db_tag_struct_allocation_bcm_tag_format_class_id_symmetric_indication_dump(
    int unit, int bcm_tag_format_class_id_symmetric_indication_idx_0, dnx_sw_state_dump_filters_t filters);

int port_tpid_db_tag_struct_allocation_incoming_tag_structure_ingress_dump(
    int unit, dnx_sw_state_dump_filters_t filters);

int port_tpid_db_tag_struct_allocation_incoming_tag_structure_egress_dump(
    int unit, dnx_sw_state_dump_filters_t filters);

#endif /* DNX_SW_STATE_DIAGNOSTIC */

#endif /* __PORT_TPID_DIAGNOSTIC_H__ */
