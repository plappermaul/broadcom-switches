/** \file algo/swstate/auto_generated/diagnostic/dnx_algo_flexe_general_diagnostic.h
 *
 * sw state functions declarations
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef __DNX_ALGO_FLEXE_GENERAL_DIAGNOSTIC_H__
#define __DNX_ALGO_FLEXE_GENERAL_DIAGNOSTIC_H__

#ifdef BCM_DNX_SUPPORT
#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <soc/dnxc/swstate/dnx_sw_state_dump.h>
#include <soc/dnxc/swstate/dnx_sw_state_size.h>
#include <soc/dnxc/swstate/dnx_sw_state_diagnostic_operation_counters.h>
#include <bcm_int/dnx/algo/swstate/auto_generated/types/dnx_algo_flexe_general_types.h>
#include <bcm/port.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr_internal.h>
#include <soc/dnx/dnx_data/auto_generated/dnx_data_nif.h>
#include <soc/dnxc/swstate/types/sw_state_mutex.h>
#include <soc/dnxc/swstate/types/sw_state_pbmp.h>
#if defined(DNX_SW_STATE_DIAGNOSTIC)
typedef enum {
    DNX_ALGO_FLEXE_GENERAL_DB_INFO,
    DNX_ALGO_FLEXE_GENERAL_DB_RESOURCE_ALLOC_INFO,
    DNX_ALGO_FLEXE_GENERAL_DB_RESOURCE_ALLOC_CLIENT_CHANNEL_INFO,
    DNX_ALGO_FLEXE_GENERAL_DB_RESOURCE_ALLOC_MAC_CHANNEL_INFO,
    DNX_ALGO_FLEXE_GENERAL_DB_RESOURCE_ALLOC_SAR_CHANNEL_INFO,
    DNX_ALGO_FLEXE_GENERAL_DB_RESOURCE_ALLOC_FLEXE_CORE_PORT_INFO,
    DNX_ALGO_FLEXE_GENERAL_DB_RESOURCE_ALLOC_RMC_ID_INFO,
    DNX_ALGO_FLEXE_GENERAL_DB_GROUP_INFO_INFO,
    DNX_ALGO_FLEXE_GENERAL_DB_GROUP_INFO_VALID_INFO,
    DNX_ALGO_FLEXE_GENERAL_DB_GROUP_INFO_GROUP_ID_INFO,
    DNX_ALGO_FLEXE_GENERAL_DB_GROUP_INFO_PHY_PORTS_INFO,
    DNX_ALGO_FLEXE_GENERAL_DB_GROUP_INFO_DEMUX_CAL_SLOTS_INFO,
    DNX_ALGO_FLEXE_GENERAL_DB_GROUP_INFO_MUX_CAL_SLOTS_INFO,
    DNX_ALGO_FLEXE_GENERAL_DB_GROUP_INFO_IS_BYPASS_INFO,
    DNX_ALGO_FLEXE_GENERAL_DB_GROUP_INFO_CAL_SLOTS_UNALIGNED_INFO,
    DNX_ALGO_FLEXE_GENERAL_DB_FIFO_LINK_LIST_INFO,
    DNX_ALGO_FLEXE_GENERAL_DB_FLEXE_CORE_IS_ACTIVE_INFO,
    DNX_ALGO_FLEXE_GENERAL_DB_TINY_MAC_ACCESS_MUTEX_INFO,
    DNX_ALGO_FLEXE_GENERAL_DB_INFO_NOF_ENTRIES
} sw_state_dnx_algo_flexe_general_db_layout_e;


extern dnx_sw_state_diagnostic_info_t dnx_algo_flexe_general_db_info[SOC_MAX_NUM_DEVICES][DNX_ALGO_FLEXE_GENERAL_DB_INFO_NOF_ENTRIES];

extern const char* dnx_algo_flexe_general_db_layout_str[DNX_ALGO_FLEXE_GENERAL_DB_INFO_NOF_ENTRIES];
int dnx_algo_flexe_general_db_dump(
    int unit, dnx_sw_state_dump_filters_t filters);

int dnx_algo_flexe_general_db_resource_alloc_dump(
    int unit, dnx_sw_state_dump_filters_t filters);

int dnx_algo_flexe_general_db_resource_alloc_client_channel_dump(
    int unit, dnx_sw_state_dump_filters_t filters);

int dnx_algo_flexe_general_db_resource_alloc_mac_channel_dump(
    int unit, dnx_sw_state_dump_filters_t filters);

int dnx_algo_flexe_general_db_resource_alloc_sar_channel_dump(
    int unit, dnx_sw_state_dump_filters_t filters);

int dnx_algo_flexe_general_db_resource_alloc_flexe_core_port_dump(
    int unit, dnx_sw_state_dump_filters_t filters);

int dnx_algo_flexe_general_db_resource_alloc_rmc_id_dump(
    int unit, dnx_sw_state_dump_filters_t filters);

int dnx_algo_flexe_general_db_group_info_dump(
    int unit, int group_info_idx_0, dnx_sw_state_dump_filters_t filters);

int dnx_algo_flexe_general_db_group_info_valid_dump(
    int unit, int group_info_idx_0, dnx_sw_state_dump_filters_t filters);

int dnx_algo_flexe_general_db_group_info_group_id_dump(
    int unit, int group_info_idx_0, dnx_sw_state_dump_filters_t filters);

int dnx_algo_flexe_general_db_group_info_phy_ports_dump(
    int unit, int group_info_idx_0, dnx_sw_state_dump_filters_t filters);

int dnx_algo_flexe_general_db_group_info_demux_cal_slots_dump(
    int unit, int group_info_idx_0, int demux_cal_slots_idx_0, int demux_cal_slots_idx_1, dnx_sw_state_dump_filters_t filters);

int dnx_algo_flexe_general_db_group_info_mux_cal_slots_dump(
    int unit, int group_info_idx_0, int mux_cal_slots_idx_0, int mux_cal_slots_idx_1, dnx_sw_state_dump_filters_t filters);

int dnx_algo_flexe_general_db_group_info_is_bypass_dump(
    int unit, int group_info_idx_0, dnx_sw_state_dump_filters_t filters);

int dnx_algo_flexe_general_db_group_info_cal_slots_unaligned_dump(
    int unit, int group_info_idx_0, dnx_sw_state_dump_filters_t filters);

int dnx_algo_flexe_general_db_fifo_link_list_dump(
    int unit, int fifo_link_list_idx_0, int fifo_link_list_idx_1, dnx_sw_state_dump_filters_t filters);

int dnx_algo_flexe_general_db_flexe_core_is_active_dump(
    int unit, dnx_sw_state_dump_filters_t filters);

int dnx_algo_flexe_general_db_tiny_mac_access_mutex_dump(
    int unit, dnx_sw_state_dump_filters_t filters);

#endif /* DNX_SW_STATE_DIAGNOSTIC */
#endif /* BCM_DNX_SUPPORT*/ 

#endif /* __DNX_ALGO_FLEXE_GENERAL_DIAGNOSTIC_H__ */
