/** \file algo/swstate/auto_generated/types/vlan_types.h
 *
 * sw state types (structs/enums/typedefs)
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 */
/*
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef __VLAN_TYPES_H__
#define __VLAN_TYPES_H__

#include <soc/dnxc/swstate/dnxc_sw_state_h_includes.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr.h>
#include <bcm_int/dnx/algo/res_mngr/res_mngr_internal.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr.h>
#include <bcm_int/dnx/algo/template_mngr/template_mngr_internal.h>
#include <bcm_int/dnx/algo/vlan/algo_vlan.h>
#include <include/bcm/types.h>
/*
 * MACROs
 */

#define VLAN_RANGE_PROFILE_NOF 32

/*
 * STRUCTs
 */

/**
 * A struct used to hold default vlan properties
 */
typedef struct {
    bcm_vlan_t default_vid;
} vlan_info_t;

/**
 * A struct used to hold vlan range
 */
typedef struct {
    bcm_vlan_t lower;
    bcm_vlan_t upper;
} vlan_range_t;

/**
 * hold 32 vlan ranges per profile
 */
typedef struct {
    vlan_range_t vlan_range[VLAN_RANGE_PROFILE_NOF];
} vlan_range_profile_template_t;

typedef struct {
    vlan_info_t vlan_info;
    /**
     * VSI
     */
    dnx_algo_res_t vsi;
    /**
     * ACTION_ID_INGRESS
     */
    dnx_algo_res_t action_id_ingress;
    /**
     * ACTION_ID_EGRESS
     */
    dnx_algo_res_t action_id_egress;
    /**
     * VLAN-PORT INGRESS VIRTUAL GPORT ID
     */
    dnx_algo_res_t vlan_port_ingress_virtual_gport_id;
    /**
     * VLAN-PORT EGRESS VIRTUAL GPORT ID
     */
    dnx_algo_res_t vlan_port_egress_virtual_gport_id;
    /**
     * Outer vlan range profile template
     */
    dnx_algo_template_t vlan_range_outer_profile;
    /**
     * Inner vlan range profile template
     */
    dnx_algo_template_t vlan_range_inner_profile;
} vlan_unit_state_t;


#endif /* __VLAN_TYPES_H__ */
