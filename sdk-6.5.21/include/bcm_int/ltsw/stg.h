/*
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef BCMI_LTSW_STG_H
#define BCMI_LTSW_STG_H

#include <bcm/types.h>

#include <sal/sal_types.h>

/*!
 * \brief Directions of STG check, which are used to set STG check state on a given port.
 */
/*! STG check in IPIPE. */
#define BCMI_LTSW_STG_CHK_ING (1 << 0)

/*! Egress STG check in IPIPE. */
#define BCMI_LTSW_STG_CHK_ING_EGR (1 << 1)

/*! STG check in EPIPE. */
#define BCMI_LTSW_STG_CHK_EGR (1 << 2)

/*!
 * \brief Get STG for a specified VLAN.
 *
 * \param [in] unit Unit Number.
 * \param [in] vid VLAN/VPN ID.
 * \param [out] stg STG index.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
bcmi_ltsw_stg_vlan_get(
    int unit,
    bcm_vlan_t vid,
    bcm_stg_t *stg);

/*!
 * \brief Remove a VLAN from STG when the VLAN is destroyed.
 *
 * \param [in] unit Unit Number.
 * \param [in] vid VLAN/VPN ID.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
bcmi_ltsw_stg_vlan_destroy(
    int unit,
    bcm_vlan_t vid);

/*!
 * \brief De-initialize the STG module.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
bcmi_ltsw_stg_detach(int unit);

/*!
 * \brief Set STP state on all STGs containing the specified port.
 *
 * \param [in] unit Unit Number.
 * \param [in] port Port Number.
 * \param [in] stp_state Spanning Tree State of port.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
bcmi_ltsw_stg_stp_set_all(
    int unit,
    bcm_port_t port,
    bcm_port_t stp_state);

/*!
 * \brief Set STP state for a port in STG containing the specified VLAN or VPN.
 *
 * \param [in] unit Unit Number.
 * \param [in] vid VLAN ID or VPN ID.
 * \param [in] port Port Number.
 * \param [in] stp_state Spanning Tree State of port.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
bcmi_ltsw_stg_vlan_stp_set(
    int unit,
    bcm_vlan_t vid,
    bcm_port_t port,
    int stp_state);

/*!
 * \brief Get STP state for a port in STG containing the specified VLAN or VPN.
 *
 * \param [in] unit Unit Number.
 * \param [in] vid VLAN ID or VPN ID.
 * \param [in] port Port Number.
 * \param [out] stp_state Spanning Tree State of port.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
bcmi_ltsw_stg_vlan_stp_get(
    int unit,
    bcm_vlan_t vid,
    bcm_port_t port,
    int *stp_state);

/*!
 * \brief Set port STP state for default VLAN to FORWARDING.
 *
 * \param [in] unit Unit Number.
 * \param [in] port Port Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
bcmi_ltsw_stg_port_attach(
    int unit,
    bcm_port_t port);

/*!
 * \brief Set port STP state for default VLAN to DISABLE.
 *
 * \param [in] unit Unit Number.
 * \param [in] port Port Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
bcmi_ltsw_stg_port_detach(
    int unit,
    bcm_port_t port);

/*!
 * \brief Set the state of STG check on a given port.
 *
 * \param [in] unit Unit Number.
 * \param [in] port Port Number.
 * \param [in] disable Disable or enable.
 * \param [in] flags Direction flags.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
bcmi_ltsw_stg_port_check_set(
    int unit,
    bcm_port_t port,
    int disable,
    uint16_t flags);

/*!
 * \brief Display STG software structure information.
 *
 * \param [in] unit Unit Number.
 */
extern void
bcmi_ltsw_stg_sw_dump(int unit);

#endif /* BCMI_LTSW_STG_H */
