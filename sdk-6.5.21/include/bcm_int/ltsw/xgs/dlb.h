/*
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef BCMINT_LTSW_XGS_DLB_H
#define BCMINT_LTSW_XGS_DLB_H

#include <bcm/types.h>

#include <bcm_int/ltsw/dlb.h>
#include <bcm_int/ltsw/generated/dlb_ha.h>

#include <sal/sal_types.h>

/*!
 * \brief Initialize the dlb module.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_init(int unit);

/*!
 * \brief De-init the dlb module.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_deinit(int unit);

/*!
 * \brief Initialize the dlb module.
 *
 * \param [in] unit Unit Number.
 * \param [in] dlb_type Dynamic Load Balance type.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_type_init(
    int unit,
    bcmi_ltsw_dlb_type_t dlb_type);

/*!
 * \brief De-init the dlb module.
 *
 * \param [in] unit Unit Number.
 * \param [in] dlb_type Dynamic Load Balance type.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_type_deinit(
    int unit,
    bcmi_ltsw_dlb_type_t dlb_type);

/*!
 * \brief Validate DLB configurations.
 *
 * \param [in] unit Unit Number.
 * \param [in] dlb_type Dynamic Load Balance type.
 * \param [in] dlb_config DLB configurations.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_config_validate(
    int unit,
    bcmi_ltsw_dlb_type_t dlb_type,
    bcmi_ltsw_dlb_config_t *dlb_config);

/*!
 * \brief Set configurations of a DLB group.
 *
 * \param [in] unit Unit Number.
 * \param [in] dlb_type Dynamic Load Balance type.
 * \param [in] dlb_id Dynamic Load Balance Id.
 * \param [in] dlb_config DLB configurations.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_config_set(
    int unit,
    bcmi_ltsw_dlb_type_t dlb_type,
    bcmi_ltsw_dlb_id_t dlb_id,
    bcmi_ltsw_dlb_config_t *dlb_config);

/*!
 * \brief Get configurations of a DLB group.
 *
 * \param [in] unit Unit Number.
 * \param [in] dlb_type Dynamic Load Balance type.
 * \param [in] dlb_id Dynamic Load Balance Id.
 * \param [out] dlb_config DLB configurations.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_config_get(
    int unit,
    bcmi_ltsw_dlb_type_t dlb_type,
    bcmi_ltsw_dlb_id_t dlb_id,
    bcmi_ltsw_dlb_config_t *dlb_config);

/*!
 * \brief Clear configurations of a DLB group.
 *
 * \param [in] unit Unit Number.
 * \param [in] dlb_type Dynamic Load Balance type.
 * \param [in] dlb_id Dynamic Load Balance Id.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_config_clear(
    int unit,
    bcmi_ltsw_dlb_type_t dlb_type,
    bcmi_ltsw_dlb_id_t dlb_id);

/*!
 * \brief Validate DLB monitor configurations.
 *
 * \param [in] unit Unit Number.
 * \param [in] dlb_type Dynamic Load Balance type.
 * \param [in] monitor DLB monitoring configurations.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_monitor_validate(
    int unit,
    bcmi_ltsw_dlb_type_t dlb_type,
    bcmi_ltsw_dlb_monitor_t *monitor);

/*!
 * \brief Set DLB monitor.
 *
 * \param [in] unit Unit Number.
 * \param [in] dlb_type Dynamic Load Balance type.
 * \param [in] dlb_id Dynamic Load Balance Id.
 * \param [in] monitor DLB monitoring configurations.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_monitor_set(
    int unit,
    bcmi_ltsw_dlb_type_t dlb_type,
    bcmi_ltsw_dlb_id_t dlb_id,
    bcmi_ltsw_dlb_monitor_t *monitor);

/*!
 * \brief Get DLB monitor configurations.
 *
 * \param [in] unit Unit Number.
 * \param [in] dlb_type Dynamic Load Balance type.
 * \param [in] dlb_id Dynamic Load Balance Id.
 * \param [out] monitor DLB monitoring configurations.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_monitor_get(
    int unit,
    bcmi_ltsw_dlb_type_t dlb_type,
    bcmi_ltsw_dlb_id_t dlb_id,
    bcmi_ltsw_dlb_monitor_t *monitor);

/*!
 * \brief Clear DLB monitor configurations.
 *
 * \param [in] unit Unit Number.
 * \param [in] dlb_type Dynamic Load Balance type.
 * \param [in] dlb_id Dynamic Load Balance Id.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_monitor_clear(
    int unit,
    bcmi_ltsw_dlb_type_t dlb_type,
    bcmi_ltsw_dlb_id_t dlb_id);

/*!
 * \brief Format DLB member quality map.
 *
 * \param [in] unit Unit Number.
 * \param [in] quality_map_profile DLB member quality map profile structure.
 * \param [out] quality_map_profile_format Format output for DLB quality map profile.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_member_quality_map_profile_format(
    int unit,
    bcmint_dlb_quality_map_profile_t *quality_map_profile,
    uint32_t *quality_map_profile_format);

/*!
 * \brief Traslate the qualify map profile to id.
 *
 * \param [in] unit Unit Number.
 * \param [in] dlb_type Dynamic Load Balance type.
 * \param [in] quality_map_profile_count DLB member quality map profile count.
 * \param [in] quality_map_profile DLB member quality map profile structure.
 * \param [in] profile_index Logical DLB quality map profile index.
 * \param [out] quality_map_id DLB quality map Id.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_member_quality_map_profile2id(
    int unit,
    bcmi_ltsw_dlb_type_t dlb_type,
    int quality_map_profile_count,
    bcmint_dlb_quality_map_profile_t *quality_map_profile,
    int profile_index,
    int *quality_map_id);

/*!
 * \brief Traslate the qualify map id to profile.
 *
 * \param [in] unit Unit Number.
 * \param [in] dlb_type Dynamic Load Balance type.
 * \param [in] quality_map_profile_count DLB member quality map profile count.
 * \param [in] quality_map_profile DLB member quality map profile structure.
 * \param [in] quality_map_id DLB quality map Id.
 * \param [out] profile_index Logical DLB quality map profile index.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_member_quality_map_id2profile(
    int unit,
    bcmi_ltsw_dlb_type_t dlb_type,
    int quality_map_profile_count,
    bcmint_dlb_quality_map_profile_t *quality_map_profile,
    int quality_map_id,
    int *profile_index);

/*!
 * \brief Set the DLB member quality map table.
 *
 * \param [in] unit Unit Number.
 * \param [in] dlb_type Dynamic Load Balance type.
 * \param [in] quality_map_id DLB quality map Id.
 * \param [in] load_percent Dlb loading percent.
 * \param [in] qsize_percent Dlb queue size percent.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_member_quality_map_set(
    int unit,
    bcmi_ltsw_dlb_type_t dlb_type,
    int quality_map_id,
    int load_percent,
    int qsize_percent);

/*!
 * \brief Clear the qualify map table.
 *
 * \param [in] unit Unit Number.
 * \param [in] dlb_type Dynamic Load Balance type.
 * \param [in] quality_map_id DLB quality map Id.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_member_quality_map_clear(
    int unit,
    bcmi_ltsw_dlb_type_t dlb_type,
    int quality_map_id);

/*!
 * \brief Get the DLB member port bitmap for warmboot.
 *
 * \param [in] unit Unit Number.
 * \param [out] pbmp DLB member port bitmap.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_member_pbmp_get(
    int unit,
    bcm_pbmp_t *pbmp);

/*!
 * \brief Validate DLB member port attributes.
 *
 * \param [in] unit Unit Number.
 * \param [in] dlb_type Dynamic Load Balance type.
 * \param [in] attribute Type-based DLB member port attribute.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_member_attribute_validate(
    int unit,
    bcmi_ltsw_dlb_type_t dlb_type,
    bcmi_ltsw_dlb_member_attribute_t *attribute);

/*!
 * \brief Set DLB member port attributes.
 *
 * \param [in] unit Unit Number.
 * \param [in] port Port Number.
 * \param [in] dlb_type Dynamic Load Balance type.
 * \param [in] scaling_factor Scaling factor.
 * \param [in] quality_map_id DLB member quality map profile Id.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_member_attribute_set(
    int unit,
    bcm_port_t port,
    bcmi_ltsw_dlb_type_t dlb_type,
    int scaling_factor,
    int quality_map_id);

/*!
 * \brief Get DLB member port attributes.
 *
 * \param [in] unit Unit Number.
 * \param [in] port Port Number.
 * \param [in] dlb_type Dynamic Load Balance type.
 * \param [out] scaling_factor Scaling factor.
 * \param [out] quality_map_id DLB member quality map profile Id.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_member_attribute_get(
    int unit,
    bcm_port_t port,
    bcmi_ltsw_dlb_type_t dlb_type,
    int *scaling_factor,
    int *quality_map_id);

/*!
 * \brief Clear DLB member port attributes.
 *
 * \param [in] unit Unit Number.
 * \param [in] port Port Number.
 * \param [in] dlb_type Dynamic Load Balance type.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_member_attribute_clear(
    int unit,
    bcm_port_t port,
    bcmi_ltsw_dlb_type_t dlb_type);

/*!
 * \brief Set DLB member status.
 *
 * \param [in] unit Unit Number.
 * \param [in] port Port Number.
 * \param [in] dlb_type Dynamic Load Balance type.
 * \param [in] status Type-based DLB member status.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_member_status_set(
    int unit,
    bcm_port_t port,
    bcmi_ltsw_dlb_type_t dlb_type,
    int status);

/*!
 * \brief Get DLB member status.
 *
 * \param [in] unit Unit Number.
 * \param [in] port Port Number.
 * \param [in] dlb_type Dynamic Load Balance type.
 * \param [out] status Type-based DLB member status.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_member_status_get(
    int unit,
    bcm_port_t port,
    bcmi_ltsw_dlb_type_t dlb_type,
    int *status);

/*!
 * \brief Set DLB Eligibility Ethertype.
 *
 * \param [in] unit Unit Number.
 * \param [in] flags Flags.
 * \param [in] ethertype_count Ethertype array count.
 * \param [in] ethertype_array Ethertype array.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_ethertype_set(
    int unit,
    uint32_t flags,
    int ethertype_count,
    int *ethertype_array);

/*!
 * \brief Get DLB Eligibility Ethertype.
 *
 * \param [in] unit Unit Number.
 * \param [in] ethertype_count_max Max ethertype array count.
 * \param [out] flags Flags.
 * \param [out] ethertype_array Ethertype array.
 * \param [out] ethertype_count Actual ethertype array count.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_ethertype_get(
    int unit,
    int ethertype_count_max,
    uint32_t *flags,
    int *ethertype_array,
    int *ethertype_count);

/*!
 * \brief Validate the DLB controlling information value according to information.
 *
 * \param [in] unit Unit Number.
 * \param [in] dlb_type Dynamic Load Balance type.
 * \param [in] ctrl_info Dynamic Load Balance controlling information.
 * \param [in] type Dynamic Load Balance controlling type.
 * \param [in] value Type-based controlling value for DLB.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_control_info_value_validate(
    int unit,
    bcmi_ltsw_dlb_type_t dlb_type,
    bcmint_dlb_ctrl_info_t **ctrl_info,
    bcmi_ltsw_dlb_control_type_t type,
    uint64_t value);

/*!
 * \brief Set DLB controlling information with information.
 *
 * \param [in] unit Unit Number.
 * \param [in] dlb_type Dynamic Load Balance type.
 * \param [in] ctrl_info Dynamic Load Balance controlling information.
 * \param [in] type Dynamic Load Balance controlling type.
 * \param [in] value Type-based controlling value for DLB.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_control_info_set(
    int unit,
    bcmi_ltsw_dlb_type_t dlb_type,
    bcmint_dlb_ctrl_info_t **ctrl_info,
    bcmi_ltsw_dlb_control_type_t type,
    uint64_t value);

/*!
 * \brief Get DLB controlling information from information.
 *
 * \param [in] unit Unit Number.
 * \param [in] dlb_type Dynamic Load Balance type.
 * \param [in] ctrl_info Dynamic Load Balance controlling information.
 * \param [in] type Dynamic Load Balance controlling type.
 * \param [out] value Type-based controlling value for DLB.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_control_info_get(
    int unit,
    bcmi_ltsw_dlb_type_t dlb_type,
    bcmint_dlb_ctrl_info_t **ctrl_info,
    bcmi_ltsw_dlb_control_type_t type,
    uint64_t *value);

/*!
 * \brief Validate the DLB controlling type.
 *
 * \param [in] unit Unit Number.
 * \param [in] dlb_type Dynamic Load Balance type.
 * \param [in] type Dynamic Load Balance controlling type.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_control_type_validate(
    int unit,
    bcmi_ltsw_dlb_type_t dlb_type,
    bcmi_ltsw_dlb_control_type_t type);

/*!
 * \brief Validate the DLB controlling information value.
 *
 * \param [in] unit Unit Number.
 * \param [in] dlb_type Dynamic Load Balance type.
 * \param [in] type Dynamic Load Balance controlling type.
 * \param [in] value Type-based controlling value for DLB.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_control_value_validate(
    int unit,
    bcmi_ltsw_dlb_type_t dlb_type,
    bcmi_ltsw_dlb_control_type_t type,
    uint64_t value);

/*!
 * \brief Set DLB controlling information.
 *
 * \param [in] unit Unit Number.
 * \param [in] dlb_type Dynamic Load Balance type.
 * \param [in] type Dynamic Load Balance controlling type.
 * \param [in] value Type-based controlling value for DLB.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_control_set(
    int unit,
    bcmi_ltsw_dlb_type_t dlb_type,
    bcmi_ltsw_dlb_control_type_t type,
    uint64_t value);

/*!
 * \brief Get DLB controlling information.
 *
 * \param [in] unit Unit Number.
 * \param [in] dlb_type Dynamic Load Balance type.
 * \param [in] type Dynamic Load Balance controlling type.
 * \param [out] value Type-based controlling value for DLB.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_control_get(
    int unit,
    bcmi_ltsw_dlb_type_t dlb_type,
    bcmi_ltsw_dlb_control_type_t type,
    uint64_t *value);

/*!
 * \brief Set statistics for a DLB group.
 *
 * \param [in] unit Unit Number.
 * \param [in] dlb_type Dynamic Load Balance type.
 * \param [in] dlb_id Dynamic Load Balance Id.
 * \param [in] stat DLB configurations.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_stat_set(
    int unit,
    bcmi_ltsw_dlb_type_t dlb_type,
    bcmi_ltsw_dlb_id_t dlb_id,
    bcmi_ltsw_dlb_stat_t *stat);

/*!
 * \brief Get statistics for a DLB group.
 *
 * \param [in] unit Unit Number.
 * \param [in] dlb_type Dynamic Load Balance type.
 * \param [in] dlb_id Dynamic Load Balance Id.
 * \param [in] sync_mode sync from HW.
 * \param [out] stat DLB configurations.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_dlb_stat_get(
    int unit,
    bcmi_ltsw_dlb_type_t dlb_type,
    bcmi_ltsw_dlb_id_t dlb_id,
    bool sync_mode,
    bcmi_ltsw_dlb_stat_t *stat);

#endif /* BCMINT_LTSW_XGS_DLB_H */
