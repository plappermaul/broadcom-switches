/*
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef BCMINT_LTSW_XGS_LDH_H
#define BCMINT_LTSW_XGS_LDH_H

#include <sal/sal_types.h>

/*!
 * \brief Clear monitor table configurations.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_ldh_monitor_table_clear(int unit);

/*!
 * \brief Get monitor enable state on the port.
 *
 * \param [in] unit Unit Number.
 * \param [in] port Port Number.
 * \param [in] ingress Ingress pipe
 * \param [in] monitor_id Monitor ID.
 * \param [in] enable Enable/disable.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_ldh_monitor_port_enable_get(
    int unit,
    int port,
    bool ingress,
    uint8_t monitor_id,
    bool *enable);

/*!
 * \brief Configure monitor enable state on the port
 *
 * \param [in] unit Unit Number.
 * \param [in] port Port Number.
 * \param [in] ingress Ingress pipe
 * \param [in] monitor_id Monitor ID.
 * \param [in] enable Enable/disable.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_ldh_monitor_port_enable_set(
    int unit,
    int port,
    bool ingress,
    uint8_t monitor_id,
    bool enable);

/*!
 * \brief Configure monitor count mode.
 *
 * \param [in] unit Unit Number.
 * \param [in] monitor_id Monitor ID.
 * \param [in] mode Monitor count mode.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_ldh_monitor_count_mode_set(
    int unit,
    uint8_t monitor_id,
    bcm_latency_monitor_count_mode_t mode);

/*!
 * \brief Get monitor count mode.
 *
 * \param [in] unit Unit Number.
 * \param [in] monitor_id Monitor ID.
 * \param [in] mode Monitor count mode.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_ldh_monitor_count_mode_get(
    int unit,
    uint8_t monitor_id,
    bcm_latency_monitor_count_mode_t *mode);

/*!
 * \brief Configure counter action on specified monitor ID.
 *
 * \param [in] unit Unit Number.
 * \param [in] monitor_id Monitor ID.
 * \param [in] action Counter action.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_ldh_monitor_count_action_set(
    int unit,
    uint8_t monitor_id,
    uint32_t action);

/*!
 * \brief Get counter action on specified monitor ID.
 *
 * \param [in] unit Unit Number.
 * \param [in] monitor_id Monitor ID.
 * \param [in] action Counter action.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_ldh_monitor_count_action_get(
    int unit,
    uint8_t monitor_id,
    uint32_t *action);

/*!
 * \brief Enable/disable monitor.
 *
 * \param [in] unit Unit Number.
 * \param [in] monitor_id Monitor ID.
 * \param [in] enable Enable/disable monitor.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
xgs_ltsw_ldh_monitor_enable(
    int unit,
    uint8_t monitor_id,
    uint8_t enable);

#endif /* BCMINT_LTSW_XGS_LDH_H */
