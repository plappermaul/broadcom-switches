/*
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef BCMINT_LTSW_MBCM_EBST_H
#define BCMINT_LTSW_MBCM_EBST_H

#include <bcm/cosq.h>

/*!
 * \brief Get a EBST threshold profile for a given BST stat Id.
 *
 * \param [in] unit Unit Number.
 * \param [in] object_id Integrated cosq index.
 * \param [in] bid BST stat ID to identify the COSQ resource/object.
 * \param [out] profile EBST profile configuration.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*cosq_ebst_threshold_profile_get_f)(
    int unit,
    bcm_cosq_object_id_t *object_id,
    bcm_bst_stat_id_t bid,
    bcm_cosq_ebst_threshold_profile_t *profile);

/*!
 * \brief Set a EBST threshold profile for a given BST stat Id.
 *
 * \param [in] unit Unit Number.
 * \param [in] object_id Integrated cosq index.
 * \param [in] bid BST stat ID to identify the COSQ resource/object.
 * \param [in] profile EBST profile configuration.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*cosq_ebst_threshold_profile_set_f)(
    int unit,
    bcm_cosq_object_id_t *object_id,
    bcm_bst_stat_id_t bid,
    bcm_cosq_ebst_threshold_profile_t *profile);

/*!
 * \brief To get EBST scan round scan mode and enable mode.
 *
 * \param [in] unit Unit Number.
 * \param [in] type Ebst control type.
 * \param [out] arg arg.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*cosq_ebst_control_get_f)(
    int unit,
    bcm_cosq_ebst_control_t type,
    int *arg);

/*!
 * \brief To set EBST scan round scan mode and enable mode.
 *
 * \param [in] unit Unit Number.
 * \param [in] type Ebst control type.
 * \param [in] arg arg.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*cosq_ebst_control_set_f)(
    int unit,
    bcm_cosq_ebst_control_t type,
    int arg);

/*!
 * \brief To get monitor info for a given BST Stat ID.
 *
 * \param [in] unit Unit Number.
 * \param [in] object_id Integrated cosq index.
 * \param [in] bid BST stat ID to identify the COSQ resource/object.
 * \param [out] monitor EBST monitor info structure.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*cosq_ebst_monitor_get_f)(
    int unit,
    bcm_cosq_object_id_t *object_id,
    bcm_bst_stat_id_t bid,
    bcm_cosq_ebst_monitor_t *monitor);

/*!
 * \brief To set monitor info for a given BST Stat ID.
 *
 * \param [in] unit Unit Number.
 * \param [in] object_id Integrated cosq index.
 * \param [in] bid BST stat ID to identify the COSQ resource/object.
 * \param [in] monitor EBST monitor info structure.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*cosq_ebst_monitor_set_f)(
    int unit,
    bcm_cosq_object_id_t *object_id,
    bcm_bst_stat_id_t bid,
    bcm_cosq_ebst_monitor_t *monitor);

/*!
 * \brief To get max number entries and available number entries of  EBST data buffer.
 *
 * \param [in] unit Unit Number.
 * \param [in] object_id Integrated cosq index.
 * \param [out] info EBST data buffer info structure.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*cosq_ebst_data_stat_info_get_f)(
    int unit,
    bcm_cosq_object_id_t *object_id,
    bcm_cosq_ebst_data_stat_info_t *info);

/*!
 * \brief To get an identical EBST stat for a given BST Stat ID
 *
 * \param [in] unit Unit Number.
 * \param [in] object_id Integrated cosq index.
 * \param [in] bid BST stat ID to identify the COSQ resource/object.
 * \param [in] array_size array size.
 * \param [out] entry_array entry array.
 * \param [out] count Count.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*cosq_ebst_data_get_f)(
    int unit,
    bcm_cosq_object_id_t *object_id,
    bcm_bst_stat_id_t bid,
    int array_size,
    bcm_cosq_ebst_data_entry_t *entry_array,
    int *count);

/*!
 * \brief To enable EBST tracking.
 *
 * \param [in] unit Unit Number.
 * \param [in] enable Enable EBST tracking.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*cosq_ebst_enable_set_f)(
    int unit,
    int enable);

/*!
 * \brief To get EBST feature enable status.
 *
 * \param [in] unit Unit Number.
 * \param [out] enable Enable EBST tracking status.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*cosq_ebst_enable_get_f)(
    int unit,
    int *enable);

/*!
 * \brief Initialize the ebst module.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*cosq_ebst_init_f)(int unit);

/*!
 * \brief Detach the ebst module.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*cosq_ebst_detach_f)(int unit);

/*!
 * \brief Cosq_ebst driver structure.
 */
typedef struct mbcm_ltsw_cosq_ebst_drv_s {

    /*! Get a EBST threshold profile for a given BST stat Id. */
    cosq_ebst_threshold_profile_get_f cosq_ebst_threshold_profile_get;

    /*! Set a EBST threshold profile for a given BST stat Id. */
    cosq_ebst_threshold_profile_set_f cosq_ebst_threshold_profile_set;

    /*! To get EBST scan round scan mode and enable mode. */
    cosq_ebst_control_get_f cosq_ebst_control_get;

    /*! To set EBST scan round scan mode and enable mode. */
    cosq_ebst_control_set_f cosq_ebst_control_set;

    /*! To get monitor info for a given BST Stat ID. */
    cosq_ebst_monitor_get_f cosq_ebst_monitor_get;

    /*! To set monitor info for a given BST Stat ID. */
    cosq_ebst_monitor_set_f cosq_ebst_monitor_set;

    /*! To get max number entries and available number entries of  EBST data buffer. */
    cosq_ebst_data_stat_info_get_f cosq_ebst_data_stat_info_get;

    /*! To get an identical EBST stat for a given BST Stat ID */
    cosq_ebst_data_get_f cosq_ebst_data_get;

    /*! To enable EBST tracking. */
    cosq_ebst_enable_set_f cosq_ebst_enable_set;

    /*! To get EBST feature enable status. */
    cosq_ebst_enable_get_f cosq_ebst_enable_get;

    /*! Initialize the ebst module. */
    cosq_ebst_init_f cosq_ebst_init;

    /*! Detach the ebst module. */
    cosq_ebst_detach_f cosq_ebst_detach;

} mbcm_ltsw_cosq_ebst_drv_t;

/*!
 * \brief Set the COSQ_EBST driver of the device.
 *
 * \param [in] unit Unit Number.
 * \param [in] drv Cosq_ebst driver to set.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_cosq_ebst_drv_set(
    int unit,
    mbcm_ltsw_cosq_ebst_drv_t *drv);

/*!
 * \brief Get a EBST threshold profile for a given BST stat Id.
 *
 * \param [in] unit Unit Number.
 * \param [in] object_id Integrated cosq index.
 * \param [in] bid BST stat ID to identify the COSQ resource/object.
 * \param [out] profile EBST profile configuration.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_cosq_ebst_threshold_profile_get(
    int unit,
    bcm_cosq_object_id_t *object_id,
    bcm_bst_stat_id_t bid,
    bcm_cosq_ebst_threshold_profile_t *profile);

/*!
 * \brief Set a EBST threshold profile for a given BST stat Id.
 *
 * \param [in] unit Unit Number.
 * \param [in] object_id Integrated cosq index.
 * \param [in] bid BST stat ID to identify the COSQ resource/object.
 * \param [in] profile EBST profile configuration.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_cosq_ebst_threshold_profile_set(
    int unit,
    bcm_cosq_object_id_t *object_id,
    bcm_bst_stat_id_t bid,
    bcm_cosq_ebst_threshold_profile_t *profile);

/*!
 * \brief To get EBST scan round scan mode and enable mode.
 *
 * \param [in] unit Unit Number.
 * \param [in] type Ebst control type.
 * \param [out] arg arg.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_cosq_ebst_control_get(
    int unit,
    bcm_cosq_ebst_control_t type,
    int *arg);

/*!
 * \brief To set EBST scan round scan mode and enable mode.
 *
 * \param [in] unit Unit Number.
 * \param [in] type Ebst control type.
 * \param [in] arg arg.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_cosq_ebst_control_set(
    int unit,
    bcm_cosq_ebst_control_t type,
    int arg);

/*!
 * \brief To get monitor info for a given BST Stat ID.
 *
 * \param [in] unit Unit Number.
 * \param [in] object_id Integrated cosq index.
 * \param [in] bid BST stat ID to identify the COSQ resource/object.
 * \param [out] monitor EBST monitor info structure.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_cosq_ebst_monitor_get(
    int unit,
    bcm_cosq_object_id_t *object_id,
    bcm_bst_stat_id_t bid,
    bcm_cosq_ebst_monitor_t *monitor);

/*!
 * \brief To set monitor info for a given BST Stat ID.
 *
 * \param [in] unit Unit Number.
 * \param [in] object_id Integrated cosq index.
 * \param [in] bid BST stat ID to identify the COSQ resource/object.
 * \param [in] monitor EBST monitor info structure.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_cosq_ebst_monitor_set(
    int unit,
    bcm_cosq_object_id_t *object_id,
    bcm_bst_stat_id_t bid,
    bcm_cosq_ebst_monitor_t *monitor);

/*!
 * \brief To get max number entries and available number entries of  EBST data buffer.
 *
 * \param [in] unit Unit Number.
 * \param [in] object_id Integrated cosq index.
 * \param [out] info EBST data buffer info structure.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_cosq_ebst_data_stat_info_get(
    int unit,
    bcm_cosq_object_id_t *object_id,
    bcm_cosq_ebst_data_stat_info_t *info);

/*!
 * \brief To get an identical EBST stat for a given BST Stat ID
 *
 * \param [in] unit Unit Number.
 * \param [in] object_id Integrated cosq index.
 * \param [in] bid BST stat ID to identify the COSQ resource/object.
 * \param [in] array_size array size.
 * \param [out] entry_array entry array.
 * \param [out] count Count.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_cosq_ebst_data_get(
    int unit,
    bcm_cosq_object_id_t *object_id,
    bcm_bst_stat_id_t bid,
    int array_size,
    bcm_cosq_ebst_data_entry_t *entry_array,
    int *count);

/*!
 * \brief To enable EBST tracking.
 *
 * \param [in] unit Unit Number.
 * \param [in] enable Enable EBST tracking.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_cosq_ebst_enable_set(
    int unit,
    int enable);

/*!
 * \brief To get EBST feature enable status.
 *
 * \param [in] unit Unit Number.
 * \param [out] enable Enable EBST tracking status.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_cosq_ebst_enable_get(
    int unit,
    int *enable);

/*!
 * \brief Initialize the ebst module.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_cosq_ebst_init(int unit);

/*!
 * \brief Detach the ebst module.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_cosq_ebst_detach(int unit);

#endif /* BCMINT_LTSW_MBCM_EBST_H */
