/*
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef BCMINT_LTSW_MBCM_FLEXSTATE_H
#define BCMINT_LTSW_MBCM_FLEXSTATE_H

#include <bcm_int/ltsw/flexstate_int.h>

#include <sal/sal_types.h>

/*!
 * \brief Get flex state source information.
 *
 * \param [in] unit Unit Number.
 * \param [in] source Flex source.
 * \param [out] source_info Flex counter source info.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*flexstate_source_info_get_f)(
    int unit,
    int source,
    bcmint_flexstate_source_info_t **source_info);

/*!
 * \brief Get flex state object information.
 *
 * \param [in] unit Unit Number.
 * \param [in] object Flex object.
 * \param [out] object_info Flex counter object info.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*flexstate_object_info_get_f)(
    int unit,
    int object,
    bcmint_flexstate_object_info_t **object_info);

/*!
 * \brief Get static flex state stage information.
 *
 * \param [in] unit Unit Number.
 * \param [out] stage_info Flex state stage info.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*flexstate_stage_info_get_f)(
    int unit,
    bcmint_flexstate_stage_info_t **stage_info);

/*!
 * \brief Flex state action mode validation function.
 *
 * \param [in] unit Unit Number.
 * \param [in] val Flex state action mode type.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*flexstate_action_mode_validate_f)(
    int unit,
    int val);

/*!
 * \brief Get chip specific action mode enum map.
 *
 * \param [in] unit Unit Number.
 * \param [out] map Flexstate action mode enum map.
 * \param [out] count Element count of action mode enum array.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*flexstate_action_mode_enum_map_get_f)(
    int unit,
    const bcmint_flexstate_enum_map_t **map,
    uint32_t *count);

/*!
 * \brief Flex state action source validation function.
 *
 * \param [in] unit Unit Number.
 * \param [in] val Flex state action source type.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*flexstate_action_source_validate_f)(
    int unit,
    int val);

/*!
 * \brief Get chip specific action source enum map.
 *
 * \param [in] unit Unit Number.
 * \param [out] map Flexstate action source enum map.
 * \param [out] count Element count of action source enum array.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*flexstate_action_source_enum_map_get_f)(
    int unit,
    const bcmint_flexstate_enum_map_t **map,
    uint32_t *count);

/*!
 * \brief Flex state trigger interval validation function.
 *
 * \param [in] unit Unit Number.
 * \param [in] val Flex state trigger interval.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*flexstate_trigger_interval_validate_f)(
    int unit,
    int val);

/*!
 * \brief Get chip specific action scale enum map.
 *
 * \param [in] unit Unit Number.
 * \param [out] map Flexstate scale enum map.
 * \param [out] count Element count of scale enum array.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*flexstate_action_scale_enum_map_get_f)(
    int unit,
    const bcmint_flexstate_enum_map_t **map,
    uint32_t *count);

/*!
 * \brief Get chip specific quantization object enum map.
 *
 * \param [in] unit Unit Number.
 * \param [out] map Flexstate quantization object enum map.
 * \param [out] count Element count of quantization object enum array.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*flexstate_quant_object_enum_map_get_f)(
    int unit,
    const bcmint_flexstate_enum_map_t **map,
    uint32_t *count);

/*!
 * \brief Flex state value update_compare validation function.
 *
 * \param [in] unit Unit Number.
 * \param [in] val Flex state value update compare type.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*flexstate_update_comp_validate_f)(
    int unit,
    int val);

/*!
 * \brief Get chip specific value update compare enum map.
 *
 * \param [in] unit Unit Number.
 * \param [out] map Flexstate value update compare enum map.
 * \param [out] count Element count of value update compare enum array.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*flexstate_update_comp_enum_map_get_f)(
    int unit,
    const bcmint_flexstate_enum_map_t **map,
    uint32_t *count);

/*!
 * \brief Flex state value update mode validation function.
 *
 * \param [in] unit Unit Number.
 * \param [in] val Flex state value update mode type.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*flexstate_update_mode_validate_f)(
    int unit,
    int val);

/*!
 * \brief Get chip specific value update mode enum map.
 *
 * \param [in] unit Unit Number.
 * \param [out] map Flexstate value update mode enum map.
 * \param [out] count Element count of value update mode enum array.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*flexstate_update_mode_enum_map_get_f)(
    int unit,
    const bcmint_flexstate_enum_map_t **map,
    uint32_t *count);

/*!
 * \brief Flex state value update source validation function.
 *
 * \param [in] unit Unit Number.
 * \param [in] val Flex state value update source type.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*flexstate_update_source_validate_f)(
    int unit,
    int val);

/*!
 * \brief Get chip specific value update source enum map.
 *
 * \param [in] unit Unit Number.
 * \param [out] map Flexstate value update source enum map.
 * \param [out] count Element count of value update source enum array.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*flexstate_update_source_enum_map_get_f)(
    int unit,
    const bcmint_flexstate_enum_map_t **map,
    uint32_t *count);

/*!
 * \brief Flexstate driver structure.
 */
typedef struct mbcm_ltsw_flexstate_drv_s {

    /*! Get flex state source information. */
    flexstate_source_info_get_f flexstate_source_info_get;

    /*! Get flex state object information. */
    flexstate_object_info_get_f flexstate_object_info_get;

    /*! Get static flex state stage information. */
    flexstate_stage_info_get_f flexstate_stage_info_get;

    /*! Flex state action mode validation function. */
    flexstate_action_mode_validate_f flexstate_action_mode_validate;

    /*! Get chip specific action mode enum map. */
    flexstate_action_mode_enum_map_get_f flexstate_action_mode_enum_map_get;

    /*! Flex state action source validation function. */
    flexstate_action_source_validate_f flexstate_action_source_validate;

    /*! Get chip specific action source enum map. */
    flexstate_action_source_enum_map_get_f flexstate_action_source_enum_map_get;

    /*! Flex state trigger interval validation function. */
    flexstate_trigger_interval_validate_f flexstate_trigger_interval_validate;

    /*! Get chip specific action scale enum map. */
    flexstate_action_scale_enum_map_get_f flexstate_action_scale_enum_map_get;

    /*! Get chip specific quantization object enum map. */
    flexstate_quant_object_enum_map_get_f flexstate_quant_object_enum_map_get;

    /*! Flex state value update_compare validation function. */
    flexstate_update_comp_validate_f flexstate_update_comp_validate;

    /*! Get chip specific value update compare enum map. */
    flexstate_update_comp_enum_map_get_f flexstate_update_comp_enum_map_get;

    /*! Flex state value update mode validation function. */
    flexstate_update_mode_validate_f flexstate_update_mode_validate;

    /*! Get chip specific value update mode enum map. */
    flexstate_update_mode_enum_map_get_f flexstate_update_mode_enum_map_get;

    /*! Flex state value update source validation function. */
    flexstate_update_source_validate_f flexstate_update_source_validate;

    /*! Get chip specific value update source enum map. */
    flexstate_update_source_enum_map_get_f flexstate_update_source_enum_map_get;

} mbcm_ltsw_flexstate_drv_t;

/*!
 * \brief Set the FLEXSTATE driver of the device.
 *
 * \param [in] unit Unit Number.
 * \param [in] drv Flexstate driver to set.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_flexstate_drv_set(
    int unit,
    mbcm_ltsw_flexstate_drv_t *drv);

/*!
 * \brief Get flex state source information.
 *
 * \param [in] unit Unit Number.
 * \param [in] source Flex source.
 * \param [out] source_info Flex counter source info.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_flexstate_source_info_get(
    int unit,
    int source,
    bcmint_flexstate_source_info_t **source_info);

/*!
 * \brief Get flex state object information.
 *
 * \param [in] unit Unit Number.
 * \param [in] object Flex object.
 * \param [out] object_info Flex counter object info.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_flexstate_object_info_get(
    int unit,
    int object,
    bcmint_flexstate_object_info_t **object_info);

/*!
 * \brief Get static flex state stage information.
 *
 * \param [in] unit Unit Number.
 * \param [out] stage_info Flex state stage info.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_flexstate_stage_info_get(
    int unit,
    bcmint_flexstate_stage_info_t **stage_info);

/*!
 * \brief Flex state action mode validation function.
 *
 * \param [in] unit Unit Number.
 * \param [in] val Flex state action mode type.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_flexstate_action_mode_validate(
    int unit,
    int val);

/*!
 * \brief Get chip specific action mode enum map.
 *
 * \param [in] unit Unit Number.
 * \param [out] map Flexstate action mode enum map.
 * \param [out] count Element count of action mode enum array.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_flexstate_action_mode_enum_map_get(
    int unit,
    const bcmint_flexstate_enum_map_t **map,
    uint32_t *count);

/*!
 * \brief Flex state action source validation function.
 *
 * \param [in] unit Unit Number.
 * \param [in] val Flex state action source type.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_flexstate_action_source_validate(
    int unit,
    int val);

/*!
 * \brief Get chip specific action source enum map.
 *
 * \param [in] unit Unit Number.
 * \param [out] map Flexstate action source enum map.
 * \param [out] count Element count of action source enum array.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_flexstate_action_source_enum_map_get(
    int unit,
    const bcmint_flexstate_enum_map_t **map,
    uint32_t *count);

/*!
 * \brief Flex state trigger interval validation function.
 *
 * \param [in] unit Unit Number.
 * \param [in] val Flex state trigger interval.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_flexstate_trigger_interval_validate(
    int unit,
    int val);

/*!
 * \brief Get chip specific action scale enum map.
 *
 * \param [in] unit Unit Number.
 * \param [out] map Flexstate scale enum map.
 * \param [out] count Element count of scale enum array.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_flexstate_action_scale_enum_map_get(
    int unit,
    const bcmint_flexstate_enum_map_t **map,
    uint32_t *count);

/*!
 * \brief Get chip specific quantization object enum map.
 *
 * \param [in] unit Unit Number.
 * \param [out] map Flexstate quantization object enum map.
 * \param [out] count Element count of quantization object enum array.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_flexstate_quant_object_enum_map_get(
    int unit,
    const bcmint_flexstate_enum_map_t **map,
    uint32_t *count);

/*!
 * \brief Flex state value update_compare validation function.
 *
 * \param [in] unit Unit Number.
 * \param [in] val Flex state value update compare type.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_flexstate_update_comp_validate(
    int unit,
    int val);

/*!
 * \brief Get chip specific value update compare enum map.
 *
 * \param [in] unit Unit Number.
 * \param [out] map Flexstate value update compare enum map.
 * \param [out] count Element count of value update compare enum array.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_flexstate_update_comp_enum_map_get(
    int unit,
    const bcmint_flexstate_enum_map_t **map,
    uint32_t *count);

/*!
 * \brief Flex state value update mode validation function.
 *
 * \param [in] unit Unit Number.
 * \param [in] val Flex state value update mode type.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_flexstate_update_mode_validate(
    int unit,
    int val);

/*!
 * \brief Get chip specific value update mode enum map.
 *
 * \param [in] unit Unit Number.
 * \param [out] map Flexstate value update mode enum map.
 * \param [out] count Element count of value update mode enum array.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_flexstate_update_mode_enum_map_get(
    int unit,
    const bcmint_flexstate_enum_map_t **map,
    uint32_t *count);

/*!
 * \brief Flex state value update source validation function.
 *
 * \param [in] unit Unit Number.
 * \param [in] val Flex state value update source type.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_flexstate_update_source_validate(
    int unit,
    int val);

/*!
 * \brief Get chip specific value update source enum map.
 *
 * \param [in] unit Unit Number.
 * \param [out] map Flexstate value update source enum map.
 * \param [out] count Element count of value update source enum array.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_flexstate_update_source_enum_map_get(
    int unit,
    const bcmint_flexstate_enum_map_t **map,
    uint32_t *count);

#endif /* BCMINT_LTSW_MBCM_FLEXSTATE_H */
