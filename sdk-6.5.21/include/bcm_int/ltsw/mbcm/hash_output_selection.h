/*
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef BCMINT_LTSW_MBCM_HASH_OUTPUT_SELECTION_H
#define BCMINT_LTSW_MBCM_HASH_OUTPUT_SELECTION_H

#include <bcm_int/ltsw/hash_output_selection_int.h>
#include <bcm_int/ltsw/hash_output_selection.h>

#include <sal/sal_types.h>

/*!
 * \brief Get information of hash output selection functionalities.
 *
 * \param [in] unit Unit Number.
 * \param [in] info The hash output selection information.
 * \param [out] value The hash output selection information value.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*hos_info_get_f)(
    int unit,
    bcmint_hos_info_t info,
    int *value);

/*!
 * \brief Validate the hash output selection profile parameters.
 *
 * \param [in] unit Unit Number.
 * \param [in] profile_id Profile identifier.
 * \param [in] type The hash output selection type.
 * \param [in] array_size Array size.
 * \param [in] ctrl_type The hash output selection profile control type.
 * \param [in] value The hash output selection profile control value.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*hos_validate_profile_params_f)(
    int unit,
    int profile_id,
    bcmi_ltsw_hos_type_t type,
    int array_size,
    bcmi_ltsw_hos_profile_control_t *ctrl_type,
    int *value);

/*!
 * \brief Validate the hash output selection instance parameters.
 *
 * \param [in] unit Unit Number.
 * \param [in] type The hash output selection type.
 * \param [in] inst_id Instance identifier.
 * \param [in] flow_id Flow identifier.
 * \param [in] array_size Array size.
 * \param [in] ctrl_type The hash output selection instance control type.
 * \param [in] value The hash output selection control value.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*hos_validate_instance_params_f)(
    int unit,
    bcmi_ltsw_hos_type_t type,
    int inst_id,
    int flow_id,
    int array_size,
    bcmi_ltsw_hos_instance_control_t *ctrl_type,
    int *value);

/*!
 * \brief Insert a hash output selection profile to logical table.
 *
 * \param [in] unit Unit Number.
 * \param [in] option Profile created option.
 * \param [inout] profile_id Profile identifier.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*hos_profile_create_f)(
    int unit,
    uint32_t option,
    int *profile_id);

/*!
 * \brief Delete a hash output selection profile from logical table.
 *
 * \param [in] unit Unit Number.
 * \param [in] profile_id Profile identifier.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*hos_profile_destroy_f)(
    int unit,
    int profile_id);

/*!
 * \brief Check whether this hash output selection profile is configured or not.
 *
 * \param [in] unit Unit Number.
 * \param [in] profile_id Profile identifier.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*hos_profile_configured_f)(
    int unit,
    int profile_id);

/*!
 * \brief Multi-control the hash output selection profile.
 *
 * \param [in] unit Unit Number.
 * \param [in] profile_id Profile identifier.
 * \param [in] type The hash output selection type.
 * \param [in] array_size controlling configuration array size.
 * \param [in] ctrl_type The hash output selection profile control type array.
 * \param [in] value The hash output selection profile control value array.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*hos_profile_set_f)(
    int unit,
    int profile_id,
    bcmi_ltsw_hos_type_t type,
    int array_size,
    bcmi_ltsw_hos_profile_control_t *ctrl_type,
    int *value);

/*!
 * \brief Get the hash output selection profile configuration.
 *
 * \param [in] unit Unit Number.
 * \param [in] profile_id Profile identifier.
 * \param [in] type The hash output selection type.
 * \param [in] ctrl_type The hash output selection profile control type.
 * \param [out] value The hash output selection profile control value.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*hos_profile_get_f)(
    int unit,
    int profile_id,
    bcmi_ltsw_hos_type_t type,
    bcmi_ltsw_hos_profile_control_t ctrl_type,
    int *value);

/*!
 * \brief Get the hash output selection instance information.
 *
 * \param [in] unit Unit Number.
 * \param [in] type The hash output selection type.
 * \param [out] inst_count Instance identifier count.
 * \param [out] flow_id_count Flow identifier count.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*hos_instance_info_get_f)(
    int unit,
    bcmi_ltsw_hos_type_t type,
    int *inst_count,
    int *flow_id_count);

/*!
 * \brief Get the maximum of hashing value offset.
 *
 * \param [in] unit Unit Number.
 * \param [in] type The hash output selection type.
 * \param [in] concat Concatenation mode.
 * \param [out] max_offset The maximum of hashing value offset.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*hos_instance_offset_max_get_f)(
    int unit,
    bcmi_ltsw_hos_type_t type,
    int concat,
    int *max_offset);

/*!
 * \brief Instance offset decode.
 *
 * \param [in] unit Unit Number.
 * \param [in] type The hash output selection type.
 * \param [in] concat Concatenation mode.
 * \param [in] offset Hashing value offset.
 * \param [out] sub_sel The sub-selection of hashing value offset.
 * \param [out] sub_offset The sub-offset of hashing value offset.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*hos_instance_offset_decode_f)(
    int unit,
    bcmi_ltsw_hos_type_t type,
    int concat,
    int offset,
    int *sub_sel,
    int *sub_offset);

/*!
 * \brief Instance offset encode.
 *
 * \param [in] unit Unit Number.
 * \param [in] type The hash output selection type.
 * \param [in] concat Concatenation mode.
 * \param [in] sub_sel The sub-selection of hashing value offset.
 * \param [in] sub_offset The sub-offset of hashing value offset.
 * \param [out] offset Hashing value offset.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*hos_instance_offset_encode_f)(
    int unit,
    bcmi_ltsw_hos_type_t type,
    int concat,
    int sub_sel,
    int sub_offset,
    int *offset);

/*!
 * \brief Set hash output selection instance subsel and offset through random seed.
 *
 * \param [in] unit Unit Number.
 * \param [in] type The hash output selection type.
 * \param [in] inst_id Instance identifier.
 * \param [in] concat Concatenation mode.
 * \param [in] seed Random seed
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*hos_instance_offset_seed_set_f)(
    int unit,
    bcmi_ltsw_hos_type_t type,
    int inst_id,
    int concat,
    uint32_t seed);

/*!
 * \brief Set hash output selection instance subsel and offset through min, max and stride.
 *
 * \param [in] unit Unit Number.
 * \param [in] type The hash output selection type.
 * \param [in] inst_id Instance identifier.
 * \param [in] concat Concatenation mode.
 * \param [in] min The minimum of offset.
 * \param [in] max The maximum of offset.
 * \param [in] stride The stride of offset.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*hos_instance_offset_stride_set_f)(
    int unit,
    bcmi_ltsw_hos_type_t type,
    int inst_id,
    int concat,
    int min,
    int max,
    int stride);

/*!
 * \brief Multi-control the hash output selection instance.
 *
 * \param [in] unit Unit Number.
 * \param [in] type The hash output selection type.
 * \param [in] inst_id Instance identifier.
 * \param [in] flow_id Flow identifier.
 * \param [in] array_size Controlling configuration array size.
 * \param [in] ctrl_type The hash output selection instance control type array.
 * \param [in] value The hash output selection instance control value array.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*hos_instance_set_f)(
    int unit,
    bcmi_ltsw_hos_type_t type,
    int inst_id,
    int flow_id,
    int array_size,
    bcmi_ltsw_hos_instance_control_t *ctrl_type,
    int *value);

/*!
 * \brief Get the hash output selection instance configuration.
 *
 * \param [in] unit Unit Number.
 * \param [in] type The hash output selection type.
 * \param [in] inst_id Instance identifier.
 * \param [in] flow_id Flow identifier.
 * \param [in] array_size Controlling configuration array size.
 * \param [in] ctrl_type The hash output selection instance control type.
 * \param [out] value The hash output selection instance control value.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*hos_instance_get_f)(
    int unit,
    bcmi_ltsw_hos_type_t type,
    int inst_id,
    int flow_id,
    int array_size,
    bcmi_ltsw_hos_instance_control_t *ctrl_type,
    int *value);

/*!
 * \brief Initialize the hash output selection chip-based database.
 *
 * \param [in] unit Unit Number.
 * \param [in] warm The warmboot state.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*hos_db_init_f)(
    int unit,
    int warm);

/*!
 * \brief De-initialize the hash output selection chip-based database.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*hos_db_deinit_f)(int unit);

/*!
 * \brief Initialize the hash output selection module.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*hos_init_f)(int unit);

/*!
 * \brief De-init the hash output selection module.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*hos_deinit_f)(int unit);

/*!
 * \brief Hos driver structure.
 */
typedef struct mbcm_ltsw_hos_drv_s {

    /*! Get information of hash output selection functionalities. */
    hos_info_get_f hos_info_get;

    /*! Validate the hash output selection profile parameters. */
    hos_validate_profile_params_f hos_validate_profile_params;

    /*! Validate the hash output selection instance parameters. */
    hos_validate_instance_params_f hos_validate_instance_params;

    /*! Insert a hash output selection profile to logical table. */
    hos_profile_create_f hos_profile_create;

    /*! Delete a hash output selection profile from logical table. */
    hos_profile_destroy_f hos_profile_destroy;

    /*! Check whether this hash output selection profile is configured or not. */
    hos_profile_configured_f hos_profile_configured;

    /*! Multi-control the hash output selection profile. */
    hos_profile_set_f hos_profile_set;

    /*! Get the hash output selection profile configuration. */
    hos_profile_get_f hos_profile_get;

    /*! Get the hash output selection instance information. */
    hos_instance_info_get_f hos_instance_info_get;

    /*! Get the maximum of hashing value offset. */
    hos_instance_offset_max_get_f hos_instance_offset_max_get;

    /*! Instance offset decode. */
    hos_instance_offset_decode_f hos_instance_offset_decode;

    /*! Instance offset encode. */
    hos_instance_offset_encode_f hos_instance_offset_encode;

    /*! Set hash output selection instance subsel and offset through random seed. */
    hos_instance_offset_seed_set_f hos_instance_offset_seed_set;

    /*! Set hash output selection instance subsel and offset through min, max and stride. */
    hos_instance_offset_stride_set_f hos_instance_offset_stride_set;

    /*! Multi-control the hash output selection instance. */
    hos_instance_set_f hos_instance_set;

    /*! Get the hash output selection instance configuration. */
    hos_instance_get_f hos_instance_get;

    /*! Initialize the hash output selection chip-based database. */
    hos_db_init_f hos_db_init;

    /*! De-initialize the hash output selection chip-based database. */
    hos_db_deinit_f hos_db_deinit;

    /*! Initialize the hash output selection module. */
    hos_init_f hos_init;

    /*! De-init the hash output selection module. */
    hos_deinit_f hos_deinit;

} mbcm_ltsw_hos_drv_t;

/*!
 * \brief Set the HOS driver of the device.
 *
 * \param [in] unit Unit Number.
 * \param [in] drv Hos driver to set.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_hos_drv_set(
    int unit,
    mbcm_ltsw_hos_drv_t *drv);

/*!
 * \brief Get information of hash output selection functionalities.
 *
 * \param [in] unit Unit Number.
 * \param [in] info The hash output selection information.
 * \param [out] value The hash output selection information value.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_hos_info_get(
    int unit,
    bcmint_hos_info_t info,
    int *value);

/*!
 * \brief Validate the hash output selection profile parameters.
 *
 * \param [in] unit Unit Number.
 * \param [in] profile_id Profile identifier.
 * \param [in] type The hash output selection type.
 * \param [in] array_size Array size.
 * \param [in] ctrl_type The hash output selection profile control type.
 * \param [in] value The hash output selection profile control value.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_hos_validate_profile_params(
    int unit,
    int profile_id,
    bcmi_ltsw_hos_type_t type,
    int array_size,
    bcmi_ltsw_hos_profile_control_t *ctrl_type,
    int *value);

/*!
 * \brief Validate the hash output selection instance parameters.
 *
 * \param [in] unit Unit Number.
 * \param [in] type The hash output selection type.
 * \param [in] inst_id Instance identifier.
 * \param [in] flow_id Flow identifier.
 * \param [in] array_size Array size.
 * \param [in] ctrl_type The hash output selection instance control type.
 * \param [in] value The hash output selection control value.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_hos_validate_instance_params(
    int unit,
    bcmi_ltsw_hos_type_t type,
    int inst_id,
    int flow_id,
    int array_size,
    bcmi_ltsw_hos_instance_control_t *ctrl_type,
    int *value);

/*!
 * \brief Insert a hash output selection profile to logical table.
 *
 * \param [in] unit Unit Number.
 * \param [in] option Profile created option.
 * \param [inout] profile_id Profile identifier.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_hos_profile_create(
    int unit,
    uint32_t option,
    int *profile_id);

/*!
 * \brief Delete a hash output selection profile from logical table.
 *
 * \param [in] unit Unit Number.
 * \param [in] profile_id Profile identifier.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_hos_profile_destroy(
    int unit,
    int profile_id);

/*!
 * \brief Check whether this hash output selection profile is configured or not.
 *
 * \param [in] unit Unit Number.
 * \param [in] profile_id Profile identifier.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_hos_profile_configured(
    int unit,
    int profile_id);

/*!
 * \brief Multi-control the hash output selection profile.
 *
 * \param [in] unit Unit Number.
 * \param [in] profile_id Profile identifier.
 * \param [in] type The hash output selection type.
 * \param [in] array_size controlling configuration array size.
 * \param [in] ctrl_type The hash output selection profile control type array.
 * \param [in] value The hash output selection profile control value array.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_hos_profile_set(
    int unit,
    int profile_id,
    bcmi_ltsw_hos_type_t type,
    int array_size,
    bcmi_ltsw_hos_profile_control_t *ctrl_type,
    int *value);

/*!
 * \brief Get the hash output selection profile configuration.
 *
 * \param [in] unit Unit Number.
 * \param [in] profile_id Profile identifier.
 * \param [in] type The hash output selection type.
 * \param [in] ctrl_type The hash output selection profile control type.
 * \param [out] value The hash output selection profile control value.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_hos_profile_get(
    int unit,
    int profile_id,
    bcmi_ltsw_hos_type_t type,
    bcmi_ltsw_hos_profile_control_t ctrl_type,
    int *value);

/*!
 * \brief Get the hash output selection instance information.
 *
 * \param [in] unit Unit Number.
 * \param [in] type The hash output selection type.
 * \param [out] inst_count Instance identifier count.
 * \param [out] flow_id_count Flow identifier count.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_hos_instance_info_get(
    int unit,
    bcmi_ltsw_hos_type_t type,
    int *inst_count,
    int *flow_id_count);

/*!
 * \brief Get the maximum of hashing value offset.
 *
 * \param [in] unit Unit Number.
 * \param [in] type The hash output selection type.
 * \param [in] concat Concatenation mode.
 * \param [out] max_offset The maximum of hashing value offset.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_hos_instance_offset_max_get(
    int unit,
    bcmi_ltsw_hos_type_t type,
    int concat,
    int *max_offset);

/*!
 * \brief Instance offset decode.
 *
 * \param [in] unit Unit Number.
 * \param [in] type The hash output selection type.
 * \param [in] concat Concatenation mode.
 * \param [in] offset Hashing value offset.
 * \param [out] sub_sel The sub-selection of hashing value offset.
 * \param [out] sub_offset The sub-offset of hashing value offset.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_hos_instance_offset_decode(
    int unit,
    bcmi_ltsw_hos_type_t type,
    int concat,
    int offset,
    int *sub_sel,
    int *sub_offset);

/*!
 * \brief Instance offset encode.
 *
 * \param [in] unit Unit Number.
 * \param [in] type The hash output selection type.
 * \param [in] concat Concatenation mode.
 * \param [in] sub_sel The sub-selection of hashing value offset.
 * \param [in] sub_offset The sub-offset of hashing value offset.
 * \param [out] offset Hashing value offset.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_hos_instance_offset_encode(
    int unit,
    bcmi_ltsw_hos_type_t type,
    int concat,
    int sub_sel,
    int sub_offset,
    int *offset);

/*!
 * \brief Set hash output selection instance subsel and offset through random seed.
 *
 * \param [in] unit Unit Number.
 * \param [in] type The hash output selection type.
 * \param [in] inst_id Instance identifier.
 * \param [in] concat Concatenation mode.
 * \param [in] seed Random seed
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_hos_instance_offset_seed_set(
    int unit,
    bcmi_ltsw_hos_type_t type,
    int inst_id,
    int concat,
    uint32_t seed);

/*!
 * \brief Set hash output selection instance subsel and offset through min, max and stride.
 *
 * \param [in] unit Unit Number.
 * \param [in] type The hash output selection type.
 * \param [in] inst_id Instance identifier.
 * \param [in] concat Concatenation mode.
 * \param [in] min The minimum of offset.
 * \param [in] max The maximum of offset.
 * \param [in] stride The stride of offset.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_hos_instance_offset_stride_set(
    int unit,
    bcmi_ltsw_hos_type_t type,
    int inst_id,
    int concat,
    int min,
    int max,
    int stride);

/*!
 * \brief Multi-control the hash output selection instance.
 *
 * \param [in] unit Unit Number.
 * \param [in] type The hash output selection type.
 * \param [in] inst_id Instance identifier.
 * \param [in] flow_id Flow identifier.
 * \param [in] array_size Controlling configuration array size.
 * \param [in] ctrl_type The hash output selection instance control type array.
 * \param [in] value The hash output selection instance control value array.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_hos_instance_set(
    int unit,
    bcmi_ltsw_hos_type_t type,
    int inst_id,
    int flow_id,
    int array_size,
    bcmi_ltsw_hos_instance_control_t *ctrl_type,
    int *value);

/*!
 * \brief Get the hash output selection instance configuration.
 *
 * \param [in] unit Unit Number.
 * \param [in] type The hash output selection type.
 * \param [in] inst_id Instance identifier.
 * \param [in] flow_id Flow identifier.
 * \param [in] array_size Controlling configuration array size.
 * \param [in] ctrl_type The hash output selection instance control type.
 * \param [out] value The hash output selection instance control value.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_hos_instance_get(
    int unit,
    bcmi_ltsw_hos_type_t type,
    int inst_id,
    int flow_id,
    int array_size,
    bcmi_ltsw_hos_instance_control_t *ctrl_type,
    int *value);

/*!
 * \brief Initialize the hash output selection chip-based database.
 *
 * \param [in] unit Unit Number.
 * \param [in] warm The warmboot state.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_hos_db_init(
    int unit,
    int warm);

/*!
 * \brief De-initialize the hash output selection chip-based database.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_hos_db_deinit(int unit);

/*!
 * \brief Initialize the hash output selection module.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_hos_init(int unit);

/*!
 * \brief De-init the hash output selection module.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_hos_deinit(int unit);

#endif /* BCMINT_LTSW_MBCM_HASH_OUTPUT_SELECTION_H */
