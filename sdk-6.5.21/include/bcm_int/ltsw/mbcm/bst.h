/*
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef BCMINT_LTSW_MBCM_BST_H
#define BCMINT_LTSW_MBCM_BST_H

#include <bcm/types.h>
#include <bcm/cosq.h>

#include <sal/sal_types.h>

/*!
 * \brief Get the BST profile for CosQ objects
 *
 * \param [in] unit Unit Number.
 * \param [in] gport Gport Number.
 * \param [in] cosq COS queue.
 * \param [in] bid BST stat ID to identify the COSQ resource/object.
 * \param [out] profile BST profile configuration.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*cosq_bst_profile_get_f)(
    int unit,
    bcm_gport_t gport,
    bcm_cos_queue_t cosq,
    bcm_bst_stat_id_t bid,
    bcm_cosq_bst_profile_t *profile);

/*!
 * \brief Set the BST profile for CosQ objects
 *
 * \param [in] unit Unit Number.
 * \param [in] gport Gport Number.
 * \param [in] cosq COS queue.
 * \param [in] bid BST stat ID to identify the COSQ resource/object.
 * \param [in] profile BST profile configuration.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*cosq_bst_profile_set_f)(
    int unit,
    bcm_gport_t gport,
    bcm_cos_queue_t cosq,
    bcm_bst_stat_id_t bid,
    bcm_cosq_bst_profile_t *profile);

/*!
 * \brief Get the BST profile for CosQ objects
 *
 * \param [in] unit Unit Number.
 * \param [in] gport Gport Number.
 * \param [in] cosq COS queue.
 * \param [in] buffer BST stat ID to identify the COSQ resource/object.
 * \param [in] bid BST stat ID to identify the COSQ resource/object.
 * \param [in] options BST stat read options.
 * \param [out] pvalue BST stat count.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*cosq_bst_stat_get_f)(
    int unit,
    bcm_gport_t gport,
    bcm_cos_queue_t cosq,
    bcm_cosq_buffer_id_t buffer,
    bcm_bst_stat_id_t bid,
    uint32_t options,
    uint64_t *pvalue);

/*!
 * \brief Clear speficied BST stat
 *
 * \param [in] unit Unit Number.
 * \param [in] gport Gport Number.
 * \param [in] cosq COS queue.
 * \param [in] buffer BST stat ID to identify the COSQ resource/object.
 * \param [in] bid BST stat ID to identify the COSQ resource/object.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*cosq_bst_stat_clear_f)(
    int unit,
    bcm_gport_t gport,
    bcm_cos_queue_t cosq,
    bcm_cosq_buffer_id_t buffer,
    bcm_bst_stat_id_t bid);

/*!
 * \brief Sync the HW stats value to SW copy for all or given BST resource
 *
 * \param [in] unit Unit Number.
 * \param [in] bid BST stat ID to identify the COSQ resource/object.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*cosq_bst_stat_sync_f)(
    int unit,
    bcm_bst_stat_id_t bid);

/*!
 * \brief Initialize the bst module.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*cosq_bst_init_f)(int unit);

/*!
 * \brief Detach the bst module.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*cosq_bst_detach_f)(int unit);

/*!
 * \brief Enable BST tracking.
 *
 * \param [in] unit Unit Number.
 * \param [in] arg BST enable value.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*cosq_bst_enable_set_f)(
    int unit,
    int arg);

/*!
 * \brief Get BST enable value.
 *
 * \param [in] unit Unit Number.
 * \param [out] arg BST enable value.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*cosq_bst_enable_get_f)(
    int unit,
    int *arg);

/*!
 * \brief Set BST resource usage tracking mode.
 *
 * \param [in] unit Unit Number.
 * \param [in] arg BST resource usage tracking mode value.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*cosq_bst_tracking_mode_set_f)(
    int unit,
    int arg);

/*!
 * \brief Get BST resource usage tracking mode.
 *
 * \param [in] unit Unit Number.
 * \param [out] arg BST resource usage tracking mode value.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*cosq_bst_tracking_mode_get_f)(
    int unit,
    int *arg);

/*!
 * \brief Set BST resource usage SnapShot mode.
 *
 * \param [in] unit Unit Number.
 * \param [in] arg BST resource usage SnapShot mode value.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*cosq_bst_snapshot_enable_set_f)(
    int unit,
    int arg);

/*!
 * \brief Get BST resource usage SnapShot mode.
 *
 * \param [in] unit Unit Number.
 * \param [out] arg BST resource usage SnapShot mode value.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
typedef int (*cosq_bst_snapshot_enable_get_f)(
    int unit,
    int *arg);

/*!
 * \brief Cosq_bst driver structure.
 */
typedef struct mbcm_ltsw_cosq_bst_drv_s {

    /*! Get the BST profile for CosQ objects */
    cosq_bst_profile_get_f cosq_bst_profile_get;

    /*! Set the BST profile for CosQ objects */
    cosq_bst_profile_set_f cosq_bst_profile_set;

    /*! Get the BST profile for CosQ objects */
    cosq_bst_stat_get_f cosq_bst_stat_get;

    /*! Clear speficied BST stat */
    cosq_bst_stat_clear_f cosq_bst_stat_clear;

    /*! Sync the HW stats value to SW copy for all or given BST resource */
    cosq_bst_stat_sync_f cosq_bst_stat_sync;

    /*! Initialize the bst module. */
    cosq_bst_init_f cosq_bst_init;

    /*! Detach the bst module. */
    cosq_bst_detach_f cosq_bst_detach;

    /*! Enable BST tracking. */
    cosq_bst_enable_set_f cosq_bst_enable_set;

    /*! Get BST enable value. */
    cosq_bst_enable_get_f cosq_bst_enable_get;

    /*! Set BST resource usage tracking mode. */
    cosq_bst_tracking_mode_set_f cosq_bst_tracking_mode_set;

    /*! Get BST resource usage tracking mode. */
    cosq_bst_tracking_mode_get_f cosq_bst_tracking_mode_get;

    /*! Set BST resource usage SnapShot mode. */
    cosq_bst_snapshot_enable_set_f cosq_bst_snapshot_enable_set;

    /*! Get BST resource usage SnapShot mode. */
    cosq_bst_snapshot_enable_get_f cosq_bst_snapshot_enable_get;

} mbcm_ltsw_cosq_bst_drv_t;

/*!
 * \brief Set the COSQ_BST driver of the device.
 *
 * \param [in] unit Unit Number.
 * \param [in] drv Cosq_bst driver to set.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_cosq_bst_drv_set(
    int unit,
    mbcm_ltsw_cosq_bst_drv_t *drv);

/*!
 * \brief Get the BST profile for CosQ objects
 *
 * \param [in] unit Unit Number.
 * \param [in] gport Gport Number.
 * \param [in] cosq COS queue.
 * \param [in] bid BST stat ID to identify the COSQ resource/object.
 * \param [out] profile BST profile configuration.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_cosq_bst_profile_get(
    int unit,
    bcm_gport_t gport,
    bcm_cos_queue_t cosq,
    bcm_bst_stat_id_t bid,
    bcm_cosq_bst_profile_t *profile);

/*!
 * \brief Set the BST profile for CosQ objects
 *
 * \param [in] unit Unit Number.
 * \param [in] gport Gport Number.
 * \param [in] cosq COS queue.
 * \param [in] bid BST stat ID to identify the COSQ resource/object.
 * \param [in] profile BST profile configuration.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_cosq_bst_profile_set(
    int unit,
    bcm_gport_t gport,
    bcm_cos_queue_t cosq,
    bcm_bst_stat_id_t bid,
    bcm_cosq_bst_profile_t *profile);

/*!
 * \brief Get the BST profile for CosQ objects
 *
 * \param [in] unit Unit Number.
 * \param [in] gport Gport Number.
 * \param [in] cosq COS queue.
 * \param [in] buffer BST stat ID to identify the COSQ resource/object.
 * \param [in] bid BST stat ID to identify the COSQ resource/object.
 * \param [in] options BST stat read options.
 * \param [out] pvalue BST stat count.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_cosq_bst_stat_get(
    int unit,
    bcm_gport_t gport,
    bcm_cos_queue_t cosq,
    bcm_cosq_buffer_id_t buffer,
    bcm_bst_stat_id_t bid,
    uint32_t options,
    uint64_t *pvalue);

/*!
 * \brief Clear speficied BST stat
 *
 * \param [in] unit Unit Number.
 * \param [in] gport Gport Number.
 * \param [in] cosq COS queue.
 * \param [in] buffer BST stat ID to identify the COSQ resource/object.
 * \param [in] bid BST stat ID to identify the COSQ resource/object.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_cosq_bst_stat_clear(
    int unit,
    bcm_gport_t gport,
    bcm_cos_queue_t cosq,
    bcm_cosq_buffer_id_t buffer,
    bcm_bst_stat_id_t bid);

/*!
 * \brief Sync the HW stats value to SW copy for all or given BST resource
 *
 * \param [in] unit Unit Number.
 * \param [in] bid BST stat ID to identify the COSQ resource/object.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_cosq_bst_stat_sync(
    int unit,
    bcm_bst_stat_id_t bid);

/*!
 * \brief Initialize the bst module.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_cosq_bst_init(int unit);

/*!
 * \brief Detach the bst module.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_cosq_bst_detach(int unit);

/*!
 * \brief Enable BST tracking.
 *
 * \param [in] unit Unit Number.
 * \param [in] arg BST enable value.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_cosq_bst_enable_set(
    int unit,
    int arg);

/*!
 * \brief Get BST enable value.
 *
 * \param [in] unit Unit Number.
 * \param [out] arg BST enable value.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_cosq_bst_enable_get(
    int unit,
    int *arg);

/*!
 * \brief Set BST resource usage tracking mode.
 *
 * \param [in] unit Unit Number.
 * \param [in] arg BST resource usage tracking mode value.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_cosq_bst_tracking_mode_set(
    int unit,
    int arg);

/*!
 * \brief Get BST resource usage tracking mode.
 *
 * \param [in] unit Unit Number.
 * \param [out] arg BST resource usage tracking mode value.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_cosq_bst_tracking_mode_get(
    int unit,
    int *arg);

/*!
 * \brief Set BST resource usage SnapShot mode.
 *
 * \param [in] unit Unit Number.
 * \param [in] arg BST resource usage SnapShot mode value.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_cosq_bst_snapshot_enable_set(
    int unit,
    int arg);

/*!
 * \brief Get BST resource usage SnapShot mode.
 *
 * \param [in] unit Unit Number.
 * \param [out] arg BST resource usage SnapShot mode value.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
mbcm_ltsw_cosq_bst_snapshot_enable_get(
    int unit,
    int *arg);

#endif /* BCMINT_LTSW_MBCM_BST_H */
