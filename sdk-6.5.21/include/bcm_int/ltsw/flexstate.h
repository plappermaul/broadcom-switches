/*
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef BCMI_LTSW_FLEXSTATE_H
#define BCMI_LTSW_FLEXSTATE_H

#include <sal/sal_types.h>

/*! Invalid flex state action. */
#define BCMI_LTSW_FLEXSTATE_ACTION_INVALID (0)

/*! Options internal. */
#define BCMI_LTSW_FLEXSTATE_OPTIONS_INTERNAL (1 << 31)

/*! Options pipe bitmap. */
#define BCMI_LTSW_FLEXSTATE_OPTIONS_PIPE_BMP (1 << 30)

/*! Ingress flex state lookup stage. */
#define BCMI_LTSW_FLEXSTATE_STAGE_ING_LKUP (0x0)

/*! Ingress flex state forward stage. */
#define BCMI_LTSW_FLEXSTATE_STAGE_ING_FWD (0x1)

/*! Egress flex state stage. */
#define BCMI_LTSW_FLEXSTATE_STAGE_EGR (0x2)

/*! Flex counter stage count. */
#define BCMI_LTSW_FLEXSTATE_STAGE_COUNT (0x3)

/*! Ingress flex state. */
#define BCMI_LTSW_FLEXSTATE_DIR_INGRESS (0x0)

/*! Egress flex state. */
#define BCMI_LTSW_FLEXSTATE_DIR_EGRESS (0x1)

/*! Flex state direction count. */
#define BCMI_LTSW_FLEXSTATE_DIR_COUNT (0x2)

/*!
 * \brief Internal flex state source.
 */
typedef enum bcmi_ltsw_flexstate_state_source_s {

    /*! First internal source. */
    bcmiFlexstateSourceStart = 512,

    /*! Ecn state source. */
    bcmiFlexstateSourceEcnState = 512,

    /*! Tx byte state source. */
    bcmiFlexstateSourceTxByteState = 513,

    /*! Last internal source. */
    bcmiFlexstateSourceEnd = 514

} bcmi_ltsw_flexstate_state_source_t;

#define BCMI_LTSW_FLEXSTATE_STATE_SOURCE_STR \
{ \
    "Start", \
    "EcnState", \
    "TxByteState", \
    "End" \
}

/*!
 * \brief Counter informaiton.
 */
typedef struct bcmi_ltsw_flexstate_counter_info_s {

    /*! Stage id. */
    int stage;

    /*! Pipeline id. */
    int pipe;

    /*! h/w action index. */
    uint32_t action_index;

    /*! action profile id. */
    uint64_t action_profile_id;

    /*! Source enumeration in HSDK API. */
    int source;

    /*! h/w source table name. */
    const char *table_name;

    /*! Total counter index number. */
    uint32_t index_num;

    /*! First allocated counter pool. */
    uint32_t start_pool;

    /*! Last allocated counter pool. */
    uint32_t end_pool;

} bcmi_ltsw_flexstate_counter_info_t;

/*!
 * \brief Get a counter id information.
 *
 * \param [in] unit Unit Number.
 * \param [in] stat_counter_id Flex state action identifier.
 * \param [out] info Counter information.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
bcmi_ltsw_flexstate_counter_id_info_get(
    int unit,
    uint32_t stat_counter_id,
    bcmi_ltsw_flexstate_counter_info_t *info);

/*!
 * \brief Update an attached counter id status.
 *
 * \param [in] unit Unit Number.
 * \param [in] stat_counter_id Flex state action identifier.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
bcmi_ltsw_flexstate_attach_counter_id_status_update(
    int unit,
    uint32_t stat_counter_id);

/*!
 * \brief Update a detached counter id status.
 *
 * \param [in] unit Unit Number.
 * \param [in] stat_counter_id Flex state action identifier.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
bcmi_ltsw_flexstate_detach_counter_id_status_update(
    int unit,
    uint32_t stat_counter_id);

/*!
 * \brief Get a flex counter stat counter id.
 *
 * \param [in] unit Unit Number.
 * \param [in] info Counter information.
 * \param [out] stat_counter_id Flex state action identifier.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
bcmi_ltsw_flexstate_counter_id_get(
    int unit,
    bcmi_ltsw_flexstate_counter_info_t *info,
    uint32_t *stat_counter_id);

/*!
 * \brief Dump flexctr module sw information.
 *
 * \param [in] unit Unit Number.
 *
 * \retval SHR_E_NONE No errors.
 * \retval !SHR_E_NONE Failure.
 */
extern int
bcmi_ltsw_flexstate_sw_dump(int unit);

#endif /* BCMI_LTSW_FLEXSTATE_H */
