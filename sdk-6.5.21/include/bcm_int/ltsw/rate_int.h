/*
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 *
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 */

#ifndef BCMINT_LTSW_RATE_INT_H
#define BCMINT_LTSW_RATE_INT_H

#include <sal/sal_types.h>

/*!
 * \brief Rate information structure.
 */
typedef struct bcmint_rate_info_s {

    /*! BCM_RATE_FLAG_xxx. */
    uint32_t flags;

    /*! flags mask for <flags> valid bits. */
    uint32_t fmask;

    /*! The mapping index. */
    uint32_t map_idx;

    /*! Configuration is applied to all ports. */
    bool all_port;

    /*! Enable for byte mode metering. */
    bool byte_mode;

    /*! Valid only if byte_mode is enabled. */
    uint32_t meter_kbps;

    /*! Valid only if byte_mode is enabled. */
    uint32_t burst_kbits;

    /*! Valid only if byte_mode is enabled. */
    int meter_pps;

    /*! Valid only if byte_mode is enabled. */
    int burst_pkts;

} bcmint_rate_info_t;

/*!
 * \brief Rate hw status structure.
 */
typedef struct bcmint_rate_hw_info_s {

    /*! Enable status. */
    bool enable;

} bcmint_rate_hw_info_t;

/*!
 * \brief Storm control meter mapping index type.
 */
typedef enum bcmint_rate_sc_map_type_s {

    /*! Broadcast packet. */
    LT_RATE_MAP_BCAST = 0,

    /*! Known L2 multicast packet. */
    LT_RATE_MAP_KNOWN_L2MC = 1,

    /*! Unknown L2 multicast packet. */
    LT_RATE_MAP_UNKNOWN_L2MC = 2,

    /*! Known L3 IP multicast packet. */
    LT_RATE_MAP_KNOWN_IPMC = 3,

    /*! Unknown L3 IP multicast packet. */
    LT_RATE_MAP_UNKNOWN_IPMC = 4,

    /*! Destination lookup failure packet. */
    LT_RATE_MAP_DLF = 5,

    /*! Number of storm packet type. */
    LT_RATE_MAP_NUM = 6

} bcmint_rate_sc_map_type_t;

#define BCMINT_RATE_SC_MAP_TYPE_STR \
{ \
    "BCAST", \
    "KNOWN_L2MC", \
    "UNKNOWN_L2MC", \
    "KNOWN_IPMC", \
    "UNKNOWN_IPMC", \
    "DLF", \
    "NUM" \
}

/*!
 * \brief Rate device information structure.
 */
typedef struct bcmint_rate_dev_info_s {

    /*! Storm control meter mapping index array. */
    uint32_t map_idx[LT_RATE_MAP_NUM];

    /*! Storm control supporting status. */
    bool map_supported[LT_RATE_MAP_NUM];

    /*! Meter adjust supporting status. */
    bool meter_adjust;

    /*! Shaper adjust supporting status. */
    bool shaper_adjust;

} bcmint_rate_dev_info_t;

#endif /* BCMINT_LTSW_RATE_INT_H */
