/* 
 * 
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
 * 
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated.
 * Edits to this file will be lost when it is regenerated.
 * search for 'sw_state_cbs_t' for the root of the struct
 */

#ifndef _SHR_SW_STATE_DPP_SOC_JERICHO_TM_IS_FABRIC_LINK_ALLOWED_ACCESS_H_
#define _SHR_SW_STATE_DPP_SOC_JERICHO_TM_IS_FABRIC_LINK_ALLOWED_ACCESS_H_

/********************************* access calbacks definitions *************************************/
/* this set of callbacks, are the callbacks used in the access calbacks struct 'sw_state_cbs_t' to */
/* access the data in 'sw_state_t'.                                                                */
/* the calbacks are inserted into the access struct by 'sw_state_access_cb_init'.                  */
/***************************************************************************************************/

#ifdef BCM_PETRA_SUPPORT
#if defined(BCM_PETRA_SUPPORT)
/* implemented by: sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_alloc_bitmap */
typedef int (*sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_alloc_bitmap_cb)(
    int unit, int _nof_bits_to_alloc);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#endif /* BCM_PETRA_SUPPORT*/ 

#ifdef BCM_PETRA_SUPPORT
#if defined(BCM_PETRA_SUPPORT)
/* implemented by: sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_free */
typedef int (*sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_free_cb)(
    int unit);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#endif /* BCM_PETRA_SUPPORT*/ 

#ifdef BCM_PETRA_SUPPORT
#if defined(BCM_PETRA_SUPPORT)
/* implemented by: sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_set */
typedef int (*sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_set_cb)(
    int unit, int _bit_num);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#endif /* BCM_PETRA_SUPPORT*/ 

#ifdef BCM_PETRA_SUPPORT
#if defined(BCM_PETRA_SUPPORT)
/* implemented by: sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_clear */
typedef int (*sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_clear_cb)(
    int unit, int _bit_num);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#endif /* BCM_PETRA_SUPPORT*/ 

#ifdef BCM_PETRA_SUPPORT
#if defined(BCM_PETRA_SUPPORT)
/* implemented by: sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_get */
typedef int (*sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_get_cb)(
    int unit, int _bit_num, uint8* result);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#endif /* BCM_PETRA_SUPPORT*/ 

#ifdef BCM_PETRA_SUPPORT
#if defined(BCM_PETRA_SUPPORT)
/* implemented by: sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_range_read */
typedef int (*sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_range_read_cb)(
    int unit, int sw_state_bmp_first, int result_first, int _range, SHR_BITDCL *result);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#endif /* BCM_PETRA_SUPPORT*/ 

#ifdef BCM_PETRA_SUPPORT
#if defined(BCM_PETRA_SUPPORT)
/* implemented by: sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_range_write */
typedef int (*sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_range_write_cb)(
    int unit, int sw_state_bmp_first, int input_bmp_first, int _range, SHR_BITDCL *input_bmp);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#endif /* BCM_PETRA_SUPPORT*/ 

#ifdef BCM_PETRA_SUPPORT
#if defined(BCM_PETRA_SUPPORT)
/* implemented by: sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_range_and */
typedef int (*sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_range_and_cb)(
    int unit, int _first, int _count, SHR_BITDCL *input_bmp);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#endif /* BCM_PETRA_SUPPORT*/ 

#ifdef BCM_PETRA_SUPPORT
#if defined(BCM_PETRA_SUPPORT)
/* implemented by: sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_range_or */
typedef int (*sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_range_or_cb)(
    int unit, int _first, int _count, SHR_BITDCL *input_bmp);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#endif /* BCM_PETRA_SUPPORT*/ 

#ifdef BCM_PETRA_SUPPORT
#if defined(BCM_PETRA_SUPPORT)
/* implemented by: sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_range_xor */
typedef int (*sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_range_xor_cb)(
    int unit, int _first, int _count, SHR_BITDCL *input_bmp);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#endif /* BCM_PETRA_SUPPORT*/ 

#ifdef BCM_PETRA_SUPPORT
#if defined(BCM_PETRA_SUPPORT)
/* implemented by: sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_range_remove */
typedef int (*sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_range_remove_cb)(
    int unit, int _first, int _count, SHR_BITDCL *input_bmp);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#endif /* BCM_PETRA_SUPPORT*/ 

#ifdef BCM_PETRA_SUPPORT
#if defined(BCM_PETRA_SUPPORT)
/* implemented by: sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_range_negate */
typedef int (*sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_range_negate_cb)(
    int unit, int _first, int _count);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#endif /* BCM_PETRA_SUPPORT*/ 

#ifdef BCM_PETRA_SUPPORT
#if defined(BCM_PETRA_SUPPORT)
/* implemented by: sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_range_clear */
typedef int (*sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_range_clear_cb)(
    int unit, int _first, int _count);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#endif /* BCM_PETRA_SUPPORT*/ 

#ifdef BCM_PETRA_SUPPORT
#if defined(BCM_PETRA_SUPPORT)
/* implemented by: sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_range_set */
typedef int (*sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_range_set_cb)(
    int unit, int _first, int _count);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#endif /* BCM_PETRA_SUPPORT*/ 

#ifdef BCM_PETRA_SUPPORT
#if defined(BCM_PETRA_SUPPORT)
/* implemented by: sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_range_null */
typedef int (*sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_range_null_cb)(
    int unit, int _first, int _count, uint8 *result);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#endif /* BCM_PETRA_SUPPORT*/ 

#ifdef BCM_PETRA_SUPPORT
#if defined(BCM_PETRA_SUPPORT)
/* implemented by: sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_range_test */
typedef int (*sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_range_test_cb)(
    int unit, int _first, int _count, uint8 *result);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#endif /* BCM_PETRA_SUPPORT*/ 

#ifdef BCM_PETRA_SUPPORT
#if defined(BCM_PETRA_SUPPORT)
/* implemented by: sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_range_eq */
typedef int (*sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_range_eq_cb)(
    int unit, SHR_BITDCL *input_bmp, int _first, int _count, uint8 *result);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#endif /* BCM_PETRA_SUPPORT*/ 

#ifdef BCM_PETRA_SUPPORT
#if defined(BCM_PETRA_SUPPORT)
/* implemented by: sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_range_count */
typedef int (*sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_bit_range_count_cb)(
    int unit, int _first, int _range, int *result);
#endif /* defined(BCM_PETRA_SUPPORT)*/ 
#endif /* BCM_PETRA_SUPPORT*/ 

/*********************************** access calbacks struct ****************************************/
/* this set of structs, rooted at 'sw_state_cbs_t' define the access layer for the entire SW state.*/
/* use this tree to alloc/free/set/get fields in the sw state rooted at 'sw_state_t'.              */
/* NOTE: 'sw_state_t' data should not be accessed directly.                                        */
/***************************************************************************************************/


int sw_state_dpp_soc_jericho_tm_is_fabric_link_allowed_access_cb_init(int unit);

#endif /* _SHR_SW_STATE_DPP_SOC_JERICHO_TM_IS_FABRIC_LINK_ALLOWED_ACCESS_H_ */
