/* 
 * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
 * 
 * Copyright 2007-2020 Broadcom Inc. All rights reserved.
*/

#ifndef __SOC_TMC_API_STATISTICS_INCLUDED__

#define __SOC_TMC_API_STATISTICS_INCLUDED__




#include <soc/dpp/SAND/Utils/sand_header.h>
#include <soc/dpp/SAND/Utils/sand_64cnt.h>
#include <soc/dpp/SAND/Management/sand_general_macros.h>
#include <soc/dpp/TMC/tmc_api_ingress_traffic_mgmt.h>
#include <soc/dpp/SAND/Management/sand_error_code.h>










      


#define  SOC_TMC_STAT_PER_IFP_NOF_CNTS 4












typedef struct
{
  SOC_SAND_MAGIC_NUM_VAR
  
  uint32 ifp_id[SOC_TMC_STAT_PER_IFP_NOF_CNTS];

} SOC_TMC_STAT_IFP_SELECT_INFO;

typedef struct
{
  SOC_SAND_MAGIC_NUM_VAR
  
  uint32 voq_id;
  
  uint32 enable_also_mask;

} SOC_TMC_STAT_VOQ_SELECT_INFO;

typedef struct
{
  SOC_SAND_MAGIC_NUM_VAR
  
  SOC_TMC_ITM_VSQ_GROUP vsq_grp_id;
  
  uint32 vsq_in_grp_id;
  
  uint32 enable_also_mask;

} SOC_TMC_STAT_VSQ_SELECT_INFO;


typedef enum
{
  

  
  SOC_TMC_IDR_RECEIVED_PKT_PORT_0_CNT = 0,
  
  SOC_TMC_IDR_RECEIVED_PKT_PORT_1_CNT,
  
  SOC_TMC_IDR_RECEIVED_PKT_PORT_2_CNT,
  
  SOC_TMC_IDR_RECEIVED_PKT_PORT_3_CNT,
  
  SOC_TMC_IDR_REASSEMBLY_ERR_CNT,
 
  SOC_TMC_IQM_GLOBAL_RESOURCE_CNT,
  
  SOC_TMC_IQM_VOQ_ENQ_PROG_PACKET_CNT,
  
  SOC_TMC_IQM_VOQ_DEQ_PROG_PACKET_CNT,
  
  SOC_TMC_IQM_VSQ_ENQ_PROG_PACKET_CNT,
  
  SOC_TMC_IQM_VSQ_DEQ_PROG_PACKET_CNT,
 
  SOC_TMC_IQM_ENQUEUE_PACKET_CNT,
 
  SOC_TMC_IQM_DEQUEUE_PACKET_CNT,
 
 SOC_TMC_IQM_TOTAL_DISCARDED_PACKET_CNT,
 
 SOC_TMC_IQM_DELETED_PACKET_CNT,
 
 SOC_TMC_IQM_ISP_PACKET_CNT,
  
 SOC_TMC_IQM_REJECTED_PACKET_LACK_RESOURCE_DBUFFS_CNT,
  
 SOC_TMC_IQM_REJECTED_PACKET_LACK_RESOURCE_DBD_CNT,
  
   SOC_TMC_IQM_REJECTED_BDB_PROTCT_PKT_CNT,
  
   SOC_TMC_IQM_REJECTED_OC_BD_PKT_CNT,
  
   SOC_TMC_IQM_IRR_RJCT_SN_ERR_PKT_CNT,
  
   SOC_TMC_IQM_IRR_RJCT_MC_ERR_PKT_CNT,
  
   SOC_TMC_IQM_IDR_RJCT_RSRC_ERR_PKT_CNT,
  
   SOC_TMC_IQM_IDR_RJCT_QNVALID_ERR_PKT_CNT,
  
   SOC_TMC_IPT_CRC_ERR_CNT,
  
   SOC_TMC_EGQ_CPU_PACKET_CNT,
  
   SOC_TMC_EGQ_IPT_PACKET_CNT,
  
   SOC_TMC_EGQ_FDR_PACKET_CNT,
  
   SOC_TMC_EGQ_RQP_PACKET_CNT,
  
   SOC_TMC_EGQ_RQP_DISCARD_PACKET_CNT,
  
   SOC_TMC_EGQ_EHP_UNICAST_PACKET_CNT,
  
   SOC_TMC_EGQ_EHP_MULTICAST_HIGH_PACKET_CNT,
  
   SOC_TMC_EGQ_EHP_MULTICAST_LOW_PACKET_CNT,
  
   SOC_TMC_EGQ_EHP_DISCARD_PACKET_CNT,
  
   SOC_TMC_EGQ_PQP_UNICAST_HIGH_PACKET_CNT,
  
   SOC_TMC_EGQ_PQP_UNICAST_LOW_PACKET_CNT,
  
   SOC_TMC_EGQ_PQP_MULTICAST_HIGH_PACKET_CNT,
  
   SOC_TMC_EGQ_PQP_MULTICAST_LOW_PACKET_CNT,
  
   SOC_TMC_EGQ_PQP_UNICAST_HIGH_BYTES_CNT,
  
   SOC_TMC_EGQ_PQP_UNICAST_LOW_BYTES_CNT,
  
   SOC_TMC_EGQ_PQP_MULTICAST_HIGH_BYTES_CNT,
  
   SOC_TMC_EGQ_PQP_MULTICAST_LOW_BYTES_CNT,
  
   SOC_TMC_EGQ_PQP_DISCARD_UNICAST_PACKET_CNT,
  
   SOC_TMC_EGQ_PQP_DISCARD_MULTICAST_PACKET_CNT,
  
   SOC_TMC_EGQ_FQP_PACKET_CNT,
  
   SOC_TMC_EGQ_FABRIC_ROUTE_SOP_CNT,
  
   SOC_TMC_EGQ_LOCAL_ROUTE_SOP_CNT,
  
   SOC_TMC_EGQ_CPU_INTERFACE_SOP_CNT,
  
   SOC_TMC_EGQ_PACEKT_REASSEMBLY_OUTPUT_SOP_CNT,
  
   SOC_TMC_EGQ_PACEKT_EPE_PACKET_CNT,

 
  SOC_TMC_FCR_PROGRAMMABLE_CELLS_CNT,
 
  SOC_TMC_FCR_CREDIT_CELLS_CNT,
  
  SOC_TMC_FCT_FLOW_STATUS_CELLS_CNT,
  
  SOC_TMC_FCT_REACHABILITY_CELLS_CNT,
 
  SOC_TMC_FCT_TOTAL_CELLS_CNT,
 
  SOC_TMC_FCT_CREDIT_DROP_CNT,
 
  SOC_TMC_FCT_FS_DROP_CNT,
 
  SOC_TMC_FCT_REACH_DROP_CNT,
 
  SOC_TMC_FDT_DATA_CELL_CNT,
 
  SOC_TMC_FDT_TDM_DATA_CELL_CNT,
 
  SOC_TMC_FDT_LOCAL_TDM_DATA_CELL_CNT,
 
  SOC_TMC_SCH_CREDIT_CNT,
  
  SOC_TMC_IRE_CPU_PACKET_CNT,
  
  SOC_TMC_IRE_OLP_PACKET_CNT,
 
  SOC_TMC_IRE_NIFA_PACKET_CNT,
 
  SOC_TMC_IRE_NIFB_PACKET_CNT,
 
  SOC_TMC_IRE_RCYCLE_PACKET_CNT,

  SOC_TMC_NOF_COUNTER_TYPES ,
  
   SOC_TMC_IQM_CNM_PKT_CNT = SOC_TMC_NOF_COUNTER_TYPES,
  
  SOC_TMC_IQM_REJECTED_CNM_PKT_CNT,
  
  SOC_TMC_IQM_DRAM_DYNAMIC_REJECT_PKT_CNT,
  
  SOC_TMC_IQM_DRAM_DYNAMIC_SIZE_CNT,
   
  SOC_TMC_IQM_BDB_CNT,
 
  SOC_TMC_IQM_CNTING_CMD_REC_PROC_A_CNT,
  
  SOC_TMC_IQM_CNTING_CMD_REC_PROC_B_CNT,
  
  SOC_TMC_IQM_CPU_RD_REQ_PROC_A_CNT,
  
  SOC_TMC_IQM_CPU_RD_REQ_PROC_B_CNT,
  
  SOC_TMC_IQM_NOF_CNTERS_OVER_TH_A_CNT,
  
  SOC_TMC_IQM_NOF_CNTERS_OVER_TH_B_CNT,
  
  SOC_TMC_IQM_NOF_NON_ZERO_CNTERS_A_CNT,
  
  SOC_TMC_IQM_NOF_NON_ZERO_CNTERS_B_CNT,
  
  SOC_TMC_IQM_METER_A_CIR_LB_NOF_BYTES_CNT,
  
  SOC_TMC_IQM_METER_B_CIR_LB_NOF_BYTES_CNT,
  
  SOC_TMC_IQM_METER_A_EIR_LB_NOF_BYTES_CNT,
  
  SOC_TMC_IQM_METER_B_EIR_LB_NOF_BYTES_CNT,

  
  SOC_TMC_FCR_CREDIT_CELLS_TX_CNT,
  
  SOC_TMC_FCT_FLOW_STATUS_CELLS_TX_CNT,
  
  SOC_TMC_EGQ_CNM_PACKET_CNT,
  
  SOC_TMC_EGQ_PACKET_AGED_CNT

} SOC_TMC_STAT_COUNTER_TYPE;

typedef struct
{
  SOC_SAND_MAGIC_NUM_VAR
  
  SOC_SAND_64CNT  counters[SOC_TMC_NOF_COUNTER_TYPES];
} SOC_TMC_STAT_ALL_STATISTIC_COUNTERS;

typedef enum
{
  
  SOC_TMC_STAT_PRINT_LEVEL_ERROR_ONLY=0,
  
  SOC_TMC_STAT_PRINT_LEVEL_PACKET_WALKTHROUGH=1,
  
  SOC_TMC_STAT_PRINT_LEVEL_ALL=2,
  
  SOC_TMC_STAT_NOF_PRINT_LEVELS=3
}SOC_TMC_STAT_PRINT_LEVEL;











void
  SOC_TMC_STAT_ALL_STATISTIC_COUNTERS_clear(
    SOC_SAND_OUT SOC_TMC_STAT_ALL_STATISTIC_COUNTERS *info
  );

void
  SOC_TMC_STAT_IFP_SELECT_INFO_clear(
    SOC_SAND_OUT SOC_TMC_STAT_IFP_SELECT_INFO *info
  );

void
  SOC_TMC_STAT_VOQ_SELECT_INFO_clear(
    SOC_SAND_OUT SOC_TMC_STAT_VOQ_SELECT_INFO *info
  );

void
  SOC_TMC_STAT_VSQ_SELECT_INFO_clear(
    SOC_SAND_OUT SOC_TMC_STAT_VSQ_SELECT_INFO *info
  );

#if SOC_TMC_DEBUG_IS_LVL1

const char*
  SOC_TMC_STAT_COUNTER_TYPE_to_string(
    SOC_SAND_IN SOC_TMC_STAT_COUNTER_TYPE  counter_type,
    SOC_SAND_IN uint32                 short_format
  );

uint32
  soc_tmcstat_all_counters_get_and_print(
    SOC_SAND_IN  int                            unit,
    SOC_SAND_IN  uint32                            sampling_period
  );

void
  SOC_TMC_STAT_IFP_SELECT_INFO_print(
    SOC_SAND_IN  SOC_TMC_STAT_IFP_SELECT_INFO *info
  );

void
  SOC_TMC_STAT_VOQ_SELECT_INFO_print(
    SOC_SAND_IN  SOC_TMC_STAT_VOQ_SELECT_INFO *info
  );

void
  SOC_TMC_STAT_VSQ_SELECT_INFO_print(
    SOC_SAND_IN  SOC_TMC_STAT_VSQ_SELECT_INFO *info
  );

#endif 



#include <soc/dpp/SAND/Utils/sand_footer.h>


#endif
