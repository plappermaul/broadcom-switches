#
# file: bcmcfg_trm_resources_ha_config.yml
#
# DO NOT EDIT THIS FILE!
# This file is auto-generated by cfg from bcmtrm.cfg.yml files.
#
# Tool: $SDK/INTERNAL/cfg/bin/cfg
#
# Edits to this file will be lost when it is regenerated.
#
# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
# 
# Copyright 2007-2020 Broadcom Inc. All rights reserved.
#
---
component:
    bcmcfg_trm_resources_sw_component:
        bcmcfg_trm_resources_ha_config_t:
            comment: |-
                 \brief Software component configuration for transaction manager resources.\n
                  * The software component configuration for transaction manager resources is derived\n
                  * from the BCMCFG configuration YAML file using the following\n
                  * schema:\n
                  * \code{.unparsed}\n
                  *  component:\n
                  *    trm_resources:\n
                  *      max_entries: integer\n
                  *      max_transactions: integer\n
                  * \endcode
            type: struct
            fields:
                max_entries:
                    type: uint32_t
                    comment: |-
                        \brief Maximum number of system wide active entries.
                             *
                             * The number of entries are shared between all the units.
                             * Entry allocation and free operations are fast due to allocation
                             * of the entry structure from a free list of structures. The OS
                             * memory allocation is done conservatively only when the free
                             * list is empty. Then, the system allocates another chunk of
                             * entry structures and adds them onto the free list.
                             * This value is used as the upper bound for the number of entries
                             * that will be allocated from the OS. The purpose of this upper
                             * bound is to be able to detect leakage of entry resources.
                             * Memory leakage can happen if the application allocates an entry
                             * but never frees it later.
                             * Note that entries that are part of a transaction will be
                             * automatically freed once the transaction is freed.\n
                             * Also note that this number restricts the number of entries that
                             * can be included in a single transaction.\n
                             * The default value is 512. Setting this number too low might
                             * cause the application to fail an attempt of allocating an entry.
                             * Low number may also reduce the system performance as more
                             * operations will have to be sequenced.
                max_transactions:
                    type: uint32_t
                    comment: |-
                        \brief Maximum number of system wide active transactions.
                             *
                             * Similar to the max_entries, the max_transactions is the upper
                             * bound number of the instances of active transactions in the
                             * system. The purpose of this limit is to detect memory leaks
                             * where a transaction was allocated but never freed.\n
                             * The default value is 128.
...
