BCM.0> cint td4_hsdk_l2_callback_register_on_trunk.c             
execute(): Start                                                 
config show; attach; version                                     
    os=unix                                                      
Attach: Unit 0 (BCM56880_A0): attached (current unit)            
Broadcom Command Monitor: Copyright (c) 1998-2019 Broadcom       
Release: sdk-6.5.18 built 20191010 (Thu Oct 10 18:45:20 2019)    
From sdkrel@lc-sj1-3890:/projects/ntsw_sw14_scratch/sdkrel/regress/sdk-master/src/sdk.hsdk.56880
Platform: SLK_BCM957812                                                                         
OS: Unix (Posix)                                                                                

Variant drivers:
     (null), BCM56880_A0_BASE, BCM56880_A0_BASE_APP, BCM56880_A0_DNA_4_4_11
     BCM56880_A0_DNA_4_4_9, BCM56880_A0_IDNA_4_4_9                         
~~~ #1) test_setup(): ** start **                                          
ingress_port_multi_setup port: 1 setup                                     
ingress_port_multi_setup port: 2 setup                                     
egress_port_multi_setup port: 3 setup                                      
egress_port_multi_setup port: 4 setup                                      
~~~ #1) test_setup(): ** end **                                            
~~~ #2) setup_l2_forwarding(): ** start **                                 
create vlan 20                                                             
Ingress trunk ports configuration                                          
Trunk Create, tid=1, rv=Ok                                                 
Trunk Set Ok                                                               
Egress trunk ports configuration                                           
Trunk Create, tid=2, rv=Ok                                                 
Trunk Set Ok                                                               
setup callback function for l2 event                                       
~~~ #2) setup_l2_forwarding(): ** end **                                   
~~~ #3) verify(): ** start **                                              
vlan show                                                                  
vlan 1  ports cpu,cd,xe (0x00000000000000000000000000000000000000004000f0000f4000f0000f4000f0000f4000f0001f), untagged cd,xe (0x00000000000000000000000000000000000000004000f0000f4000f0000f4000f0000f4000f0001e)                           
vlan 20 ports cd0-cd3 (0x0000000000000000000000000000000000000000000000000000000000000000000000000000001e), untagged cd0-cd3 (0x0000000000000000000000000000000000000000000000000000000000000000000000000000001e)                           
l2 show                                                                                                               
mac=00:00:00:00:00:11 vlan=20 GPORT=0x0 Trunk=2 Static                                                                

Sending unicast packet to ingress port:1
Packet from data=<>, length=60          
Warning:  Untagged packet read from file for tx.

L2_EVENT! MAC=00:00:00:00:00:02  VID=20  TRUNK=1  Operation=BCM_L2_CALLBACK_LEARN_EVENT
[bcmPWN.0]                                                                             
[bcmPWN.0]Packet[1]: data[0000]: {000000000011} {000000000002} 8100 0014               
[bcmPWN.0]Packet[1]: data[0010]: 0806 0001 0800 0604 0001 0000 0000 0002               
[bcmPWN.0]Packet[1]: data[0020]: 0a0a 0a02 0000 0000 0000 1414 1402 0001               
[bcmPWN.0]Packet[1]: data[0030]: 0203 0405 0607 0809 0a0b 0c0d bc94 977f               
[bcmPWN.0]                                                                             
[bcmPWN.0]Packet[1]:                                                                   
Packet[1]:   Ethernet: dst<00:00:00:00:00:11> src<00:00:00:00:00:02> Tagged Packet ProtID<0x8100> Ctrl<0x0014> ARP (IP and CHAOS)                                                                                                           
Packet[1]:   ARP: Invalid (0) fmt<1> src-ha<00:00:00:00:00:02> src_pa<10:10:10:2> tar_ha<00:00:00:00:00:00> tar_pa<20:20:20:2>                                                                                                              
[bcmPWN.0]                                                                                                            
[bcmPWN.0]Packet[2]: data[0000]: {000000000011} {000000000002} 8100 0001                                              
[bcmPWN.0]Packet[2]: data[0010]: 0806 0001 0800 0604 0001 0000 0000 0002                                              
[bcmPWN.0]Packet[2]: data[0020]: 0a0a 0a02 0000 0000 0000 1414 1402 0001                                              
[bcmPWN.0]Packet[2]: data[0030]: 0203 0405 0607 0809 0a0b 0c0d bc94 977f                                              
[bcmPWN.0]                                                                                                            
[bcmPWN.0]Packet[2]:                                                                                                  
Packet[2]:   Ethernet: dst<00:00:00:00:00:11> src<00:00:00:00:00:02> Tagged Packet ProtID<0x8100> Ctrl<0x0001> ARP (IP and CHAOS)                                                                                                           
Packet[2]:   ARP: Invalid (0) fmt<1> src-ha<00:00:00:00:00:02> src_pa<10:10:10:2> tar_ha<00:00:00:00:00:00> tar_pa<20:20:20:2>                                                                                                              
show c                                                                                                                
MC_PERQ_PKT(0).cpu0                   :                     1                  +1                                     
MC_PERQ_BYTE(0).cpu0                  :                   140                +140                                     
XLMIB_TBYT.cd0                        :                    64                 +64                                     
XLMIB_RBYT.cd0                        :                    64                 +64                                     
XLMIB_TPOK.cd0                        :                     1                  +1                                     
XLMIB_RPOK.cd0                        :                     1                  +1                                     
XLMIB_TUCA.cd0                        :                     1                  +1                                     
XLMIB_RUCA.cd0                        :                     1                  +1                                     
XLMIB_TPKT.cd0                        :                     1                  +1                                     
XLMIB_RPKT.cd0                        :                     1                  +1                                     
XLMIB_T64.cd0                         :                     1                  +1                                     
XLMIB_R64.cd0                         :                     1                  +1                                     
XLMIB_RPRM.cd0                        :                     1                  +1                                     
XLMIB_TBYT.cd3                        :                    64                 +64                                     
XLMIB_RBYT.cd3                        :                    64                 +64                                     
XLMIB_TPOK.cd3                        :                     1                  +1                                     
XLMIB_RPOK.cd3                        :                     1                  +1                                     
XLMIB_TUCA.cd3                        :                     1                  +1                                     
XLMIB_RUCA.cd3                        :                     1                  +1                                     
XLMIB_TPKT.cd3                        :                     1                  +1                                     
XLMIB_RPKT.cd3                        :                     1                  +1                                     
XLMIB_T64.cd3                         :                     1                  +1                                     
XLMIB_R64.cd3                         :                     1                  +1                                     
XLMIB_RPRM.cd3                        :                     1                  +1                                     
UC_PERQ_PKT(0).cd3                    :                     1                  +1                                     
UC_PERQ_BYTE(0).cd3                   :                    64                 +64                                     

verify l2 learning:
MAC: 00:00:00:00:00:02  VID:20  TRUNK:1 
MAC: 00:00:00:00:00:11  VID:20  TRUNK:2 

Sending unicast packet to ingress port:2
Packet from data=<>, length=60          
Warning:  Untagged packet read from file for tx.
[bcmPWN.0]                                      
[bcmPWN.0]Packet[3]: data[0000]: {000000000011} {000000000033} 8100 0014
[bcmPWN.0]Packet[3]: data[0010]: 0806 0001 0800 0604 0001 0000 0000 0002 
[bcmPWN.0]Packet[3]: data[0020]: 0a0a 0a02 0000 0000 0000 1414 1402 0001 
[bcmPWN.0]Packet[3]: data[0030]: 0203 0405 0607 0809 0a0b 0c0d bc94 977f 
[bcmPWN.0]                                                               
[bcmPWN.0]Packet[3]:                                                     
Packet[3]:   Ethernet: dst<00:00:00:00:00:11> src<00:00:00:00:00:33> Tagged Packet ProtID<0x8100> Ctrl<0x0014> ARP (IP and CHAOS)                                                                                                           
Packet[3]:   ARP: Invalid (0) fmt<1> src-ha<00:00:00:00:00:02> src_pa<10:10:10:2> tar_ha<00:00:00:00:00:00> tar_pa<20:20:20:2>                                                                                                              
[bcmPWN.0]                                                                                                            
[bcmPWN.0]Packet[4]: data[0000]: {000000000011} {000000000033} 8100 0001                                              
[bcmPWN.0]Packet[4]: data[0010]: 0806 0001 0800 0604 0001 0000 0000 0002                                              
[bcmPWN.0]Packet[4]: data[0020]: 0a0a 0a02 0000 0000 0000 1414 1402 0001                                              
[bcmPWN.0]Packet[4]: data[0030]: 0203 0405 0607 0809 0a0b 0c0d bc94 977f                                              
[bcmPWN.0]                                                                                                            
[bcmPWN.0]Packet[4]:                                                                                                  
Packet[4]:   Ethernet: dst<00:00:00:00:00:11> src<00:00:00:00:00:33> Tagged Packet ProtID<0x8100> Ctrl<0x0001> ARP (IP and CHAOS)                                                                                                           
Packet[4]:   ARP: Invalid (0) fmt<1> src-ha<00:00:00:00:00:02> src_pa<10:10:10:2> tar_ha<00:00:00:00:00:00> tar_pa<20:20:20:2>                                                                                                              

L2_EVENT! MAC=00:00:00:00:00:33  VID=20  TRUNK=1  Operation=BCM_L2_CALLBACK_LEARN_EVENT
show c                                                                                 
MC_PERQ_PKT(0).cpu0                   :                     1                  +1      
MC_PERQ_BYTE(0).cpu0                  :                   140                +140      
XLMIB_TBYT.cd1                        :                    64                 +64      
XLMIB_RBYT.cd1                        :                    64                 +64      
XLMIB_TPOK.cd1                        :                     1                  +1      
XLMIB_RPOK.cd1                        :                     1                  +1      
XLMIB_TUCA.cd1                        :                     1                  +1      
XLMIB_RUCA.cd1                        :                     1                  +1      
XLMIB_TPKT.cd1                        :                     1                  +1      
XLMIB_RPKT.cd1                        :                     1                  +1      
XLMIB_T64.cd1                         :                     1                  +1      
XLMIB_R64.cd1                         :                     1                  +1
XLMIB_RPRM.cd1                        :                     1                  +1
XLMIB_TBYT.cd2                        :                    64                 +64
XLMIB_RBYT.cd2                        :                    64                 +64
XLMIB_TPOK.cd2                        :                     1                  +1
XLMIB_RPOK.cd2                        :                     1                  +1
XLMIB_TUCA.cd2                        :                     1                  +1
XLMIB_RUCA.cd2                        :                     1                  +1
XLMIB_TPKT.cd2                        :                     1                  +1
XLMIB_RPKT.cd2                        :                     1                  +1
XLMIB_T64.cd2                         :                     1                  +1
XLMIB_R64.cd2                         :                     1                  +1
XLMIB_RPRM.cd2                        :                     1                  +1
UC_PERQ_PKT(0).cd2                    :                     1                  +1
UC_PERQ_BYTE(0).cd2                   :                    64                 +64

verify l2 learning:
MAC: 00:00:00:00:00:02  VID:20  TRUNK:1
MAC: 00:00:00:00:00:11  VID:20  TRUNK:2
MAC: 00:00:00:00:00:33  VID:20  TRUNK:1
~~~ #3) verify(): ** end **
bcm_error_t $$ = BCM_E_NONE (0)
execute(): End
BCM.0>
